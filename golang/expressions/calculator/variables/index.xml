<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> â€“ Variables</title>
    <link>/golang/expressions/calculator/variables/</link>
    <description>Recent content in Variables on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="/golang/expressions/calculator/variables/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Golang: IVariable</title>
      <link>/golang/expressions/calculator/variables/ivariable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/expressions/calculator/variables/ivariable/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The IVariable interface allows you to define a variable.&lt;/p&gt;
&lt;h3 id=&#34;methods&#34;&gt;Methods&lt;/h3&gt;
&lt;h4 id=&#34;name&#34;&gt;Name&lt;/h4&gt;
&lt;p&gt;The variable name.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Name() string&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: string - variable name.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;value&#34;&gt;Value&lt;/h4&gt;
&lt;p&gt;The variable value.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Value() &lt;a href=&#34;../../../variants/variant&#34;&gt;*Variant&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../../../variants/variant&#34;&gt;*Variant&lt;/a&gt; - variable value&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;setvalue&#34;&gt;SetValue&lt;/h4&gt;
&lt;p&gt;Sets the variable value.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;SetValue(value &lt;a href=&#34;../../../variants/variant&#34;&gt;*Variant&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: &lt;a href=&#34;../../../variants/variant&#34;&gt;*Variant&lt;/a&gt; - the variable value.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Golang: IVariableCollection</title>
      <link>/golang/expressions/calculator/variables/ivariable_collection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/expressions/calculator/variables/ivariable_collection/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The IVariableCollection interface defines a list of variables.&lt;/p&gt;
&lt;h3 id=&#34;methods&#34;&gt;Methods&lt;/h3&gt;
&lt;h4 id=&#34;add&#34;&gt;Add&lt;/h4&gt;
&lt;p&gt;Adds a new variable to the collection.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Add(variable &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;variable&lt;/strong&gt;: &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt; - variable to be added.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;clear&#34;&gt;Clear&lt;/h4&gt;
&lt;p&gt;Clears the collection.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Clear()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;clearvalues&#34;&gt;ClearValues&lt;/h4&gt;
&lt;p&gt;Clears all stored variables (assigns nil values).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ClearValues()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;findbyname&#34;&gt;FindByName&lt;/h4&gt;
&lt;p&gt;Clears all stored variables (assigns nil values).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FindByName(name string) &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;findindexbyname&#34;&gt;findIndexByName&lt;/h4&gt;
&lt;p&gt;Finds a variable index in the list by the variable&amp;rsquo;s name.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FindIndexByName(name string) int&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: string - name of the variable to be found.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: int - variable index in the list or &lt;em&gt;-1&lt;/em&gt; if variable was not found.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;get&#34;&gt;Get&lt;/h4&gt;
&lt;p&gt;Gets a variable by its index.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Get(index int) &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;index&lt;/strong&gt;: string - variable index.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt; - retrieved variable.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;getall&#34;&gt;getAll&lt;/h4&gt;
&lt;p&gt;Gets all the variables stored in the collection.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GetAll() &lt;a href=&#34;../ivariable&#34;&gt;[]IVariable&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../ivariable&#34;&gt;[]IVariable&lt;/a&gt; - list with stored variables.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;locate&#34;&gt;Locate&lt;/h4&gt;
&lt;p&gt;Finds a variable in the list or creates a new one if the variable was not found.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Locate(name string) &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: string - name of the variable to be found.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt; - found or created variable.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;length&#34;&gt;Length&lt;/h4&gt;
&lt;p&gt;Gets the number of variables stored in the collection.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Length() int&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: int - number of stored variables.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;remove&#34;&gt;Remove&lt;/h4&gt;
&lt;p&gt;Removes a variable by its index.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Remove(index int)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;index&lt;/strong&gt;: int - index of the variable to be removed.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;removebyname&#34;&gt;RemoveByName&lt;/h4&gt;
&lt;p&gt;Removes a variable by it&amp;rsquo;s name.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;RemoveByName(name string)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: string - name of the variable to be removed.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Golang: Variable</title>
      <link>/golang/expressions/calculator/variables/variable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/expressions/calculator/variables/variable/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The Variable class allows you to implement a variable holder object.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;h4 id=&#34;emptyvariable&#34;&gt;EmptyVariable&lt;/h4&gt;
&lt;p&gt;Constructs a new empty variable.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;EmptyVariable(name string) &lt;a href=&#34;../../../variants/variant&#34;&gt;*Variant&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: string - The name of this variable.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;newvariable&#34;&gt;NewVariable&lt;/h4&gt;
&lt;p&gt;Constructs this variable with name and value.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NewVariable(name string, value &lt;a href=&#34;../../../variants/variant&#34;&gt;*Variant&lt;/a&gt;) &lt;a href=&#34;&#34;&gt;*Variable&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: string - name of this variable.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: &lt;a href=&#34;../../../variants/variant&#34;&gt;*Variant&lt;/a&gt; - value of this variable.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;methods&#34;&gt;Methods&lt;/h3&gt;
&lt;h4 id=&#34;name&#34;&gt;Name&lt;/h4&gt;
&lt;p&gt;Name of the variable&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(c &lt;a href=&#34;&#34;&gt;*Variable&lt;/a&gt;) Name() string&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: string - variable name.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;value&#34;&gt;Value&lt;/h4&gt;
&lt;p&gt;Gets the variable&amp;rsquo;s value.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(c &lt;a href=&#34;&#34;&gt;*Variable&lt;/a&gt;) Value() &lt;a href=&#34;../../../variants/variant&#34;&gt;*Variant&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../../../variants/variant&#34;&gt;*Variant&lt;/a&gt; - variable value.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;setvalue&#34;&gt;SetValue&lt;/h4&gt;
&lt;p&gt;Sets the variable&amp;rsquo;s value.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(c &lt;a href=&#34;&#34;&gt;*Variable&lt;/a&gt;) SetValue(value &lt;a href=&#34;../../../variants/variant&#34;&gt;*Variant&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: &lt;a href=&#34;../../../variants/variant&#34;&gt;*Variant&lt;/a&gt; - variable&amp;rsquo;s value.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Golang: VariableCollection</title>
      <link>/golang/expressions/calculator/variables/variable_collection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/expressions/calculator/variables/variable_collection/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements&lt;/strong&gt;: &lt;a href=&#34;../ivariable_collection&#34;&gt;IVariableCollection&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The VariableCollection allows you to implement a list of variables.&lt;/p&gt;
&lt;h3 id=&#34;methods&#34;&gt;Methods&lt;/h3&gt;
&lt;h4 id=&#34;add&#34;&gt;Add&lt;/h4&gt;
&lt;p&gt;Adds a new variable to the collection.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(c &lt;a href=&#34;&#34;&gt;*VariableCollection&lt;/a&gt;) Add(variable &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;variable&lt;/strong&gt;: &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt; - variable to be added.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;clear&#34;&gt;Clear&lt;/h4&gt;
&lt;p&gt;Clears the collection.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(c &lt;a href=&#34;&#34;&gt;*VariableCollection&lt;/a&gt;) Clear()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;clearvalues&#34;&gt;ClearValues&lt;/h4&gt;
&lt;p&gt;Clears all stored variables (assigns nil values).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(c &lt;a href=&#34;&#34;&gt;*VariableCollection&lt;/a&gt;) ClearValues()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;findbyname&#34;&gt;FindByName&lt;/h4&gt;
&lt;p&gt;Clears all stored variables (assigns nil values).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(c &lt;a href=&#34;&#34;&gt;*VariableCollection&lt;/a&gt;) FindByName(name string) IVariable&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: string - The variable name to be found.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt; - Variable or &lt;em&gt;nil&lt;/em&gt; if function was not found.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;findindexbyname&#34;&gt;FindIndexByName&lt;/h4&gt;
&lt;p&gt;Finds a variable&amp;rsquo;s index in the list by it&amp;rsquo;s name.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(c &lt;a href=&#34;&#34;&gt;*VariableCollection&lt;/a&gt;) FindIndexByName(name string) int&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: string - name of the variale to be found.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: int - variable&amp;rsquo;s index in the list or &lt;em&gt;-1&lt;/em&gt; if the variable was not found.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;get&#34;&gt;Get&lt;/h4&gt;
&lt;p&gt;Gets a variable by its index.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(c &lt;a href=&#34;&#34;&gt;*VariableCollection&lt;/a&gt;) Get(index int) &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;index&lt;/strong&gt;: string - variable&amp;rsquo;s index.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt; - retrieved variable.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;getall&#34;&gt;GetAll&lt;/h4&gt;
&lt;p&gt;Gets all variables stored in the collection&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(c &lt;a href=&#34;&#34;&gt;*VariableCollection&lt;/a&gt;) GetAll() &lt;a href=&#34;../ivariable&#34;&gt;[]IVariable&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../ivariable&#34;&gt;[]IVariable&lt;/a&gt; - list with variables.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;locate&#34;&gt;Locate&lt;/h4&gt;
&lt;p&gt;Finds a variable in the list or creates a new one if the variable was not found.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(c &lt;a href=&#34;&#34;&gt;*VariableCollection&lt;/a&gt;) Locate(name string) &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: string - name of the variable to be found.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt; - found or created variable.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;length&#34;&gt;Length&lt;/h4&gt;
&lt;p&gt;Gets the number of variables stored in the collection.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(c &lt;a href=&#34;&#34;&gt;*VariableCollection&lt;/a&gt;) Length() int&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: int - number of stored variables.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;remove&#34;&gt;Remove&lt;/h4&gt;
&lt;p&gt;Removes a variable by its index.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(c &lt;a href=&#34;&#34;&gt;*VariableCollection&lt;/a&gt;) Remove(index int)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;index&lt;/strong&gt;: int - index of the variable to be removed.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;removebyname&#34;&gt;RemoveByName&lt;/h4&gt;
&lt;p&gt;Removes a variable by it&amp;rsquo;s name.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(c &lt;a href=&#34;&#34;&gt;*VariableCollection&lt;/a&gt;) RemoveByName(name string)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: string - name of the variable to be removed.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
