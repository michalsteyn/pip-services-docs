<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> â€“ Build</title>
    <link>/golang/container/build/</link>
    <description>Recent content in Build on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="/golang/container/build/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Golang: DefaultContainerFactory</title>
      <link>/golang/container/build/default_container_factory/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/golang/container/build/default_container_factory/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../../../components/build/composite_factory&#34;&gt;CompositeFactory&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The DefaultContainerFactory class allows you to create factories used to create default container components by their descriptors. The factories included are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;../../../components/info/default_info_factory&#34;&gt;DefaultInfoFactory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../../components/log/default_logger_factory&#34;&gt;DefaultLoggerFactory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../../components/count/default_counters_factory&#34;&gt;DefaultCountersFactory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../../components/config/default_config_reader_factory&#34;&gt;DefaultConfigReaderFactory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../../components/cache/default_cache_factory&#34;&gt;DefaultCacheFactory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../../components/auth/default_credential_store_factory&#34;&gt;DefaultCredentialStoreFactory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../../components/connect/default_discovery_factory&#34;&gt;DefaultDiscoveryFactory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../../components/test/default_test_factory&#34;&gt;DefaultTestFactory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../../../components/trace/default_tracer_factory&#34;&gt;DefaultTracerFactory&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;h4 id=&#34;newdefaultcontainerfactoryfromfactories&#34;&gt;NewDefaultContainerFactoryFromFactories&lt;/h4&gt;
&lt;p&gt;Creates a new instance of the factory and sets nested factories.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NewDefaultContainerFactoryFromFactories(factories &amp;hellip;&lt;a href=&#34;../../../components/build/ifactory&#34;&gt;IFactory&lt;/a&gt;) &lt;a href=&#34;../../../components/build/composite_factory&#34;&gt;*CompositeFactory&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;factories&lt;/strong&gt;: &amp;hellip;&lt;a href=&#34;../../../components/build/ifactory&#34;&gt;IFactory&lt;/a&gt; - list of nested factories&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;newdefaultcontainerfactory&#34;&gt;NewDefaultContainerFactory&lt;/h4&gt;
&lt;p&gt;Create a new instance of the factory and sets nested factories.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NewDefaultContainerFactory() &lt;a href=&#34;../../../components/build/composite_factory&#34;&gt;*CompositeFactory&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;factorycomponentsbuildfactory&#34;&gt;&lt;a href=&#34;../../../components/build/factory&#34;&gt;Factory&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
