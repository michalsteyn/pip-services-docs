<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> â€“ Queues</title>
    <link>/dart/rabbitmq/queues/</link>
    <description>Recent content in Queues on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="/dart/rabbitmq/queues/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Dart: RabbitMQMessageQueue</title>
      <link>/dart/rabbitmq/queues/rabbitmq_message_queue/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/dart/rabbitmq/queues/rabbitmq_message_queue/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Extends:&lt;/strong&gt; &lt;a href=&#34;../../../messaging/queues/message_queue&#34;&gt;MessageQueue&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../../../commons/refer/ireferenceable&#34;&gt;IReferenceable&lt;/a&gt;, &lt;a href=&#34;../../../commons/refer/iunreferenceable&#34;&gt;IUnreferenceable&lt;/a&gt;, &lt;a href=&#34;../../../commons/config/iconfigurable&#34;&gt;IConfigurable&lt;/a&gt;, &lt;a href=&#34;../../../commons/run/iopenable&#34;&gt;IOpenable&lt;/a&gt;, &lt;a href=&#34;../../../commons/run/icleanable&#34;&gt;ICleanable&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The RabbitMQMessageQueue class allows you to create message queues that send and receive messages via an RabbitMQ message broker.&lt;/p&gt;
&lt;h4 id=&#34;configuration-parameters&#34;&gt;Configuration parameters&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;connection(s)&lt;/strong&gt;:
- &lt;strong&gt;discovery_key&lt;/strong&gt;:               (optional) a key to retrieve the connection from &lt;a href=&#34;../../../components/connect/idiscovery&#34;&gt;IDiscovery&lt;/a&gt;
- &lt;strong&gt;host&lt;/strong&gt;:                        host name or IP address
- &lt;strong&gt;port&lt;/strong&gt;:                        port number
- &lt;strong&gt;uri&lt;/strong&gt;:                         resource URI or connection string with all parameters in it&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;credential(s)&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;store_key&lt;/strong&gt;:                   (optional) a key to retrieve the credentials from &lt;a href=&#34;../../../components/auth/icredential_store&#34;&gt;ICredentialStore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;username&lt;/strong&gt;:                    user name&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;password&lt;/strong&gt;:                    user password&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;references&#34;&gt;References&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;*:logger:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/log/ilogger&#34;&gt;ILogger&lt;/a&gt; components to pass log messages&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*:counters:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/count/icounters&#34;&gt;ICounters&lt;/a&gt; components to pass collected measurements&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*:discovery:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/connect/idiscovery&#34;&gt;IDiscovery&lt;/a&gt; services&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*:credential-store:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/auth/icredential_store&#34;&gt;ICredentialStore&lt;/a&gt; to resolve credentials&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new instance of the message queue.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MessageQueue([String name])&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: String - (optional) queue&amp;rsquo;s name.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;fields&#34;&gt;Fields&lt;/h3&gt;
&lt;span class=&#34;hide-title-link&#34;&gt;
&lt;h4 id=&#34;capabilities&#34;&gt;capabilities&lt;/h4&gt;
&lt;p&gt;Supported capabilities&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;capabilities&lt;/strong&gt;: &lt;a href=&#34;../../../messaging/queues/messaging_capabilities&#34;&gt;MessagingCapabilities&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;connectionresolver&#34;&gt;connectionResolver&lt;/h4&gt;
&lt;p&gt;Connection resolver.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;connectionResolver&lt;/strong&gt;: &lt;a href=&#34;../../../components/connect/connection_resolver&#34;&gt;ConnectionResolver&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;counters&#34;&gt;counters&lt;/h4&gt;
&lt;p&gt;Performance counters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;counters&lt;/strong&gt;: &lt;a href=&#34;../../../components/count/composite_counters&#34;&gt;CompositeCounters&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;credentialresolver&#34;&gt;credentialResolver&lt;/h4&gt;
&lt;p&gt;Credential resolver.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;credentialResolver&lt;/strong&gt;: &lt;a href=&#34;../../../components/auth/credential_resolver&#34;&gt;CredentialResolver&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;logger&#34;&gt;logger&lt;/h4&gt;
&lt;p&gt;Logger.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;logger&lt;/strong&gt;: &lt;a href=&#34;../../../components/log/composite_logger&#34;&gt;CompositeLogger&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;name&#34;&gt;name&lt;/h4&gt;
&lt;p&gt;Queue&amp;rsquo;s name.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;name&lt;/strong&gt;: String&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/span&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;abandon&#34;&gt;abandon&lt;/h4&gt;
&lt;p&gt;Returnes message into the queue and makes it available for all subscribers to receive it again.
This method is usually used to return a message which could not be processed at the moment
to repeat the attempt. Messages that cause unrecoverable errors shall be removed permanently
or/and send to dead letter queue.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@override&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future abandon(&lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt; message)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: &lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt; - message to return.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;clear&#34;&gt;clear&lt;/h4&gt;
&lt;p&gt;Clears a component&amp;rsquo;s state.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@override&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future clear(String correlationId)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: String - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;close&#34;&gt;close&lt;/h4&gt;
&lt;p&gt;Closes a component and frees used resources.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@override&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future close(String correlationId)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: String - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;complete&#34;&gt;complete&lt;/h4&gt;
&lt;p&gt;Permanently removes a message from the queue.
This method is usually used to remove the message after successful processing.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Important: This method is not supported by RabbitMQ.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;@override&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future complete(&lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt; message)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: &lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt; - message to remove.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;configure&#34;&gt;configure&lt;/h4&gt;
&lt;p&gt;Configures the component by passing its configuration parameters.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@override&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;void configure(&lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; config)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;config&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - configuration parameters to be set.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;endlisten&#34;&gt;endListen&lt;/h4&gt;
&lt;p&gt;Ends listening for incoming messages.
When this method is call, &lt;a href=&#34;#listen&#34;&gt;listen&lt;/a&gt; unblocks the thread and execution continues.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@override&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;void endListen(String correlationId)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: String - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;isopen&#34;&gt;isOpen&lt;/h4&gt;
&lt;p&gt;Checks if the component is open.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@override&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;bool isOpen()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: bool - true if the component is open and false otherwise.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;listen&#34;&gt;listen&lt;/h4&gt;
&lt;p&gt;Listens for incoming messages and blocks the current thread until the queue is closed.&lt;/p&gt;
&lt;p&gt;See &lt;a href=&#34;../../../messaging/queues/imessage_receiver&#34;&gt;IMessageReceiver&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@override&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;void listen(String correlationId, &lt;a href=&#34;../../../messaging/queues/imessage_receiver&#34;&gt;IMessageReceiver&lt;/a&gt; receiver)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: String - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;receiver&lt;/strong&gt;: &lt;a href=&#34;../../../messaging/queues/imessage_receiver&#34;&gt;IMessageReceiver&lt;/a&gt; - receiver used to receive incoming messages.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;movetodeadletter&#34;&gt;moveToDeadLetter&lt;/h4&gt;
&lt;p&gt;Permanently removes a message from the queue and sends it to dead letter queue.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Important: This method is not supported by RabbitMQ.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;@override&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future moveToDeadLetter(&lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt; message)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: &lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt; - message to be removed.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;openwithparams&#34;&gt;openWithParams&lt;/h4&gt;
&lt;p&gt;Opens the component with given connection and credential parameters.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@override&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future openWithParams(String correlationId, &lt;a href=&#34;../../../components/connect/connection_params&#34;&gt;ConnectionParams&lt;/a&gt; connection, &lt;a href=&#34;../../../components/auth/credential_params&#34;&gt;CredentialParams&lt;/a&gt; credential)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: String - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;connection&lt;/strong&gt;: &lt;a href=&#34;../../../components/connect/connection_params&#34;&gt;ConnectionParams&lt;/a&gt; - connection parameters&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;credential&lt;/strong&gt;: &lt;a href=&#34;../../../components/auth/credential_params&#34;&gt;CredentialParams&lt;/a&gt; - credential parameters&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Future - that receives null no errors occured.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;peek&#34;&gt;peek&lt;/h4&gt;
&lt;p&gt;Peeks a single incoming message from the queue without removing it.
If there are no messages available in the queue, it returns null.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Important: This method are not supported in this release!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;@override&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future&amp;lt;&lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt;&amp;gt; peek(String correlationId)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: String - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Future&amp;lt;&lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt;&amp;gt; - peeked message.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;peekbatch&#34;&gt;peekBatch&lt;/h4&gt;
&lt;p&gt;Peeks multiple incoming messages from the queue without removing them.
If there are no messages available in the queue, it returns an empty list.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Important: This method are not supported in this release!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;@override&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future&amp;lt;List&amp;lt;&lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt;&amp;gt;&amp;gt; peekBatch(String correlationId, int messageCount)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: String - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;messageCount&lt;/strong&gt;: int - maximum number of messages to peek.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Future&amp;lt;List&amp;lt;&lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt;&amp;gt;&amp;gt; - list with peeked messages.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;readmessagecount&#34;&gt;readMessageCount&lt;/h4&gt;
&lt;p&gt;Reads the current number of messages in the queue to be delivered.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@override&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future&amp;lt;int&amp;gt; readMessageCount()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;*&lt;strong&gt;returns&lt;/strong&gt;: Future&amp;lt;int&amp;gt; - number of messages in the queue.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;receive&#34;&gt;receive&lt;/h4&gt;
&lt;p&gt;Receives an incoming message and removes it from the queue.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@override&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future&amp;lt;&lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt;&amp;gt; receive(String correlationId, int waitTimeout)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: String - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;waitTimeout&lt;/strong&gt;: int - timeout in milliseconds to wait for a message to come.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Future&amp;lt;&lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt;&amp;gt; - received message or null if nothing was received.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;renewlock&#34;&gt;renewLock&lt;/h4&gt;
&lt;p&gt;Renews a lock on a message that makes it invisible from other receivers in the queue.
This method is usually used to extend the message processing time.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Important: This method is not supported by RabbitMQ.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;@override&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future renewLock([MessageEnvelope](../../../messaging/queues/message_envelope message, int lockTimeout)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: &lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt; - message to extend its lock.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;lockTimeout&lt;/strong&gt;: int - locking timeout in milliseconds.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;send&#34;&gt;send&lt;/h4&gt;
&lt;p&gt;Send method are sends a message into the &lt;strong&gt;_queue&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@override&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future send(String correlationId, &lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt; envelop)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: String - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: &lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt; - message envelop to be sent.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;subscribe&#34;&gt;subscribe&lt;/h4&gt;
&lt;p&gt;Subscribes to a topic.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;void subscribe()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;queue&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;RabbitMQMessageQueue&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;my_queue&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;queue&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;configure&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;ConfigParams&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;fromTuples&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;([&lt;/span&gt;
    &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;topic&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;mytopic&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;connection.protocol&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;amqp&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;connection.host&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;connection.port&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5672&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;]));&lt;/span&gt;

&lt;span style=&#34;color:#00a8c8&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;queue&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;open&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;123&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#00a8c8&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;queue&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;send&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;123&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;MessageEnvelop&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;123&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;mymessage&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;ABC&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;));&lt;/span&gt;
&lt;span style=&#34;color:#00a8c8&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;queue&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;receive&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;123&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#00a8c8&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;queue&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;complete&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;123&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;message&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;messagequeuemessagingqueuesmessage_queue&#34;&gt;&lt;a href=&#34;../../../messaging/queues/message_queue&#34;&gt;MessageQueue&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;messagingcapabilitiesmessagingqueuesmessaging_capabilities&#34;&gt;&lt;a href=&#34;../../../messaging/queues/messaging_capabilities&#34;&gt;MessagingCapabilities&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Dart: RabbitMQMessageQueueFactory</title>
      <link>/dart/rabbitmq/queues/rabbitmq_message_queue_factory/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/dart/rabbitmq/queues/rabbitmq_message_queue_factory/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Extends:&lt;/strong&gt; &lt;a href=&#34;../../../components/build/factory&#34;&gt;Factory&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;TODO: add description&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;TODO: add description&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;RabbitMQMessageQueueFactory()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;fields&#34;&gt;Fields&lt;/h3&gt;
&lt;span class=&#34;hide-title-link&#34;&gt;
&lt;h4 id=&#34;config&#34;&gt;config&lt;/h4&gt;
&lt;p&gt;TODO: add description&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;config&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/span&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;configure&#34;&gt;configure&lt;/h4&gt;
&lt;p&gt;Configures the component by passing its configuration parameters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;void configure(&lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; config)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;config&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - configuration parameters to be set.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
