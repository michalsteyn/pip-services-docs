<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> â€“ Persistence</title>
    <link>/dart/mongodb/persistence/</link>
    <description>Recent content in Persistence on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="/dart/mongodb/persistence/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Dart: IdentifiableMongoDbPersistence&lt;T extends IIdentifiable&lt;K&gt;, K&gt;</title>
      <link>/dart/mongodb/persistence/identifiable_mongodb_persistence/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/dart/mongodb/persistence/identifiable_mongodb_persistence/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Extends:&lt;/strong&gt; &lt;a href=&#34;../mongodb_persistence&#34;&gt;MongoDbPersistence&lt;T&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Implements&lt;/strong&gt;: &lt;a href=&#34;../../../data/core/iwriter&#34;&gt;IWriter&amp;lt;T, K&amp;gt;&lt;/a&gt;, &lt;a href=&#34;../../../data/core/igetter&#34;&gt;IGetter&amp;lt;T, K&amp;gt;&lt;/a&gt;, &lt;a href=&#34;../../../data/core/isetter&#34;&gt;ISetter&lt;T&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The IdentifiableMongoDbPersistence class allows you to create persistance components that store data in MongoDB databases and implement a number of CRUD operations over data items with unique ids.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Important points&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The data items must implement the &lt;a href=&#34;../../../commons/data/iidentifiable&#34;&gt;IIdentifiable&lt;/a&gt; interface.&lt;/li&gt;
&lt;li&gt;In basic scenarios child classes shall only override &lt;a href=&#34;../mongodb_persistence/#getpagebyfilter&#34;&gt;getPageByFilter&lt;/a&gt;, &lt;a href=&#34;../mongodb_persistence/#getlistbyfilter&#34;&gt;getListByFilter&lt;/a&gt; or &lt;a href=&#34;../mongodb_persistence/#deletebyfilter&#34;&gt;deleteByFilter&lt;/a&gt;  operations with specific filter functions. All other operations can be used out of the box.&lt;/li&gt;
&lt;li&gt;In complex scenarios child classes can implement additional operations by accessing &lt;strong&gt;this._collection&lt;/strong&gt; and &lt;strong&gt;this._model&lt;/strong&gt; properties.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;configuration-parameters&#34;&gt;Configuration parameters&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;connection(s)&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;discovery_key&lt;/strong&gt;: (optional) key to retrieve the connection from &lt;a href=&#34;../../../components/connect/idiscovery&#34;&gt;IDiscovery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;host&lt;/strong&gt;: host name or IP address&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;port&lt;/strong&gt;: port number (default: 27017)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;uri&lt;/strong&gt;: resource URI or connection string with all parameters in it&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;credential(s)&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;store_key&lt;/strong&gt;: (optional) key to retrieve the credentials from &lt;a href=&#34;../../../components/auth/icredential_store&#34;&gt;ICredentialStore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;username&lt;/strong&gt;: (optional) username&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;password&lt;/strong&gt;: (optional) user&amp;rsquo;s password&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;options&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;max_pool_size&lt;/strong&gt;: (optional) maximum connection pool size (default: 2)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;keep_alive&lt;/strong&gt;: (optional) enable connection keep alive (default: true)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;connect_timeout&lt;/strong&gt;: (optional) connection timeout in milliseconds (default: 5000)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;socket_timeout&lt;/strong&gt;: (optional) socket timeout in milliseconds (default: 360000)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;auto_reconnect&lt;/strong&gt;: (optional) enable auto reconnection (default: true) (not used)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;reconnect_interval&lt;/strong&gt;: (optional) reconnection interval in milliseconds (default: 1000) (not used)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;max_page_size&lt;/strong&gt;: (optional) maximum page size (default: 100)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;replica_set&lt;/strong&gt;: (optional) name of replica set&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ssl&lt;/strong&gt;: (optional) enable SSL connection (default: false) (not implements in this release)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;auth_source&lt;/strong&gt;: (optional) authentication source&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;auth_user&lt;/strong&gt;: (optional) authentication user name&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;auth_password&lt;/strong&gt;: (optional) authentication user password&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;debug&lt;/strong&gt;: (optional) enable debug output (default: false). (not used)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;references&#34;&gt;References&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;*:logger:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/log/ilogger&#34;&gt;ILogger&lt;/a&gt; components to pass log messages&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*:discovery:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/connect/idiscovery&#34;&gt;IDiscovery&lt;/a&gt; services&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*:credential-store:*:*:1.0&lt;/strong&gt; - (optional) credential stores used to resolve credentials&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new instance of the persistence component.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;IdentifiableMongoDbPersistence(String collection)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;collection&lt;/strong&gt;: String - (optional) collection name.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;create&#34;&gt;create&lt;/h4&gt;
&lt;p&gt;Creates a data item.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@override&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future&amp;lt;T&amp;gt; create(String correlationId, T item)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: String - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;item&lt;/strong&gt;: T - item to be created.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Future&amp;lt;T&amp;gt; - created item&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;deletebyid&#34;&gt;deleteById&lt;/h4&gt;
&lt;p&gt;Deletes a data item by it&amp;rsquo;s unique id.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@override&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future&amp;lt;T&amp;gt; deleteById(String correlationId, K id)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: String - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;id&lt;/strong&gt;: K - id of the item to be deleted&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;return&lt;/strong&gt;: Future&amp;lt;T&amp;gt; - deleted item.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;deletebyids&#34;&gt;deleteByIds&lt;/h4&gt;
&lt;p&gt;Deletes multiple data items by their unique ids.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future deleteByIds(String correlationId, List&amp;lt;K&amp;gt; ids)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: String - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ids&lt;/strong&gt;: List&amp;lt;K&amp;gt; - ids of data items to be deleted.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;getlistbyids&#34;&gt;getListByIds&lt;/h4&gt;
&lt;p&gt;Gets a list of data items retrieved by given unique ids.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future&amp;lt;List&amp;lt;T&amp;gt;&amp;gt; getListByIds(String correlationId, List&amp;lt;K&amp;gt; ids)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: String - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ids&lt;/strong&gt;: List&amp;lt;K&amp;gt; - ids of data items to be retrieved&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;return&lt;/strong&gt;: Future&amp;lt;List&amp;lt;T&amp;gt;&amp;gt; - data list of results by ids.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;getonebyid&#34;&gt;getOneById&lt;/h4&gt;
&lt;p&gt;Gets a data item by its unique id.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@override&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future&amp;lt;T&amp;gt; getOneById(String correlationId, K id)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: String - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;id&lt;/strong&gt;: K - id of data item to be retrieved.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Future&amp;lt;T&amp;gt; - data item by id.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;set&#34;&gt;set&lt;/h4&gt;
&lt;p&gt;Sets a data item. If the data item exists it updates it, otherwise it creates a new data item.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future&amp;lt;T&amp;gt; set(String correlationId, T item)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: String - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;item&lt;/strong&gt;: T - item to be set.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Future&amp;lt;T&amp;gt; - updated item&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;update&#34;&gt;update&lt;/h4&gt;
&lt;p&gt;Updates a data item.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future&amp;lt;T&amp;gt; update(String correlationId, T item)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: String - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;item&lt;/strong&gt;: T - item to be updated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Future&amp;lt;T&amp;gt; - updated item.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;updatepartially&#34;&gt;updatePartially&lt;/h4&gt;
&lt;p&gt;Updates only few selected fields in a data item.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future&amp;lt;T&amp;gt; updatePartially(String correlationId, K id, &lt;a href=&#34;../../../commons/data/any_value_map&#34;&gt;AnyValueMap&lt;/a&gt; data)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: String - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;id&lt;/strong&gt;: K - id of data item to be updated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;data&lt;/strong&gt;: &lt;a href=&#34;../../../commons/data/any_value_map&#34;&gt;AnyValueMap&lt;/a&gt; - map with fields to be updated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Future&amp;lt;T&amp;gt; - updated item.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;MyMongoDbPersistence&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;MongoDbPersistence&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;MyData&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#111&#34;&gt;MyMongoDbPersistence&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;base&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;mydata&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;MyDataMongoDbSchema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;());&lt;/span&gt;
    &lt;span style=&#34;color:#00a8c8&#34;&gt;dynamic&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;_composeFilter&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;FilterParams&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#111&#34;&gt;filter&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;filter&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;??&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;FilterParams&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;();&lt;/span&gt;
        &lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;criteria&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;[];&lt;/span&gt;
        &lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;filter&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;getAsNullableString&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;
            &lt;span style=&#34;color:#111&#34;&gt;criteria&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;({&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;});&lt;/span&gt;
        &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;criteria&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;isNotNul&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;r&amp;#39;$and&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;criteria&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#111&#34;&gt;Future&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;DataPage&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;MyData&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;getPageByFilter&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;correlationId&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;FilterParams&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;filter&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;PagingParams&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;paging&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;base&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;getPageByFilter&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;correlationId&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;_composeFilter&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;filter&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;paging&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;persistence&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;MyMongoDbPersistence&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;persistence&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;configure&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;ConfigParams&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;fromTuples&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;([&lt;/span&gt;
    &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;host&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;port&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;27017&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;]));&lt;/span&gt;

&lt;span style=&#34;color:#00a8c8&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;persitence&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;open&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;123&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;item&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;persistence&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;create&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;123&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;ABC&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;});&lt;/span&gt;
&lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;page&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;persistence&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;getPageByFilter&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;123&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;FilterParams&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;fromTuples&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;([&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;ABC&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]),&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;page&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;// Result: { id: &amp;#39;1&amp;#39;, name: &amp;#39;ABC&amp;#39; }
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;item&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;persistence&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;deleteById&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;123&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Dart: MongoDbIndex</title>
      <link>/dart/mongodb/persistence/mongodb_index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/dart/mongodb/persistence/mongodb_index/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The MongoDbIndex class allows you to create an index for MongoDB.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;MongoDbIndex(this.keys, this.key, this.unique, this.sparse, this.background, this.dropDups, this.partialFilterExpression, this.name)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;fields&#34;&gt;Fields&lt;/h3&gt;
&lt;span class=&#34;hide-title-link&#34;&gt;
&lt;h4 id=&#34;keys&#34;&gt;keys&lt;/h4&gt;
&lt;p&gt;Index keys (fields)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;keys&lt;/strong&gt;: Map&amp;lt;String, dynamic&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;key&#34;&gt;key&lt;/h4&gt;
&lt;p&gt;Key&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;key&lt;/strong&gt;: String&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;unique&#34;&gt;unique&lt;/h4&gt;
&lt;p&gt;Unique option&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;unique&lt;/strong&gt;: bool&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;sparse&#34;&gt;sparse&lt;/h4&gt;
&lt;p&gt;Sparse option&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;sparse&lt;/strong&gt;: bool&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;background&#34;&gt;background&lt;/h4&gt;
&lt;p&gt;Background option&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;background&lt;/strong&gt;: bool&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;dropdups&#34;&gt;dropDups&lt;/h4&gt;
&lt;p&gt;dropDups option&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;dropDups&lt;/strong&gt;: bool&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;partialfilterexpression&#34;&gt;partialFilterExpression&lt;/h4&gt;
&lt;p&gt;Partial filter expression&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;partialFilterExpression&lt;/strong&gt;: Map&amp;lt;String, dynamic&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;name&#34;&gt;name&lt;/h4&gt;
&lt;p&gt;Name&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;name&lt;/strong&gt;: String&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/span&gt;

      </description>
    </item>
    
    <item>
      <title>Dart: MongoDbPersistence</title>
      <link>/dart/mongodb/persistence/mongodb_persistence/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/dart/mongodb/persistence/mongodb_persistence/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../../../commons/refer/ireferenceable&#34;&gt;IReferenceable&lt;/a&gt;, &lt;a href=&#34;../../../commons/refer/iunreferenceable&#34;&gt;IUnreferenceable&lt;/a&gt;, &lt;a href=&#34;../../../commons/config/iconfigurable&#34;&gt;IConfigurable&lt;/a&gt;, &lt;a href=&#34;../../../commons/run/iopenable&#34;&gt;IOpenable&lt;/a&gt;, &lt;a href=&#34;../../../commons/run/icleanable&#34;&gt;ICleanable&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The MongoDbPersistence class allows you to create persistence components that store data in MongoDB databases using the official MongoDB driver.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Important points&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This is the most basic persistence component that is only able to store data items of any type.&lt;/li&gt;
&lt;li&gt;Specific CRUD operations over the data items must be implemented in child classes by accessing &lt;strong&gt;this.__collection&lt;/strong&gt; or &lt;strong&gt;this.__model&lt;/strong&gt; properties.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;configuration-parameters&#34;&gt;Configuration parameters&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;collection&lt;/strong&gt;: (optional) MongoDB collection name&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;connection(s)&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;discovery_key&lt;/strong&gt;: (optional) key to retrieve the connection from &lt;a href=&#34;../../../components/connect/idiscovery&#34;&gt;IDiscovery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;host&lt;/strong&gt;: host name or IP address&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;port&lt;/strong&gt;: port number (default: 27017)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;uri&lt;/strong&gt;: resource URI or connection string with all parameters in it&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;credential(s)&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;store_key&lt;/strong&gt;: (optional) key to retrieve the credentials from &lt;a href=&#34;../../../components/auth/icredential_store&#34;&gt;ICredentialStore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;username&lt;/strong&gt;: (optional) username&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;password&lt;/strong&gt;: (optional) user&amp;rsquo;s password&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;options&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;max_pool_size&lt;/strong&gt;: (optional) maximum connection pool size (default: 2)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;keep_alive&lt;/strong&gt;: (optional) enable connection keep alive (default: true)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;connect_timeout&lt;/strong&gt;: (optional) connection timeout in milliseconds (default: 5000)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;socket_timeout&lt;/strong&gt;: (optional) socket timeout in milliseconds (default: 360000)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;auto_reconnect&lt;/strong&gt;: (optional) enable auto reconnection (default: true)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;reconnect_interval&lt;/strong&gt;: (optional) reconnection interval in milliseconds (default: 1000)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;max_page_size&lt;/strong&gt;: (optional) maximum page size (default: 100)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;replica_set&lt;/strong&gt;: (optional) name of replica set&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ssl&lt;/strong&gt;: (optional) enable SSL connection (default: false)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;auth_source&lt;/strong&gt;: (optional) authentication source&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;debug&lt;/strong&gt;: (optional) enable debug output (default: false).&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;references&#34;&gt;References&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;*:logger:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/log/ilogger&#34;&gt;ILogger&lt;/a&gt; components to pass log messages&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*:discovery:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/connect/idiscovery&#34;&gt;IDiscovery&lt;/a&gt; services&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*:credential-store:*:*:1.0&lt;/strong&gt; - (optional) credential stores to resolve credentials&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new instance of the persistence component.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MongoDbPersistence([String collection])&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;collection&lt;/strong&gt;: String - (optional) collection name.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;fields&#34;&gt;Fields&lt;/h3&gt;
&lt;span class=&#34;hide-title-link&#34;&gt;
&lt;h4 id=&#34;dependencyresolver&#34;&gt;dependencyResolver&lt;/h4&gt;
&lt;p&gt;The dependency resolver.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;dependencyResolver&lt;/strong&gt;: &lt;a href=&#34;../../../commons/refer/dependency_resolver&#34;&gt;DependencyResolver&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;logger&#34;&gt;logger&lt;/h4&gt;
&lt;p&gt;Logger.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;logger&lt;/strong&gt;: &lt;a href=&#34;../../../components/log/composite_logger&#34;&gt;CompositeLogger&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;connection&#34;&gt;connection&lt;/h4&gt;
&lt;p&gt;MongoDB connection component.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;connection&lt;/strong&gt;: &lt;a href=&#34;../../connect/mongodb_connection&#34;&gt;MongoDBConnection&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;collectionname&#34;&gt;collectionName&lt;/h4&gt;
&lt;p&gt;MongoDB colleciton name.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;collectionName&lt;/strong&gt;: String;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;collection&#34;&gt;collection&lt;/h4&gt;
&lt;p&gt;MongoDb collection object.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;collection&lt;/strong&gt;: mongo.DbCollection&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;client&#34;&gt;client&lt;/h4&gt;
&lt;p&gt;MongoDB connection pool object.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;client&lt;/strong&gt;: mongo.Db&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;databasename&#34;&gt;databaseName&lt;/h4&gt;
&lt;p&gt;MongoDB database name.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;databaseName&lt;/strong&gt;: String&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;maxpagesize&#34;&gt;maxPageSize&lt;/h4&gt;
&lt;p&gt;Maximum number of records to return from the database per request.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;maxPageSize&lt;/strong&gt;: int = 100&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/span&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;clear&#34;&gt;clear&lt;/h4&gt;
&lt;p&gt;Clears a component&amp;rsquo;s state.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@override&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future clear(String correlationId)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: String - object to convert from the public partial format.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;close&#34;&gt;close&lt;/h4&gt;
&lt;p&gt;Closes the component and frees used resources.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@override&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future close(String correlationId)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: String - object to convert from the public partial format.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;configure&#34;&gt;configure&lt;/h4&gt;
&lt;p&gt;Closes the component and frees used resources.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@override&lt;/code&gt;
void configure(&lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; config)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;config&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - configuration parameters to be set.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;convertfrompublic&#34;&gt;convertFromPublic&lt;/h4&gt;
&lt;p&gt;Converts an object value from public to internal format.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Map&amp;lt;String, dynamic&amp;gt; convertFromPublic(dynamic item, {bool createUid = false})&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: dynamic - object in public format to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;createUid&lt;/strong&gt;: bool - autocreation flag Uid&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Map&amp;lt;String, dynamic&amp;gt; - converted object in internal format.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;converttopublic&#34;&gt;convertToPublic&lt;/h4&gt;
&lt;p&gt;Converts and object value from internal to public format.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;dynamic convertToPublic(Map&amp;lt;String, dynamic&amp;gt; item)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: dynamic - object in internal format to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Map&amp;lt;String, dynamic&amp;gt; - converted object in public format.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;create&#34;&gt;create&lt;/h4&gt;
&lt;p&gt;Creates a data item.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future&amp;lt;T&amp;gt; create(String correlationId, T item)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: String - (optional) transaction id used  to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;item&lt;/strong&gt;: T - item to be created.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Future&amp;lt;T&amp;gt; - created item&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;deletebyfilter&#34;&gt;deleteByFilter&lt;/h4&gt;
&lt;p&gt;This method shall be called by a public &lt;strong&gt;deleteByFilter&lt;/strong&gt; method from the child class that
receives &lt;a href=&#34;../../../commons/data/filter_params&#34;&gt;FilterParams&lt;/a&gt; and converts them into a filter function.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future deleteByFilterEx(String correlationId, Map&amp;lt;String, dynamic&amp;gt; filter)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: String - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;filter&lt;/strong&gt;: Map&amp;lt;String, dynamic&amp;gt; - (optional) filter function used to filter items.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;ensureindex&#34;&gt;ensureIndex&lt;/h4&gt;
&lt;p&gt;Adds index definition to create it on opening.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;void ensureIndex(keys, {String key, bool unique = false, bool sparse = false, bool background = false, bool dropDups = false, Map&amp;lt;String, dynamic&amp;gt; partialFilterExpression, String name})&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;keys&lt;/strong&gt;: dynamic - index keys (fields)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;key&lt;/strong&gt;: String - index options&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;unique&lt;/strong&gt;: bool - TODO: add description&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;sparse&lt;/strong&gt;: bool - TODO: add description&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;background&lt;/strong&gt;: bool - TODO: add description&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dropDups&lt;/strong&gt;: bool - TODO: add description&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;partialFilterExpression&lt;/strong&gt;: Map&amp;lt;String, dynamic&amp;gt; - TODO: add description&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: String - TODO: add description&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;getcountbyfilter&#34;&gt;getCountByFilter&lt;/h4&gt;
&lt;p&gt;Gets a number of data items retrieved by a given filter.&lt;/p&gt;
&lt;p&gt;This method shall be called by a public &lt;strong&gt;getCountByFilter&lt;/strong&gt; method from the child class that
receives &lt;a href=&#34;../../../commons/data/filter_params&#34;&gt;FilterParams&lt;/a&gt; and converts them into a filter function.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future&amp;lt;int&amp;gt; getCountByFilterEx(String correlationId, Map&amp;lt;String, dynamic&amp;gt; filter)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: String - (optional) transaction id usedto trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;filter&lt;/strong&gt;: Map&amp;lt;String, dynamic&amp;gt; - (optional) filter JSON object&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: uture&amp;lt;int&amp;gt; - number of filtered items.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;getlistbyfilter&#34;&gt;getListByFilter&lt;/h4&gt;
&lt;p&gt;Gets a list of data items retrieved by a given filter and sorted according to sort parameters.&lt;/p&gt;
&lt;p&gt;This method shall be called by a public &lt;strong&gt;getListByFilter&lt;/strong&gt; method from the child class that
receives &lt;a href=&#34;../../../commons/data/filter_params&#34;&gt;FilterParams&lt;/a&gt; and converts them into a filter function.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future&amp;lt;List&amp;lt;T&amp;gt;&amp;gt; getListByFilterEx(String correlationId, Map&amp;lt;String, dynamic&amp;gt; filter, Map&amp;lt;String, dynamic&amp;gt; sort)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: String - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;filter&lt;/strong&gt;: Map&amp;lt;String, dynamic&amp;gt; - (optional) filter function used to filter items&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;sort&lt;/strong&gt;: Map&amp;lt;String, dynamic&amp;gt; - (optional) sorting parameters&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Future&amp;lt;List&amp;lt;T&amp;gt;&amp;gt; - data list of results by filter.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;getonerandom&#34;&gt;getOneRandom&lt;/h4&gt;
&lt;p&gt;Gets a random item from items that match to a given filter.&lt;/p&gt;
&lt;p&gt;This method shall be called by a public &lt;a href=&#34;#getonerandom&#34;&gt;getOneRandom&lt;/a&gt; method from the child class
that receives &lt;a href=&#34;../../../commons/data/filter_params&#34;&gt;FilterParams&lt;/a&gt; and converts them into a filter function.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future&amp;lt;T&amp;gt; getOneRandom(String correlationId, Map&amp;lt;String, dynamic&amp;gt; filter)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: String - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;filter&lt;/strong&gt;: Map&amp;lt;String, dynamic&amp;gt; - fileter JSON object.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Future&amp;lt;T&amp;gt; - random item.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;getpagebyfilter&#34;&gt;getPageByFilter&lt;/h4&gt;
&lt;p&gt;Gets a page of data items retrieved by a given filter and sorted according to sort parameters.&lt;/p&gt;
&lt;p&gt;This method shall be called by a public &lt;strong&gt;getPageByFilter&lt;/strong&gt; method from the child class that
receives &lt;a href=&#34;../../../commons/data/filter_params&#34;&gt;FilterParams&lt;/a&gt; and converts them into a filter function.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Future&amp;lt;&lt;a href=&#34;../../../commons/data/data_page&#34;&gt;DataPage&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt; getPageByFilterEx(String correlationId, Map&amp;lt;String, dynamic&amp;gt; filter, &lt;a href=&#34;../../../commons/data/paging_params&#34;&gt;PagingParams&lt;/a&gt; paging, Map&amp;lt;String, dynamic&amp;gt; sort)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: String - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;filter&lt;/strong&gt;: Map&amp;lt;String, dynamic&amp;gt; - (optional) filter JSON object&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;paging&lt;/strong&gt;: &lt;a href=&#34;../../../commons/data/paging_params&#34;&gt;PagingParams&lt;/a&gt; - (optional) paging parameters&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;sort&lt;/strong&gt;: Map&amp;lt;String, dynamic&amp;gt; - (optional) sorting JSON object&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Future&amp;lt;&lt;a href=&#34;../../../commons/data/data_page&#34;&gt;DataPage&lt;/a&gt;&amp;lt;T&amp;gt;&amp;gt; - data page obtained by filtering&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-dart&#34; data-lang=&#34;dart&#34;&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;MyMongoDbPersistence&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;MongoDbPersistence&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;MyData&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;
  &lt;span style=&#34;color:#111&#34;&gt;MyMongoDbPersistence&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;()&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;base&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;mydata&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;

  &lt;span style=&#34;color:#111&#34;&gt;Future&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;MyData&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;getByName&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;correlationId&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;filter&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;};&lt;/span&gt;
      &lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;query&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;mngquery&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;SelectorBuilder&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;();&lt;/span&gt;
      &lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;selector&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;dynamic&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;{};&lt;/span&gt;
      &lt;span style=&#34;color:#111&#34;&gt;selector&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;r&amp;#39;$query&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;filter&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;
      &lt;span style=&#34;color:#111&#34;&gt;query&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;raw&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;selector&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;
      &lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;item&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;collection&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;findOne&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;filter&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;
      &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;item&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;
      &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;
      &lt;span style=&#34;color:#111&#34;&gt;item&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;convertToPublic&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;item&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;
      &lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;instance&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;MyData&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;fromJson&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;item&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;
      &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;instance&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color:#111&#34;&gt;});&lt;/span&gt;

  &lt;span style=&#34;color:#111&#34;&gt;Future&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;MyData&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;set&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;correlatonId&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;MyData&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;item&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;item&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;jsonMap&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;json&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;decode&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;json&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;encode&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;item&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;));&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;// Assign unique id
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;jsonMap&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;
      &lt;span style=&#34;color:#111&#34;&gt;jsonMap&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;IdGenerator&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;nextLong&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;();&lt;/span&gt;
    &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#111&#34;&gt;convertFromPublic&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;jsonMap&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;filter&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;r&amp;#39;$query&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;jsonMap&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]}};&lt;/span&gt;
    &lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;collection&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;findAndModify&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;
        &lt;span style=&#34;color:#111&#34;&gt;query:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;filter&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;update:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;jsonMap&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;returnNew:&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;upsert:&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;
    &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#111&#34;&gt;convertToPublic&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;result&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;
        &lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;newItem&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;MyData&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;fromJson&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;result&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);;&lt;/span&gt;
        &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;newItem&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;
    &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;
  &lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;

&lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;persistence&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;MyMongoDbPersistence&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;persistence&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;configure&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;ConfigParams&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;fromTuples&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;([&lt;/span&gt;
    &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;host&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;port&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;27017&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;]));&lt;/span&gt;

&lt;span style=&#34;color:#00a8c8&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;persitence&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;open&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;123&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#00a8c8&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;persistence&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;set&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;123&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;name:&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;ABC&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;});&lt;/span&gt;
&lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;item&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;persistence&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;getByName&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;123&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;ABC&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;item&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;         &lt;span style=&#34;color:#75715e&#34;&gt;// Result: { name: &amp;#39;ABC&amp;#39; }
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
  </channel>
</rss>
