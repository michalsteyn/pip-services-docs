<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> â€“ Services</title>
    <link>/python/rpc/services/</link>
    <description>Recent content in Services on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="/python/rpc/services/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Python: AboutOperations</title>
      <link>/python/rpc/services/about_operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/rpc/services/about_operations/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../rest_operations&#34;&gt;RestOperations&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The AboutOperations class is used to obtain information about running services.&lt;/p&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;get_about&#34;&gt;get_about&lt;/h4&gt;
&lt;p&gt;Gets information from a service.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;get_about(): str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: str - JSON string with information about the service.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;get_about_operation&#34;&gt;get_about_operation&lt;/h4&gt;
&lt;p&gt;Gets the service&amp;rsquo;s information.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;get_about_operation(): Callable&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Callable - get_about method&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;set_references&#34;&gt;set_references&lt;/h4&gt;
&lt;p&gt;Sets the references of the service.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;set_references(references: &lt;a href=&#34;../../../commons/refer/ireferences&#34;&gt;IReferences&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;references&lt;/strong&gt;: &lt;a href=&#34;../../../commons/refer/ireferences&#34;&gt;IReferences&lt;/a&gt; - service&amp;rsquo;s references.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: CommandableHttpService</title>
      <link>/python/rpc/services/commandable_http_service/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/rpc/services/commandable_http_service/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../rest_service&#34;&gt;RestService&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;See also &lt;a href=&#34;../rest_service&#34;&gt;RestService&lt;/a&gt;, &lt;a href=&#34;../../clients/commandable_http_client&#34;&gt;CommandableHttpClient&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The CommandableHttpService class allows you to create services that receive remote calls via the HTTP/REST protocol to operations automatically generated for commands defined in ICommandable components.&lt;/p&gt;
&lt;p&gt;Important points&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Each command is exposed as POST operation that receives all parameters in the body object.&lt;/li&gt;
&lt;li&gt;Commandable services require only three lines of code to implement a robust external HTTP-based remote interface.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;configuration-parameters&#34;&gt;Configuration parameters&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;base_route&lt;/strong&gt;:              base route for remote URI&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dependencies&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;endpoint&lt;/strong&gt;:              override for HTTP Endpoint dependency&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;controller&lt;/strong&gt;:            override for Controller dependency&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;connection(s)&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;discovery_key&lt;/strong&gt;:         (optional) a key to retrieve the connection from &lt;a href=&#34;../../../components/connect/idiscovery&#34;&gt;IDiscovery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;protocol&lt;/strong&gt;:              connection protocol: http or https&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;host&lt;/strong&gt;:                  host name or IP address&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;port&lt;/strong&gt;:                  port number&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;uri&lt;/strong&gt;:                   resource URI or connection string with all parameters in it&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;references&#34;&gt;References&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;*:logger:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/log/ilogger&#34;&gt;ILogger&lt;/a&gt; components to pass log messages&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*:counters:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/count/icounters&#34;&gt;ICounters&lt;/a&gt; components to pass collected measurements&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*:traces:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/trace/itracer&#34;&gt;ITracer&lt;/a&gt; components to record traces&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*:discovery:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/connect/idiscovery&#34;&gt;IDiscovery&lt;/a&gt; services to resolve connection&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new instance of the service.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;CommandableHttpService(base_route: str)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;base_route&lt;/strong&gt;: str - a service base route.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;fields&#34;&gt;Fields&lt;/h3&gt;
&lt;span class=&#34;hide-title-link&#34;&gt;
&lt;h4 id=&#34;_connection_resolver&#34;&gt;_connection_resolver&lt;/h4&gt;
&lt;p&gt;Create connection resolver.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;_connection_resolver&lt;/strong&gt;: &lt;a href=&#34;../../../components/connect/connection_resolver&#34;&gt;ConnectionResolver&lt;/a&gt; = ConnectionResolver()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;_command_set&#34;&gt;_command_set&lt;/h4&gt;
&lt;p&gt;Set of commands.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;_command_set&lt;/strong&gt;: &lt;a href=&#34;../../../commons/commands/command_set&#34;&gt;CommandSet&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;_swagger_auto&#34;&gt;_swagger_auto&lt;/h4&gt;
&lt;p&gt;Boolean variable that defines whether the configuration of Swagger is autogenerated or not.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;_swagger_auto&lt;/strong&gt;: bool = True&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;_base_route&#34;&gt;_base_route&lt;/h4&gt;
&lt;p&gt;Base route for a remote URI&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;_base_route&lt;/strong&gt;: str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/span&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;configure&#34;&gt;configure&lt;/h4&gt;
&lt;p&gt;Configures a component by passing configuration parameters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;configure(config: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;config&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - configuration parameters to be set.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;register&#34;&gt;register&lt;/h4&gt;
&lt;p&gt;Registers all service routes in the HTTP endpoint.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;register()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;MyCommandableHttpService&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;CommandableHttpService&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;):&lt;/span&gt;
    &lt;span style=&#34;color:#00a8c8&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;__init__&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;):&lt;/span&gt;
        &lt;span style=&#34;color:#111&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;MyCommandableHttpService&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;__init__&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;()&lt;/span&gt;
        &lt;span style=&#34;color:#111&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;_dependencyResolver&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;controller&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Descriptor&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;mygroup&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;controller&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;1.0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;))&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;# ...&lt;/span&gt;

&lt;span style=&#34;color:#111&#34;&gt;service&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;MyCommandableHttpService&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;service&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;configure&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;ConfigParams&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;from_tuples&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;connection.protocol&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;http&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;
                                          &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;connection.host&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;
                                          &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;connection.port&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;))&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;service&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;set_references&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;References&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;from_tuples&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Descriptor&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;mygroup&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;controller&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;default&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;default&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;1.0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;controller&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;))&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;service&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;open&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;123&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;restservicerest_service&#34;&gt;&lt;a href=&#34;../rest_service&#34;&gt;RestService&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;commandablehttpclientclientscommandable_http_client&#34;&gt;&lt;a href=&#34;../../clients/commandable_http_client&#34;&gt;CommandableHttpClient&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: CommandableSwaggerDocument</title>
      <link>/python/rpc/services/commandable_swagger_document/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/rpc/services/commandable_swagger_document/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The CommandableSwaggerDocument class allows you to generate Swagger description language that represents the created REST API methods and their parameters.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new instance of the service.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;CommandableHttpService(base_route: str, config: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt;, commands: List[&lt;a href=&#34;../../../commons/commands/icommand&#34;&gt;ICommand&lt;/a&gt;])&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;base_route&lt;/strong&gt;: str - base route of the service&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;config&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - configuration parameters&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;commands&lt;/strong&gt;: List[&lt;a href=&#34;../../../commons/commands/icommand&#34;&gt;ICommand&lt;/a&gt;] - list of commands&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;fields&#34;&gt;Fields&lt;/h3&gt;
&lt;span class=&#34;hide-title-link&#34;&gt;
&lt;h4 id=&#34;commands&#34;&gt;commands&lt;/h4&gt;
&lt;p&gt;List of commmands.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;commands&lt;/strong&gt;: List[&lt;a href=&#34;../../../commons/commands/icommand&#34;&gt;ICommand&lt;/a&gt;]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;version&#34;&gt;version&lt;/h4&gt;
&lt;p&gt;Version number.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;version&lt;/strong&gt;: str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;base_route&#34;&gt;base_route&lt;/h4&gt;
&lt;p&gt;Base route.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;base_route&lt;/strong&gt;: str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;info_title&#34;&gt;info_title&lt;/h4&gt;
&lt;p&gt;Title.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;info_title&lt;/strong&gt;: str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;info_description&#34;&gt;info_description&lt;/h4&gt;
&lt;p&gt;API description&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;info_description&lt;/strong&gt;: str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;info_version&#34;&gt;info_version&lt;/h4&gt;
&lt;p&gt;API version&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;info_version&lt;/strong&gt;: str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;info_terms_of_service&#34;&gt;info_terms_of_service&lt;/h4&gt;
&lt;p&gt;Terms of service information.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;info_terms_of_service&lt;/strong&gt;: Optional[str]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;info_contact_name&#34;&gt;info_contact_name&lt;/h4&gt;
&lt;p&gt;Contact name.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;info_contact_name&lt;/strong&gt;: Optional[str]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;info_contact_url&#34;&gt;info_contact_url&lt;/h4&gt;
&lt;p&gt;Contact URL.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;info_contact_url&lt;/strong&gt;: Optional[str]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;info_contact_email&#34;&gt;info_contact_email&lt;/h4&gt;
&lt;p&gt;Contact email.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;info_contact_email&lt;/strong&gt;: Optional[str]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;info_license_name&#34;&gt;info_license_name&lt;/h4&gt;
&lt;p&gt;License name.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;info_license_name&lt;/strong&gt;: Optional[str]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;info_license_url&#34;&gt;info_license_url&lt;/h4&gt;
&lt;p&gt;License information URL.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;info_license_url&lt;/strong&gt;: Optional[str]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/span&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;_get_spaces&#34;&gt;_get_spaces&lt;/h4&gt;
&lt;p&gt;Returns a string with spaces.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;_get_spaces(length: int): str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;length&lt;/strong&gt;: int - determines the length of the string with spaces.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: str - string containing spaces.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_string&#34;&gt;to_string&lt;/h4&gt;
&lt;p&gt;Returns a string with Swagger description language that represents the service methods.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;to_string(): str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: str - string with the API information.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;_type_to_string&#34;&gt;_type_to_string&lt;/h4&gt;
&lt;p&gt;Returns a string with the type name.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;_type_to_string(type: Any): str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;type&lt;/strong&gt;: Any - type (e.g. Integer)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: str - name of the type (e.g. &amp;lsquo;integer&amp;rsquo;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;_write_array_item&#34;&gt;_write_array_item&lt;/h4&gt;
&lt;p&gt;Writes an array item into the Swagger description.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;_write_array_item(indent: int, name: str, is_object_item: bool = False)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;indent&lt;/strong&gt;: int - number of spaces&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: str - item&amp;rsquo;s name&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;is_object_item&lt;/strong&gt;: bool - True is the item is an object. False otherwise.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;_write_as_object&#34;&gt;_write_as_object&lt;/h4&gt;
&lt;p&gt;Adds a property and its value.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;_write_as_object(indent: int, name: str, value: Any)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;indent&lt;/strong&gt;: int - number of spaces&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: str - name of the property&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - value of the property&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;_write_data&#34;&gt;_write_data&lt;/h4&gt;
&lt;p&gt;Adds data to the Swagger description.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;_write_data(indent: int, data: Dict[str, Any])&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;indent&lt;/strong&gt;: int - number of spaces&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: str - name&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;data&lt;/strong&gt;: Dict[str, Any] - data to be added&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;_write_name&#34;&gt;_write_name&lt;/h4&gt;
&lt;p&gt;Writes a property or object name.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;_write_name(indent: int, name: str)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;indent&lt;/strong&gt;: int - number of spaces&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: str - string with added identation&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: HeartBeatOperations</title>
      <link>/python/rpc/services/heartbeat_operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/rpc/services/heartbeat_operations/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../rest_operations&#34;&gt;RestOperations&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The HeartBeatOperations class is used to handle the operations of a heartbeat service.&lt;/p&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;heartbeat&#34;&gt;heartbeat&lt;/h4&gt;
&lt;p&gt;Creates a heartbeat.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;heartbeat(): str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: str - string with the current time in UTC.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;get_heart_beat_operation&#34;&gt;get_heart_beat_operation&lt;/h4&gt;
&lt;p&gt;Gets the heartbeat operation&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;get_heart_beat_operation(): Callable&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Callable - heartbeat operation&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: HeartbeatRestService</title>
      <link>/python/rpc/services/heartbeat_rest_service/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/rpc/services/heartbeat_rest_service/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../rest_service&#34;&gt;RestService&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The HeartbeatRestService class allows you to create services that return heartbeat via HTTP/REST protocol.&lt;/p&gt;
&lt;p&gt;Important points&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The service responds on /heartbeat route (can be changed) with a string with the current time in UTC.&lt;/li&gt;
&lt;li&gt;This service route can be used to perform health checks by loadbalancers and container orchestrators.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;configuration-parameters&#34;&gt;Configuration parameters&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;base_route&lt;/strong&gt;: base route for remote URI (default: &amp;ldquo;&amp;quot;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;route&lt;/strong&gt;: route to heartbeat operation (default: &amp;ldquo;heartbeat&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dependencies&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;endpoint&lt;/strong&gt;: override for HTTP Endpoint dependency&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;connection(s)&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;discovery_key&lt;/strong&gt;: (optional) key to retrieve the connection from &lt;a href=&#34;../../../components/connect/idiscovery&#34;&gt;IDiscovery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;protocol&lt;/strong&gt;: connection protocol: http or https&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;host&lt;/strong&gt;: host name or IP address&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;port&lt;/strong&gt;: port number&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;uri&lt;/strong&gt;: resource URI or connection string with all parameters in it&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;references&#34;&gt;References&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;*:logger:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/log/ilogger&#34;&gt;ILogger&lt;/a&gt; components to pass log messages&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*:counters:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/count/icounters&#34;&gt;ICounters&lt;/a&gt; components to pass collected measurements&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*:traces:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/trace/itracer&#34;&gt;ITracer&lt;/a&gt; components to record traces&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*:discovery:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/connect/idiscovery&#34;&gt;IDiscovery&lt;/a&gt; services to resolve connection&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;configure&#34;&gt;configure&lt;/h4&gt;
&lt;p&gt;Configures component by passing configuration parameters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;configure(config: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;config&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - configuration parameters to be set.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;register&#34;&gt;register&lt;/h4&gt;
&lt;p&gt;Registers all service routes in HTTP endpoint.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;register()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;heartbeat&#34;&gt;heartbeat&lt;/h4&gt;
&lt;p&gt;Handles heartbeat requests&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;heartbeat(): str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: str - http response to the request.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#111&#34;&gt;service&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;HeartbeatService&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;service&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;configure&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;ConfigParams&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;from_tuples&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;route&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;ping&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;connection.protocol&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;http&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;connection.host&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;connection.port&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;))&lt;/span&gt;

&lt;span style=&#34;color:#111&#34;&gt;service&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;open&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;123&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;restservicerest_service&#34;&gt;&lt;a href=&#34;../rest_service&#34;&gt;RestService&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;restclientclientsrest_client&#34;&gt;&lt;a href=&#34;../../clients/rest_client&#34;&gt;RestClient&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: HttpEndpoint</title>
      <link>/python/rpc/services/http_endpoint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/rpc/services/http_endpoint/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../../../commons/config/iconfigurable&#34;&gt;IConfigurable&lt;/a&gt;, &lt;a href=&#34;../../../commons/refer/ireferenceable&#34;&gt;IReferenceable&lt;/a&gt;, &lt;a href=&#34;../../../commons/run/iopenable&#34;&gt;IOpenable&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The HttpEndpoint class allows you to create HTTP endpoints.&lt;/p&gt;
&lt;p&gt;Important points&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An endpoint is a URL, at which a given service can be accessed by a client.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;configuration-parameters&#34;&gt;Configuration parameters&lt;/h4&gt;
&lt;p&gt;Parameters to pass to the &lt;a href=&#34;#configure&#34;&gt;configure&lt;/a&gt; method for component configuration:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;connection(s)&lt;/strong&gt;: the connection resolver&amp;rsquo;s connections:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&amp;ldquo;connection.discovery_key&amp;rdquo;&lt;/strong&gt;: key to use for connection resolving in a discovery service;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;ldquo;connection.protocol&amp;rdquo;&lt;/strong&gt;: connection&amp;rsquo;s protocol;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;ldquo;connection.host&amp;rdquo;&lt;/strong&gt;: target host;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;ldquo;connection.port&amp;rdquo;&lt;/strong&gt;: target port;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;ldquo;connection.uri&amp;rdquo;&lt;/strong&gt;: target URI.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;credential&lt;/strong&gt;: the HTTPS credentials:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&amp;ldquo;credential.ssl_key_file&amp;rdquo;&lt;/strong&gt;: SSL private key in PEM&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;ldquo;credential.ssl_crt_file&amp;rdquo;&lt;/strong&gt;: SSL certificate in PEM&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;ldquo;credential.ssl_ca_file&amp;rdquo;&lt;/strong&gt;: certificate authorities (root cerfiticates) in PEM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;references&#34;&gt;References&lt;/h4&gt;
&lt;p&gt;A logger, counters, and a connection resolver can be referenced by passing the
following references to the object&amp;rsquo;s &lt;a href=&#34;#set_references&#34;&gt;set_references&lt;/a&gt; method:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;*:logger:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/log/ilogger&#34;&gt;ILogger&lt;/a&gt; components to pass log messages&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*:counters:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/count/icounters&#34;&gt;ICounters&lt;/a&gt; components to pass collected measurements&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*:discovery:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/connect/idiscovery&#34;&gt;IDiscovery&lt;/a&gt; services to resolve connections&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;close&#34;&gt;close&lt;/h4&gt;
&lt;p&gt;Closes this endpoint and the REST server (service) that was opened earlier.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;close(correlation_id: Optional[str])&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;configure&#34;&gt;configure&lt;/h4&gt;
&lt;p&gt;Configures this HttpEndpoint using the given configuration parameters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;configure(config: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;config&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - configuration parameters, containing a &amp;ldquo;connection(s)&amp;rdquo; section.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;get_correlation_id&#34;&gt;get_correlation_id&lt;/h4&gt;
&lt;p&gt;Returns correlationId from request&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;get_correlation_id(): Optional[str]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Optional[str] - http response to the request.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;is_open&#34;&gt;is_open&lt;/h4&gt;
&lt;p&gt;Checks if the component is open.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;is_open(): bool&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: bool - whether or not this endpoint is open with an actively listening REST server.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;register&#34;&gt;register&lt;/h4&gt;
&lt;p&gt;Registers a registerable object for dynamic endpoint discovery.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;register(registration: &lt;a href=&#34;../../services/iregisterable&#34;&gt;IRegisterable&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;registration&lt;/strong&gt;: &lt;a href=&#34;../../services/iregisterable&#34;&gt;IRegisterable&lt;/a&gt; - the registration to add.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;register_interceptor&#34;&gt;register_interceptor&lt;/h4&gt;
&lt;p&gt;Registers a middleware action for the given route.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;register_interceptor(route: str, action: Callable)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;route&lt;/strong&gt;: str - route to register in this object&amp;rsquo;s REST server (service).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;action&lt;/strong&gt;: Callable - middleware action to perform at the given route.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;register_route&#34;&gt;register_route&lt;/h4&gt;
&lt;p&gt;Registers an action in this objects REST server (service) by the given method and route.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;register_route(method: str, route: str, schema: &lt;a href=&#34;../../../commons/validate/schema&#34;&gt;Schema&lt;/a&gt;, handler: Callable)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;method&lt;/strong&gt;: str - HTTP method of the route.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;route&lt;/strong&gt;: str - route to register in this object&amp;rsquo;s REST server (service).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;schema&lt;/strong&gt;: &lt;a href=&#34;../../../commons/validate/schema&#34;&gt;Schema&lt;/a&gt; - schema to use for parameter validation.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;handler&lt;/strong&gt;: Callable - action to perform at the given route.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;register_route_with_auth&#34;&gt;register_route_with_auth&lt;/h4&gt;
&lt;p&gt;Registers an action with authorization in this objects REST server (service)
by the given method and route.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;register_route_with_auth(method: str, route: str, schema: Schema, authorize: Callable, action: Callable)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;method&lt;/strong&gt;: str - HTTP method of the route.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;route&lt;/strong&gt;: str - route to register in this object&amp;rsquo;s REST server (service).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;schema&lt;/strong&gt;: &lt;a href=&#34;../../../commons/validate/schema&#34;&gt;Schema&lt;/a&gt; - schema to use for parameter validation.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;authorize&lt;/strong&gt;: Callable - authorization interceptor&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;action&lt;/strong&gt;: Callable - action to perform at the given route.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;set_references&#34;&gt;set_references&lt;/h4&gt;
&lt;p&gt;Sets references to this endpoint&amp;rsquo;s logger, counters, and connection resolver.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;set_references(references: &lt;a href=&#34;../../../commons/refer/ireferences&#34;&gt;IReferences&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;references&lt;/strong&gt;: &lt;a href=&#34;../../../commons/refer/ireferences&#34;&gt;IReferences&lt;/a&gt; - IReferences object, containing references to a logger, counters, and a connection resolver.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;unregister&#34;&gt;unregister&lt;/h4&gt;
&lt;p&gt;Unregisters a registerable object, so that it is no longer used in dynamic endpoint discovery.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;unregister(registration: &lt;a href=&#34;../services/iregisterable&#34;&gt;IRegisterable&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;registration&lt;/strong&gt;: &lt;a href=&#34;../services/iregisterable&#34;&gt;IRegisterable&lt;/a&gt; - registration to remove.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;my_method&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;_config&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;_references&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;):&lt;/span&gt;
    &lt;span style=&#34;color:#111&#34;&gt;endpoint&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;HttpEndpoint&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;()&lt;/span&gt;
    &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;_config&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color:#111&#34;&gt;endpoint&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;configure&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;_config&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;_references&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color:#111&#34;&gt;endpoint&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;setReferences&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;_references&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# ...&lt;/span&gt;

    &lt;span style=&#34;color:#111&#34;&gt;endpoint&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;open&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;correlationId&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;iconfigurablecommonsconfigiconfigurable&#34;&gt;&lt;a href=&#34;../../../commons/config/iconfigurable&#34;&gt;IConfigurable&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;ireferenceablecommonsreferireferenceable&#34;&gt;&lt;a href=&#34;../../../commons/refer/ireferenceable&#34;&gt;IReferenceable&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;iopenablecommonsruniopenable&#34;&gt;&lt;a href=&#34;../../../commons/run/iopenable&#34;&gt;IOpenable&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: HttpRequestDetector</title>
      <link>/python/rpc/services/http_request_detector/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/rpc/services/http_request_detector/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The HttpRequestDetector class allows you to retrieve parameters from HTTP requests.&lt;/p&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;detect_address&#34;&gt;detect_address&lt;/h4&gt;
&lt;p&gt;Detects the IP address from where the given HTTP request was received.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; detect_address(req: bottle.Request): str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;req&lt;/strong&gt;: bottle.Request - HTTP request to process.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: str - detected IP address (without a port). If no IP is detected - &lt;em&gt;None&lt;/em&gt; will be returned.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;detect_browser&#34;&gt;detect_browser&lt;/h4&gt;
&lt;p&gt;Detects the browser (using &amp;ldquo;user-agent&amp;rdquo;) from where the given HTTP request was made.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; detect_browser(req: bottle.Request) -&amp;gt; str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;req&lt;/strong&gt;: bottle.Request - HTTP request to process.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: str - detected browser. Detectable browsers: &amp;ldquo;chrome&amp;rdquo;, &amp;ldquo;msie&amp;rdquo;, &amp;ldquo;firefox&amp;rdquo;, &amp;ldquo;safari&amp;rdquo;. Otherwise - &amp;ldquo;unknown&amp;rdquo; will be returned.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;detect_platform&#34;&gt;detect_platform&lt;/h4&gt;
&lt;p&gt;Detects the platform (using &amp;ldquo;user-agent&amp;rdquo;) from which the given HTTP request was made.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; detect_platform(req: bottle.Request): str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;req&lt;/strong&gt;: bottle.Request - HTTP request to process.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: str - detected platform and version. Detectable platforms: &amp;ldquo;mobile&amp;rdquo;, &amp;ldquo;iphone&amp;rdquo;,
&amp;ldquo;ipad&amp;rdquo;,  &amp;ldquo;macosx&amp;rdquo;, &amp;ldquo;android&amp;rdquo;,  &amp;ldquo;webos&amp;rdquo;, &amp;ldquo;mac&amp;rdquo;, &amp;ldquo;windows&amp;rdquo;. Otherwise - &amp;ldquo;unknown&amp;rdquo; will
be returned.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;detect_server_host&#34;&gt;detect_server_host&lt;/h4&gt;
&lt;p&gt;Detects the host name of the request&amp;rsquo;s destination server.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; detect_server_host(req: bottle.Request): str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;req&lt;/strong&gt;: bottle.Request - HTTP request to process.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: str - destination server&amp;rsquo;s host name.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;detect_server_port&#34;&gt;detect_server_port&lt;/h4&gt;
&lt;p&gt;Detects the request&amp;rsquo;s destination port number.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; detect_server_port(req: bottle.Request): str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;req&lt;/strong&gt;: bottle.Request - HTTP request to process.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: string - detected port number or &lt;em&gt;80&lt;/em&gt; (if none are detected).&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: HttpResponseSender</title>
      <link>/python/rpc/services/http_response_sender/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/rpc/services/http_response_sender/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The HttpResponseSender class allows you to handle HTTP-based responses.&lt;/p&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;send_created_result&#34;&gt;send_created_result&lt;/h4&gt;
&lt;p&gt;Creates a callback function that sends a newly created object as JSON.
This callack function call be called directly or passed
as a parameter to business logic components.&lt;/p&gt;
&lt;p&gt;If the object is not None, it returns 201 status code.
For None results, it returns 204 status code.
If an error occurs, it sends ErrorDescription with approproate status code.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; send_created_result(result: Any): Optional[str]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;result&lt;/strong&gt;: Any - an execution result&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;return&lt;/strong&gt;: Optional[str] - JSON text response&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;send_deleted_result&#34;&gt;send_deleted_result&lt;/h4&gt;
&lt;p&gt;Creates a callback function that sends a deleted object as JSON.
That callack function call be called directly or passed
as a parameter to business logic components.&lt;/p&gt;
&lt;p&gt;If object is not None, it returns 201 status code.
For None results, it returns 204 status code.
If an error occurs, it sends ErrorDescription with the approproate status code.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; send_deleted_result(result: Any = None): Optional[str]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;result&lt;/strong&gt;: Any - execution result&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;return&lt;/strong&gt;: Optional[str] - JSON text response&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;send_empty_result&#34;&gt;send_empty_result&lt;/h4&gt;
&lt;p&gt;Creates a callback function that sends an empty result with 204 status code.
If an error occurs, it sends ErrorDescription with approproate status code.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; send_empty_result(result: Any = None): Optional[str]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;result&lt;/strong&gt;: Any - an execution result&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;return&lt;/strong&gt;: Optional[str] - JSON text response&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;send_error&#34;&gt;send_error&lt;/h4&gt;
&lt;p&gt;Sends an error serialized as ErrorDescription object
and an appropriate HTTP status code.
If status code is not defined, it uses 500 status code.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; send_error(error: Any): str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;result&lt;/strong&gt;: Any - execution result&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;return&lt;/strong&gt;: Optional[str] - JSON text response&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;send_result&#34;&gt;send_result&lt;/h4&gt;
&lt;p&gt;Creates a callback function that sends a result as a JSON object.
That callack function call be called directly or passed
as a parameter to business logic components.&lt;/p&gt;
&lt;p&gt;If object is not None, it returns 200 status code.
For None results, it returns 204 status code.
If error occur, it sends ErrorDescription with the approproate status code.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; send_result(result: Any): Optional[str]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;result&lt;/strong&gt;: Any - execution result&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;return&lt;/strong&gt;: Optional[str] - JSON text response&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: InstrumentTiming</title>
      <link>/python/rpc/services/instrument_timing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/rpc/services/instrument_timing/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The InstrumentTiming class allows you to create logs, countes and timings for methods that call _instrument.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new instance of InstrumentTiming.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;InstrumentTiming(correlation_id: Optional[str], name: str, verb: str, logger: &lt;a href=&#34;../../../components/log/ilogger&#34;&gt;ILogger&lt;/a&gt;, counters: &lt;a href=&#34;../../../components/count/icounters&#34;&gt;ICounters&lt;/a&gt;,
counter_timing: Optional[&lt;a href=&#34;../../../components/count/counter_timing&#34;&gt;CounterTiming&lt;/a&gt;], trace_timing: Optional[&lt;a href=&#34;../../../components/trace/trace_timing&#34;&gt;TraceTiming&lt;/a&gt;])&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;correlation_id: Optional[str] -  transaction id used to trace execution through the call chain. &lt;br&gt;
name: str - name &lt;br&gt;
verb: str - verb or &amp;lsquo;call&amp;rsquo;  &lt;br&gt;
logger: &lt;a href=&#34;../../../components/log/ilogger&#34;&gt;ILogger&lt;/a&gt; - logger &lt;br&gt;
counters: &lt;a href=&#34;../../../components/count/icounters&#34;&gt;ICounters&lt;/a&gt; - counters  &lt;br&gt;
counter_timing: Optional[&lt;a href=&#34;../../../components/count/counter_timing&#34;&gt;CounterTiming&lt;/a&gt;] - counter &lt;br&gt;
trace_timing: Optional[&lt;a href=&#34;../../../components/trace/trace_timing&#34;&gt;TraceTiming&lt;/a&gt;] - time tracer&lt;/p&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;end_failure&#34;&gt;end_failure&lt;/h4&gt;
&lt;p&gt;Manages a failed service end.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;end_failure(err: Exception)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;err&lt;/strong&gt;: Exception - exception&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;end_timing&#34;&gt;end_timing&lt;/h4&gt;
&lt;p&gt;Ends the service.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;end_timing(err: Exception = None)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;err&lt;/strong&gt;: Exception - TODO add description&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;end_success&#34;&gt;end_success&lt;/h4&gt;
&lt;p&gt;Manages a successful service end.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;end_success()&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Python: IRegisterable</title>
      <link>/python/rpc/services/iregisterable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/rpc/services/iregisterable/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The IRegisterable interface is used to perform on-demand registrations.&lt;/p&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;register&#34;&gt;register&lt;/h4&gt;
&lt;p&gt;Performs the required registration steps.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;register()&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Python: ISwaggerService</title>
      <link>/python/rpc/services/iswagger_service/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/rpc/services/iswagger_service/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The  ISwaggerService interface is used to perform Swagger registrations.&lt;/p&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;register_open_api_spec&#34;&gt;register_open_api_spec&lt;/h4&gt;
&lt;p&gt;Performs the required Swagger registration steps.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;register_open_api_spec(base_route: str, swagger_route: str)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;base_route&lt;/strong&gt;: str - base route&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;swagger_route&lt;/strong&gt;: str - Swagger route&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: RestOperations</title>
      <link>/python/rpc/services/rest_operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/rpc/services/rest_operations/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../../../commons/config/iconfigurable&#34;&gt;IConfigurable&lt;/a&gt;, &lt;a href=&#34;../../../commons/refer/ireferenceable&#34;&gt;IReferenceable&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The RestOperations class allows you to handle REST services&#39; operations.&lt;/p&gt;
&lt;h3 id=&#34;fields&#34;&gt;Fields&lt;/h3&gt;
&lt;span class=&#34;hide-title-link&#34;&gt;
&lt;h4 id=&#34;_logger&#34;&gt;_logger&lt;/h4&gt;
&lt;p&gt;Composite logger component&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;_logger&lt;/strong&gt;: &lt;a href=&#34;../../../components/log/composite_logger&#34;&gt;CompositeLogger&lt;/a&gt; = CompositeLogger()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;_counters&#34;&gt;_counters&lt;/h4&gt;
&lt;p&gt;Counter component&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;_counters&lt;/strong&gt;: &lt;a href=&#34;../../../components/count/composite_counters&#34;&gt;CompositeCounters&lt;/a&gt; = CompositeCounters()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;_dependency_resolver&#34;&gt;_dependency_resolver&lt;/h4&gt;
&lt;p&gt;Dependency resolver component&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;_dependency_resolver&lt;/strong&gt;: &lt;a href=&#34;../../../commons/refer/dependency_resolver&#34;&gt;DependencyResolver&lt;/a&gt; = DependencyResolver()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/span&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;configure&#34;&gt;configure&lt;/h4&gt;
&lt;p&gt;Configures a component by passing its configuration parameters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;configure(config: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;config&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - configuration parameters to be set.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;_get_correlation_id&#34;&gt;_get_correlation_id&lt;/h4&gt;
&lt;p&gt;Returns a correlationId from a request&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;_get_correlation_id(): Optional[str]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Optional[str] - correlationId from a request&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;_get_filter_params&#34;&gt;_get_filter_params&lt;/h4&gt;
&lt;p&gt;Gets the filter parameters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;_get_filter_params(): &lt;a href=&#34;../../../commons/data/filter_params&#34;&gt;FilterParams&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../../../commons/data/filter_params&#34;&gt;FilterParams&lt;/a&gt; - filter paramters&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;_get_paging_params&#34;&gt;_get_paging_params&lt;/h4&gt;
&lt;p&gt;Gets the paging parameters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;_get_paging_params(): &lt;a href=&#34;../../../commons/data/paging_params&#34;&gt;PagingParams&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../../../commons/data/paging_params&#34;&gt;PagingParams&lt;/a&gt; - paging paramters&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;invoke&#34;&gt;invoke&lt;/h4&gt;
&lt;p&gt;Invokes an operation.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;invoke(operation: str): Callable&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;operation&lt;/strong&gt;: str - operation to be invoked&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Callable - operation&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;_send_bad_request&#34;&gt;_send_bad_request&lt;/h4&gt;
&lt;p&gt;Sends a bad request error message.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;_send_bad_request(message: str): str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: str - message&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: str - bad request error message&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;_send_conflict&#34;&gt;_send_conflict&lt;/h4&gt;
&lt;p&gt;Sends a conflict error messge&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;_send_conflict(message: str): str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: str - message&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: str - conflict error message.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;_send_created_result&#34;&gt;_send_created_result&lt;/h4&gt;
&lt;p&gt;Sends a JSON object with the created result.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;_send_created_result(result: Any = None): Optional[str]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;result&lt;/strong&gt;: Any - result to be sent.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Optional[str] - JSON object with the created result.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;_send_deleted_result&#34;&gt;_send_deleted_result&lt;/h4&gt;
&lt;p&gt;Sends the deleted result in JSON format.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;_send_deleted_result(): Optional[str]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;result&lt;/strong&gt;: Any - execution result or a promise with execution result.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: JSON object with the deleted result.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;_send_empty_result&#34;&gt;_send_empty_result&lt;/h4&gt;
&lt;p&gt;Send an empty result with 204 status code.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;_send_empty_result(result: Any = None): Optional[str]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;result&lt;/strong&gt;: Any - Optional[str]&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Optional[str] - empty result with 204 status code.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;_send_error&#34;&gt;_send_error&lt;/h4&gt;
&lt;p&gt;Sends an error serialized as ErrorDescription object and appropriate HTTP status code.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;_send_error(error: Any = None): str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;error&lt;/strong&gt;: Any - error&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Optional[str] - error serialized as ErrorDescription object and appropriate HTTP status code.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;_send_internal_error&#34;&gt;_send_internal_error&lt;/h4&gt;
&lt;p&gt;Sends an internal error message&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;_send_internal_error(message: str): str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: Any - message&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Optional[str] - internal error message&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;_send_not_found&#34;&gt;_send_not_found&lt;/h4&gt;
&lt;p&gt;Sends a not found error message.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;_send_not_found(message: str): str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: Any - message&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Optional[str] - not found error message.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;_send_result&#34;&gt;_send_result&lt;/h4&gt;
&lt;p&gt;Sends a result as a JSON object.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;_send_result(result: Any = None): Optional[str]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;result&lt;/strong&gt;: Any - result&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Optional[str] - result as a JSON object.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;_send_server_unavailable&#34;&gt;_send_server_unavailable&lt;/h4&gt;
&lt;p&gt;Sends a server unavailable error message (Status code 503).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;_send_server_unavailable(message: str): str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: str - message&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: str - server unavailable error message (Status code 503).&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;_send_session_expired&#34;&gt;_send_session_expired&lt;/h4&gt;
&lt;p&gt;Sends a session expired error message (Status code 440).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;_send_session_expired(message: str): str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: str - message&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: str -  session expired error message (Status code 440).&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;_send_unauthorized&#34;&gt;_send_unauthorized&lt;/h4&gt;
&lt;p&gt;Sends an unauthorized error message.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;_send_unauthorized(message: str): str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: str - message&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: str - unauthorized error message.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;set_references&#34;&gt;set_references&lt;/h4&gt;
&lt;p&gt;Sets the specified references.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;set_references(references: &lt;a href=&#34;../../../commons/refer/ireferences&#34;&gt;IReferences&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;references&lt;/strong&gt;: &lt;a href=&#34;../../../commons/refer/ireferences&#34;&gt;IReferences&lt;/a&gt; - specified references&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: RestService</title>
      <link>/python/rpc/services/rest_service/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/rpc/services/rest_service/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../../../commons/config/iconfigurable&#34;&gt;IConfigurable&lt;/a&gt;, &lt;a href=&#34;../../../commons/refer/ireferenceable&#34;&gt;IReferenceable&lt;/a&gt;, &lt;a href=&#34;../../../commons/run/iopenable&#34;&gt;IOpenable&lt;/a&gt;, &lt;a href=&#34;../../../commons/refer/iunreferenceable&#34;&gt;IUnreferenceable&lt;/a&gt;, &lt;a href=&#34;../iregisterable&#34;&gt;IRegisterable&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The RestService class allows you to create REST services that receive remote calls via the HTTP/REST protocol.&lt;/p&gt;
&lt;h4 id=&#34;configuration-parameters&#34;&gt;Configuration parameters&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;base_route&lt;/strong&gt;: base route for remote URI&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dependencies&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;endpoint&lt;/strong&gt;: override for HTTP Endpoint dependency&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;controller&lt;/strong&gt;: override for Controller dependency&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;connection(s)&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;discovery_key&lt;/strong&gt;: (optional) key to retrieve the connection from &lt;a href=&#34;../../../components/connect/idiscovery&#34;&gt;IDiscovery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;protocol&lt;/strong&gt;: connection protocol (http or https)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;host&lt;/strong&gt;: host name or IP address&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;port&lt;/strong&gt;: port number&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;uri&lt;/strong&gt;: resource URI or connection string with all parameters in it&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;credential&lt;/strong&gt;: the HTTPS credentials:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ssl_key_file&lt;/strong&gt;: SSL private key in PEM&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ssl_crt_file&lt;/strong&gt;: SSL certificate in PEM&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ssl_ca_file&lt;/strong&gt;: certificate authorities (root cerfiticates) in PEM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;references&#34;&gt;References&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;*:logger:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/log/ilogger&#34;&gt;ILogger&lt;/a&gt; components to pass log messages&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*:counters:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/count/icounters&#34;&gt;ICounters&lt;/a&gt; components to pass collected measurements&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*:traces:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/trace/itracer&#34;&gt;ITracer&lt;/a&gt; components to record traces&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*:discovery:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/connect/idiscovery&#34;&gt;IDiscovery&lt;/a&gt; services to resolve connection&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*:endpoint:http:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../http_endpoint&#34;&gt;HttpEndpoint&lt;/a&gt; reference&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;fields&#34;&gt;Fields&lt;/h3&gt;
&lt;span class=&#34;hide-title-link&#34;&gt;
&lt;h4 id=&#34;_dependency_resolver&#34;&gt;_dependency_resolver&lt;/h4&gt;
&lt;p&gt;Dependency resolver.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;_dependency_resolver&lt;/strong&gt;: &lt;a href=&#34;../../../commons/refer/dependency_resolver&#34;&gt;DependencyResolver&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;_logger&#34;&gt;_logger&lt;/h4&gt;
&lt;p&gt;Logger.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;_logger&lt;/strong&gt;: &lt;a href=&#34;../../../components/log/composite_logger&#34;&gt;CompositeLogger&lt;/a&gt; = CompositeLogger()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;_counters&#34;&gt;_counters&lt;/h4&gt;
&lt;p&gt;Performance counters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;_counters&lt;/strong&gt;: &lt;a href=&#34;../../../components/count/composite_counters&#34;&gt;CompositeCounters&lt;/a&gt; = CompositeCounters()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;_debug&#34;&gt;_debug&lt;/h4&gt;
&lt;p&gt;Boolean that set debugging to True or False.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;_debug&lt;/strong&gt; = False&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;_base_route&#34;&gt;_base_route&lt;/h4&gt;
&lt;p&gt;Base route.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;_base_route&lt;/strong&gt;: str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;_endpoint&#34;&gt;_endpoint&lt;/h4&gt;
&lt;p&gt;HTTP endpoint that exposes this service.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;_endpoint&lt;/strong&gt;: &lt;a href=&#34;../http_endpoint&#34;&gt;HttpEndpoint&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;_tracer&#34;&gt;_tracer&lt;/h4&gt;
&lt;p&gt;Tracer.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;_tracer&lt;/strong&gt;: &lt;a href=&#34;../../../components/trace/composite_tracer&#34;&gt;CompositeTracer&lt;/a&gt; = CompositeTracer()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;_config&#34;&gt;_config&lt;/h4&gt;
&lt;p&gt;Service&amp;rsquo;s configuration paramters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;_config&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;_swagger_service&#34;&gt;_swagger_service&lt;/h4&gt;
&lt;p&gt;Swagger service.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;_swagger_service&lt;/strong&gt;: &lt;a href=&#34;../iswagger_service&#34;&gt;ISwaggerService&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;_swagger_enabled&#34;&gt;_swagger_enabled&lt;/h4&gt;
&lt;p&gt;Boolean that defines if the Swagger sevice is enabled or not.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;_swagger_enabled&lt;/strong&gt; = False&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;_swagger_route&#34;&gt;_swagger_route&lt;/h4&gt;
&lt;p&gt;Swagger&amp;rsquo;s route.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;_swagger_route&lt;/strong&gt; = &amp;lsquo;swagger&amp;rsquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/span&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;close&#34;&gt;close&lt;/h4&gt;
&lt;p&gt;Closes a component and frees used resources.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;close(correlation_id: Optional[str])&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;configure&#34;&gt;configure&lt;/h4&gt;
&lt;p&gt;Configures a component by passing its configuration parameters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;configure(config: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;config&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - configuration parameters, containing a &amp;ldquo;connection(s)&amp;rdquo; section.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;_get_correlation_id&#34;&gt;_get_correlation_id&lt;/h4&gt;
&lt;p&gt;Returns correlationId from a request&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;_get_correlation_id(self): Optional[str]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Optional[str] - the correlation id from request.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;_instrument&#34;&gt;_instrument&lt;/h4&gt;
&lt;p&gt;Adds instrumentation to log calls and measure call time.
It returns a Timing object that is used to end the time measurement.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;_instrument(correlation_id: Optional[str], name: str): &lt;a href=&#34;../instrument_timing&#34;&gt;InstrumentTiming&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: str - method name.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../instrument_timing&#34;&gt;InstrumentTiming&lt;/a&gt; - InstrumentTiming object to end the time measurement.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;is_open&#34;&gt;is_open&lt;/h4&gt;
&lt;p&gt;Checks if the component is open.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;is_open(): bool&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: bool - True if the component has been opened and False otherwise.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;open&#34;&gt;open&lt;/h4&gt;
&lt;p&gt;Opens the component.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;open(correlation_id: Optional[str])&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;register_interceptor&#34;&gt;register_interceptor&lt;/h4&gt;
&lt;p&gt;Registers a middleware for a given route in HTTP endpoint.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;register_interceptor(route: str, action: Callable)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;route&lt;/strong&gt;: str - command route. Base route will be added to this route&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;action&lt;/strong&gt;: Callable - action function that is called when middleware is invoked.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;_register_open_api_spec&#34;&gt;_register_open_api_spec&lt;/h4&gt;
&lt;p&gt;Registers the open api spec.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;_register_open_api_spec(content: str)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;content&lt;/strong&gt;: str - response header content&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;_register_open_api_spec_from_file&#34;&gt;_register_open_api_spec_from_file&lt;/h4&gt;
&lt;p&gt;Registers the open api spec from a file.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;_register_open_api_spec_from_file(path: str)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;path&lt;/strong&gt;: str - path to the file&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;register_route&#34;&gt;register_route&lt;/h4&gt;
&lt;p&gt;Registers a route in HTTP endpoint.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;register_route(method: str, route: str, schema: &lt;a href=&#34;../../../commons/validate/schema&#34;&gt;Schema&lt;/a&gt;, handler: Callable)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;method&lt;/strong&gt;: str - HTTP method: &amp;ldquo;get&amp;rdquo;, &amp;ldquo;head&amp;rdquo;, &amp;ldquo;post&amp;rdquo;, &amp;ldquo;put&amp;rdquo;, &amp;ldquo;delete&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;route&lt;/strong&gt;: str - command route. The base route will be added to this route&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;schema&lt;/strong&gt;: &lt;a href=&#34;../../../commons/validate/schema&#34;&gt;Schema&lt;/a&gt; - validation schema to validate received parameters.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;handler&lt;/strong&gt;: Callable - action function that is called when an operation is invoked.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;register_route_with_auth&#34;&gt;register_route_with_auth&lt;/h4&gt;
&lt;p&gt;Registers a route with authorization in HTTP endpoint.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;register_route_with_auth(method: str, route: str, schema: Schema, authorize: Callable, action: Callable)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;method&lt;/strong&gt;: str - HTTP method: &amp;ldquo;get&amp;rdquo;, &amp;ldquo;head&amp;rdquo;, &amp;ldquo;post&amp;rdquo;, &amp;ldquo;put&amp;rdquo;, &amp;ldquo;delete&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;route&lt;/strong&gt;: str - command route. The base route will be added to this route&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;schema&lt;/strong&gt;: &lt;a href=&#34;../../../commons/validate/schema&#34;&gt;Schema&lt;/a&gt; - validation schema to validate received parameters.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;authorize&lt;/strong&gt;: Callable - authorization interceptor&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;action&lt;/strong&gt;: Callable - action function that is called when an operation is invoked.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;send_created_result&#34;&gt;send_created_result&lt;/h4&gt;
&lt;p&gt;Creates a callback function that sends newly created object as JSON. That callack function call be called directly or passed as a parameter to business logic components. If object is not null it returns 201 status code. For null results it returns 204 status code. If error occur it sends ErrorDescription with approproate status code.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;send_created_result(result: Any): Optional[str]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;result&lt;/strong&gt;: Any - an IReferences object, containing references to a logger, counters, and a connection resolver.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Optional[str] - JSON response text&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;send_deleted_result&#34;&gt;send_deleted_result&lt;/h4&gt;
&lt;p&gt;Creates a callback function that sends a newly deleted object as JSON. The callack function call be called directly or passed as a parameter to business logic components. If the object is not None, it returns 200 status code. For None results it returns 204 status code. If an error occurs, it sends ErrorDescription with the approproate status code.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;send_deleted_result(result: Any = None): Optional[str]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;result&lt;/strong&gt;: Any - body object to result.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Optional[str] - JSON response text&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;send_error&#34;&gt;send_error&lt;/h4&gt;
&lt;p&gt;Sends an error serialized as ErrorDescription object and the appropriate HTTP status code. If status code is not defined, it uses 500 status code.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;send_error(error: Any): str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;error&lt;/strong&gt;: Any - error object to be sent.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: str - JSON response text&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;send_result&#34;&gt;send_result&lt;/h4&gt;
&lt;p&gt;Creates a callback function that sends a result as a JSON object. The callack function call be called directly or passed as a parameter to business logic components.&lt;/p&gt;
&lt;p&gt;If the object is not None it returns 200 status code. For None results, it returns
204 status code. If an error occurs, it sends ErrorDescription with the approproate status code.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;send_result(result: Any): Optional[str]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;result&lt;/strong&gt;: Any - body object to result.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Optional[str] - JSON response text&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;set_references&#34;&gt;set_references&lt;/h4&gt;
&lt;p&gt;Sets references to dependent components.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;set_references(references: &lt;a href=&#34;../../../commons/refer/ireferences&#34;&gt;IReferences&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;references&lt;/strong&gt;: &lt;a href=&#34;../../../commons/refer/ireferences&#34;&gt;IReferences&lt;/a&gt; - references to locate the component dependencies.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;unset_references&#34;&gt;unset_references&lt;/h4&gt;
&lt;p&gt;Unsets (clears) previously set references to dependent components.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;unset_references()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;abstract-methods&#34;&gt;Abstract methods&lt;/h3&gt;
&lt;h4 id=&#34;register&#34;&gt;register&lt;/h4&gt;
&lt;p&gt;Registers all service routes in a HTTP endpoint.&lt;/p&gt;
&lt;p&gt;This method is called by the service and must be overriden
in child classes.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;abstractmethod&lt;/code&gt; register()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;MyRestService&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;RestService&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;):&lt;/span&gt;
    &lt;span style=&#34;color:#111&#34;&gt;_controller&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;None&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# ...&lt;/span&gt;
    &lt;span style=&#34;color:#00a8c8&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;__init__&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;):&lt;/span&gt;
        &lt;span style=&#34;color:#111&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;MyRestService&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;__init__&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;()&lt;/span&gt;
        &lt;span style=&#34;color:#111&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;_dependencyResolver&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;controller&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Descriptor&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;mygroup&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;controller&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;*&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;1.0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;))&lt;/span&gt;

    &lt;span style=&#34;color:#00a8c8&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;set_references&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;references&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;):&lt;/span&gt;
        &lt;span style=&#34;color:#111&#34;&gt;super&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;MyRestService&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;set_references&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;references&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color:#111&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;_controller&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;_dependencyResolver&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;get_required&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;controller&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;

    &lt;span style=&#34;color:#00a8c8&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;register&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;():&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;# ...&lt;/span&gt;

&lt;span style=&#34;color:#111&#34;&gt;service&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;MyRestService&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;service&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;configure&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;ConfigParams&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;from_tuples&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;connection.protocol&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;http&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;
                                               &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;connection.host&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;
                                               &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;connection.port&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;))&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;service&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;set_references&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;References&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;from_tuples&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Descriptor&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;mygroup&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;controller&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;default&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;default&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;1.0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;controller&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;))&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;service&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;open&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;123&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;restclientclientsrest_client&#34;&gt;&lt;a href=&#34;../../clients/rest_client&#34;&gt;RestClient&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: StatusOperations</title>
      <link>/python/rpc/services/status_operations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/rpc/services/status_operations/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../rest_operations&#34;&gt;RestOperations&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The StatusOperations class allows you to handle status requests for REST operations.&lt;/p&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;get_status_operation&#34;&gt;get_status_operation&lt;/h4&gt;
&lt;p&gt;Gets the status of the operation.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;get_status_operation(): Callable&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Callable - status of the operation (JSON)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;set_references&#34;&gt;set_references&lt;/h4&gt;
&lt;p&gt;Sets references to dependent components.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;set_references(references: &lt;a href=&#34;../../../commons/refer/ireferences&#34;&gt;IReferences&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;references&lt;/strong&gt;: &lt;a href=&#34;../../../commons/refer/ireferences&#34;&gt;IReferences&lt;/a&gt; - references to locate the component dependencies.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;status&#34;&gt;status&lt;/h4&gt;
&lt;p&gt;Handles status requests.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;status(): str&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Python: StatusRestService</title>
      <link>/python/rpc/services/status_rest_service/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/rpc/services/status_rest_service/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../rest_service&#34;&gt;RestService&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The StatusRestService class allows you to create a service that returns microservice status information via the HTTP/REST protocol.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;The service responds on /status route (can be changed) with a JSON object:
{
    - &amp;quot;id&amp;quot;:            unique container id (usually hostname)
    - &amp;quot;name&amp;quot;:          container name (from ContextInfo)
    - &amp;quot;description&amp;quot;:   container description (from ContextInfo)
    - &amp;quot;start_time&amp;quot;:    time when container was started
    - &amp;quot;current_time&amp;quot;:  current time in UTC
    - &amp;quot;uptime&amp;quot;:        duration since container start time in milliseconds
    - &amp;quot;properties&amp;quot;:    additional container properties (from ContextInfo)
    - &amp;quot;components&amp;quot;:    descriptors of components registered in the container
}

&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;configuration-parameters&#34;&gt;Configuration parameters&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;base_route&lt;/strong&gt;: base route for remote URI&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;route&lt;/strong&gt;: status route (default: &amp;ldquo;status&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dependencies&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;endpoint&lt;/strong&gt;: override for HTTP Endpoint dependency&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;controller&lt;/strong&gt;: override for Controller dependency&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;connection(s)&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;discovery_key&lt;/strong&gt;: (optional) key to retrieve the connection from &lt;a href=&#34;../../../components/connect/idiscovery&#34;&gt;IDiscovery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;protocol&lt;/strong&gt;: connection protocol (http or https)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;host&lt;/strong&gt;: host name or IP address&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;port&lt;/strong&gt;: port number&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;uri&lt;/strong&gt;: resource URI or connection string with all parameters in it&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;references&#34;&gt;References&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;*:logger:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/log/ilogger&#34;&gt;ILogger&lt;/a&gt; components to pass log messages&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*:counters:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/count/icounters&#34;&gt;ICounters&lt;/a&gt; components to pass collected measurements&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*:discovery:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/connect/idiscovery&#34;&gt;IDiscovery&lt;/a&gt; services to resolve connection&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*:endpoint:http:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../http_endpoint&#34;&gt;HttpEndpoint&lt;/a&gt; reference&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;configure&#34;&gt;configure&lt;/h4&gt;
&lt;p&gt;Configures the component by passing its configuration parameters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;configure(config: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;config&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - configuration parameters to be set.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;register&#34;&gt;register&lt;/h3&gt;
&lt;p&gt;Registers all service routes in HTTP endpoint.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; register(): void&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;set_references&#34;&gt;set_references&lt;/h4&gt;
&lt;p&gt;Sets references to dependent components.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;set_references(references: &lt;a href=&#34;../../../commons/refer/ireferences&#34;&gt;IReferences&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;references&lt;/strong&gt;: &lt;a href=&#34;../../../commons/refer/ireferences&#34;&gt;IReferences&lt;/a&gt; - references to locate the component dependencies.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#111&#34;&gt;service&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;StatusService&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;service&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;configure&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;ConfigParams&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;from_tuples&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;connection.protocol&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;http&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;connection.host&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;connection.port&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;))&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;service&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;open&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;123&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# ...&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;restclientclientsrest_client&#34;&gt;&lt;a href=&#34;../../clients/rest_client&#34;&gt;RestClient&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;restservicerest_service&#34;&gt;&lt;a href=&#34;../rest_service&#34;&gt;RestService&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
