<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> â€“ Cache</title>
    <link>/python/components/cache/</link>
    <description>Recent content in Cache on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="/python/components/cache/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Python: CacheEntry</title>
      <link>/python/components/cache/cache_entry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/components/cache/cache_entry/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The CacheEntry class allows you to create a data object that can be used to store cached values with their keys used by &lt;a href=&#34;../memory_cache&#34;&gt;MemoryCache&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new instance of the cache entry and assigns its values.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;CacheEntry(key: str, value: str, timeout: int)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;key&lt;/strong&gt;: str - a unique key to locate the value.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: str - a value to be stored.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;timeout&lt;/strong&gt;: int - expiration timeout in milliseconds.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;get_expiration&#34;&gt;get_expiration&lt;/h4&gt;
&lt;p&gt;Gets the expiration timeout.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;get_expiration(): int&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: int - the expiration timeout in milliseconds.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;get_key&#34;&gt;get_key&lt;/h4&gt;
&lt;p&gt;Gets the key to locate the cached value.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;get_key(): str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: str - the value key.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;get_value&#34;&gt;get_value&lt;/h4&gt;
&lt;p&gt;Gets the cached value.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;get_value(): Any&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Any - the value object.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;is_expired&#34;&gt;is_expired&lt;/h4&gt;
&lt;p&gt;Checks if this value has already expired.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;is_expired(): bool&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: bool - true if the value has already expired and false otherwise.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;set_value&#34;&gt;set_value&lt;/h4&gt;
&lt;p&gt;Sets a new value and extends its expiration.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;set_value(value: Any, timeout: int)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - a new cached value.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;timeout&lt;/strong&gt;: int - a expiration timeout in milliseconds.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: DefaultCacheFactory</title>
      <link>/python/components/cache/default_cache_factory/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/components/cache/default_cache_factory/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements&lt;/strong&gt;: &lt;a href=&#34;../../build/factory&#34;&gt;Factory&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Create a new instance of the factory.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;DefaultCacheFactory()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;fields&#34;&gt;Fields&lt;/h3&gt;
&lt;span class=&#34;hide-title-link&#34;&gt;
&lt;h4 id=&#34;nullcachedescriptor&#34;&gt;NullCacheDescriptor&lt;/h4&gt;
&lt;p&gt;A description for a null cache (dummy cache).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NullCacheDescriptor&lt;/strong&gt;: &lt;a href=&#34;../../../commons/refer/descriptor&#34;&gt;Descriptor&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;memorycachedescriptor&#34;&gt;MemoryCacheDescriptor&lt;/h4&gt;
&lt;p&gt;A descriptor for a memory cache.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;MemoryCacheDescriptor&lt;/strong&gt;: &lt;a href=&#34;../../../commons/refer/descriptor&#34;&gt;Descriptor&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;descriptor&#34;&gt;Descriptor&lt;/h4&gt;
&lt;p&gt;A descriptor for a factory cache.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;descriptor&lt;/strong&gt;: &lt;a href=&#34;../../../commons/refer/descriptor&#34;&gt;Descriptor&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/span&gt;
&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;factorybuildfactory&#34;&gt;&lt;a href=&#34;../../build/factory&#34;&gt;Factory&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;icacheicache&#34;&gt;&lt;a href=&#34;../icache&#34;&gt;ICache&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;memorycachememory_cache&#34;&gt;&lt;a href=&#34;../memory_cache&#34;&gt;MemoryCache&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;nullcachenull_cache&#34;&gt;&lt;a href=&#34;../null_cache&#34;&gt;NullCache&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: ICache</title>
      <link>/python/components/cache/icache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/components/cache/icache/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ICache interface defines methods for caches that are used to cache values, in order to improve performance.&lt;/p&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;remove&#34;&gt;remove&lt;/h4&gt;
&lt;p&gt;Removes a value from the cache by its key.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;remove(correlation_id: Optional[str], key: str)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;key&lt;/strong&gt;: str - a unique value key.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;retrieve&#34;&gt;retrieve&lt;/h4&gt;
&lt;p&gt;Retrieves cached value from the cache using its key.
If value is missing in the cache or expired it returns None.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;retrieve(correlation_id: Optional[str], key: str): Any&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;key&lt;/strong&gt;: str - a unique value key.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Any - a cached value or None if value wasn&amp;rsquo;t found or timeout expired.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;store&#34;&gt;store&lt;/h4&gt;
&lt;p&gt;Stores value in the cache with expiration time.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;store(correlation_id: Optional[str], key: str, value: Any, timeout: int): Any&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;key&lt;/strong&gt;: str - a unique value key.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - a value to store.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;timeout&lt;/strong&gt;: int - expiration timeout in milliseconds.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Any - a cached value stored in the cache.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: MemoryCache</title>
      <link>/python/components/cache/memory_cache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/components/cache/memory_cache/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements&lt;/strong&gt;: &lt;a href=&#34;../icache&#34;&gt;ICache&lt;/a&gt;, &lt;a href=&#34;../../../commons/config/ireconfigurable&#34;&gt;IReconfigurable&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The MemoryCache class allows you to create a cache that stores values in the process memory.&lt;/p&gt;
&lt;p&gt;Important points&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This implementation is not suitable for synchronization of distributed processes.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;configuration-parameters&#34;&gt;Configuration parameters&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;options&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;timeout&lt;/strong&gt;: default caching timeout in milliseconds (default: 1 minute)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;max_size&lt;/strong&gt;: maximum number of values stored in this cache (default: 1000)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;configure&#34;&gt;configure&lt;/h4&gt;
&lt;p&gt;Configures component by passing configuration parameters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;configure(config: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;config&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - configuration parameters to be set.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;remove&#34;&gt;remove&lt;/h4&gt;
&lt;p&gt;Removes a value from the cache by its key.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;remove(correlation_id: Optional[str], key: str)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;key&lt;/strong&gt;: str - a unique value key.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;retrieve&#34;&gt;retrieve&lt;/h4&gt;
&lt;p&gt;Retrieves cached value from the cache using its key.
If value is missing in the cache or expired it returns None.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;retrieve(correlation_id: Optional[str], key: str): Any&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;key&lt;/strong&gt;: str - a unique value key.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Any - a cached value or None if value wasn&amp;rsquo;t found or timeout expired.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;store&#34;&gt;store&lt;/h4&gt;
&lt;p&gt;Stores value in the cache with expiration time.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;store(correlation_id: Optional[str], key: str, value: Any, timeout: int): Any&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;key&lt;/strong&gt;: str - a unique value key.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - a value to store.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;timeout&lt;/strong&gt;: int - expiration timeout in milliseconds.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Any - a cached value stored in the cache.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#111&#34;&gt;cache&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;MemoryCache&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;cache&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;store&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;123&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;key1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;ABC&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;icacheicache&#34;&gt;&lt;a href=&#34;../icache&#34;&gt;ICache&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: NullCache</title>
      <link>/python/components/cache/null_cache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/components/cache/null_cache/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements&lt;/strong&gt;: &lt;a href=&#34;../icache&#34;&gt;ICache&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The NullCache class allows you to implement a dummy cache that doesn&amp;rsquo;t do anything.&lt;/p&gt;
&lt;p&gt;Important points&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It can be used in testing or in situations where a cache is required but must be disabled.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;remove&#34;&gt;remove&lt;/h4&gt;
&lt;p&gt;Removes a value from the cache by its key.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;remove(correlation_id: Optional[str], key: str)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id to trace execution through a call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;key&lt;/strong&gt;: str - a unique value key.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;retrieve&#34;&gt;retrieve&lt;/h4&gt;
&lt;p&gt;Retrieves cached value from the cache using its key.
If value is missing in the cache or expired, it returns None.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;retrieve(correlation_id: Optional[str], key: str): Any&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id to trace execution through a call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;key&lt;/strong&gt;: str - a unique value key.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Any - a cached value or None, if value wasn&amp;rsquo;t found or timeout expired.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;store&#34;&gt;store&lt;/h4&gt;
&lt;p&gt;Stores value in the cache with expiration time.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;store(correlation_id: Optional[str], key: str, value: Any, timeout: int): Any&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;key&lt;/strong&gt;: str - a unique value key.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - a value to store.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;timeout&lt;/strong&gt;: int - expiration timeout in milliseconds.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Any - a cached value stored in the cache.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;icacheicache&#34;&gt;&lt;a href=&#34;../icache&#34;&gt;ICache&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
