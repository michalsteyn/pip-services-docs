<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> â€“ MySQL module</title>
    <link>/python/mysql/</link>
    <description>Recent content in MySQL module on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="/python/mysql/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Python: Build</title>
      <link>/python/mysql/build/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/mysql/build/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;div class=&#34;module-body&#34;&gt; 
&lt;h3 id=&#34;classes&#34;&gt;Classes&lt;/h3&gt;
&lt;h4 id=&#34;defaultmysqlfactorydefault_mysql_factory&#34;&gt;&lt;a href=&#34;default_mysql_factory&#34;&gt;DefaultMySqlFactory&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Creates MySQL components based on their descriptors.&lt;/p&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Python: Connect</title>
      <link>/python/mysql/connect/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/mysql/connect/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;div class=&#34;module-body&#34;&gt; 
&lt;h3 id=&#34;classes&#34;&gt;Classes&lt;/h3&gt;
&lt;h4 id=&#34;mysqlconnectionmysql_connection&#34;&gt;&lt;a href=&#34;mysql_connection&#34;&gt;MySqlConnection&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;MySQL connection using plain driver.
By defining a connection and sharing it through multiple persistence components
you can reduce number of used database connections.&lt;/p&gt;
&lt;h4 id=&#34;mysqlconnectionresolvermysql_connection_resolver&#34;&gt;&lt;a href=&#34;mysql_connection_resolver&#34;&gt;MySqlConnectionResolver&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Helper class that resolves MySQL connection and credential parameters,
validates them and generates a connection URI.
It is able to process multiple connections to MySQL cluster nodes.&lt;/p&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Python: Persistence</title>
      <link>/python/mysql/persistence/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/mysql/persistence/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;div class=&#34;module-body&#34;&gt; 
&lt;h3 id=&#34;classes&#34;&gt;Classes&lt;/h3&gt;
&lt;h4 id=&#34;identifiablejsonmysqlpersistenceidentifiable_json_mysql_persistence&#34;&gt;&lt;a href=&#34;identifiable_json_mysql_persistence&#34;&gt;IdentifiableJsonMySqlPersistence&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Abstract persistence component that stores data in MySQL in JSON or JSONB fields
and implements a number of CRUD operations over data items with unique ids.
The data items must implement the &lt;a href=&#34;../../commons/data/iidentifiable&#34;&gt;IIdentifiable&lt;/a&gt; interface.&lt;/p&gt;
&lt;h4 id=&#34;identifiablemysqlpersistenceidentifiable_mysql_persistence&#34;&gt;&lt;a href=&#34;identifiable_mysql_persistence&#34;&gt;IdentifiableMySqlPersistence&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Abstract persistence component that stores data in MySQL
and implements a number of CRUD operations over data items with unique ids.
The data items must implement the &lt;a href=&#34;../../commons/data/iidentifiable&#34;&gt;IIdentifiable&lt;/a&gt; interface.&lt;/p&gt;
&lt;h4 id=&#34;mysqlpersistencemysql_persistence&#34;&gt;&lt;a href=&#34;mysql_persistence&#34;&gt;MySqlPersistence&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Abstract persistence component that stores data in MySQL using the official driver.&lt;/p&gt;
&lt;p&gt;This is the most basic persistence component that is only
able to store data items of any type. Specific CRUD operations
over the data items must be implemented in the child classes by
accessing &lt;strong&gt;self._db&lt;/strong&gt; or &lt;strong&gt;self._collection&lt;/strong&gt; properties.&lt;/p&gt;
&lt;/div&gt;

      </description>
    </item>
    
  </channel>
</rss>
