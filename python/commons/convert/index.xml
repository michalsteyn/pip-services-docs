<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> – Convert</title>
    <link>/python/commons/convert/</link>
    <description>Recent content in Convert on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="/python/commons/convert/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Python: ArrayConverter</title>
      <link>/python/commons/convert/array_converter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/convert/array_converter/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ArrayConverter class provides methods to create an array from a set of values. These values can be in the form of a list,  a single value or a string of comma-delimited values.&lt;/p&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;list_to_array&#34;&gt;list_to_array&lt;/h4&gt;
&lt;p&gt;Converts a list into an array object, with empty array as default.
Strings with comma-delimited values are split into array of strings.
See &lt;a href=&#34;#to_array&#34;&gt;to_array&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; list_to_array(value: Any): List[Any]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the list to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: List[Any] - array object or empty array when value is None&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_array&#34;&gt;to_array&lt;/h4&gt;
&lt;p&gt;Converts value into array object with empty array as default.
Single values are converted into arrays with single element.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_array(value: Any): List[Any]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: List[Any] - array object or empty array when value is None.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_array_with_default&#34;&gt;to_array_with_default&lt;/h4&gt;
&lt;p&gt;Converts value into array object with specified default.
Single values are converted into arrays with single element.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_array_with_default(value: Any, default_value: List[Any]): List[Any]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;default_value&lt;/strong&gt;: List[Any] - default array object.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: List[Any] - array object or default array when value is None.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_nullable_array&#34;&gt;to_nullable_array&lt;/h4&gt;
&lt;p&gt;Converts value into array object.
Single values are converted into arrays with a single element.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_nullable_array(value: Any): Optional[List[Any]]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Optional[List[Any]] - array object or None when value is None.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# List&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;value1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;ArrayConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_array&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;([&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;])&lt;/span&gt;       &lt;span style=&#34;color:#75715e&#34;&gt;# Result: [1, 2]&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Single value&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;value2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;ArrayConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_array&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# Result: [1]&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# String with comma-delimited values&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;value3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;ArrayConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;list_to_array&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;1,2,3&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Result: [&amp;#34;1&amp;#34;, &amp;#34;2&amp;#34;, &amp;#34;3&amp;#34;]&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Python: BooleanConverter</title>
      <link>/python/commons/convert/boolean_converter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/convert/boolean_converter/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The BooleanConverter class allows you to convert different values to boolean values using the following rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Numbers: &amp;lt;&amp;gt;0 are true, =0 are false&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Strings: &amp;ldquo;true&amp;rdquo;, &amp;ldquo;yes&amp;rdquo;, &amp;ldquo;T&amp;rdquo;, &amp;ldquo;Y&amp;rdquo;, &amp;ldquo;1&amp;rdquo; are true; &amp;ldquo;false&amp;rdquo;, &amp;ldquo;no&amp;rdquo;, &amp;ldquo;F&amp;rdquo;, &amp;ldquo;N&amp;rdquo; are false&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DateTime: &amp;lt;&amp;gt;0 total milliseconds are true, =0 are false&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;to_boolean&#34;&gt;to_boolean&lt;/h4&gt;
&lt;p&gt;Converts value into boolean or returns false when conversion is not possible.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_Boolean(value: Any): bool&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: bool - boolean value or false when conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_boolean_with_default&#34;&gt;to_boolean_with_default&lt;/h4&gt;
&lt;p&gt;Converts value into boolean or returns default value when conversion is not possible&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_boolean_with_default(value: Any, default_value: bool = False): bool&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;default_value&lt;/strong&gt;: bool - the default value&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: bool - boolean value or default when conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_nullable_boolean&#34;&gt;to_nullable_boolean&lt;/h4&gt;
&lt;p&gt;Converts value into boolean or returns None when conversion is not possible.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_nullable_boolean(value: Any): bool&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: bool - boolean value or None when convertion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#111&#34;&gt;value1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;BooleanConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_nullable_boolean&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;True&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;# Returns True&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;value2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;BooleanConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_nullable_boolean&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;yes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Returns True&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;value3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;BooleanConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_nullable_boolean&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;123&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;# Returns None&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;value4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;BooleanConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_nullable_boolean&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;({})&lt;/span&gt;       &lt;span style=&#34;color:#75715e&#34;&gt;# Returns None&lt;/span&gt;

&lt;span style=&#34;color:#111&#34;&gt;value5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;BooleanConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_boolean_with_default&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;True&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;verdadero&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;# Returns True&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;value6&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;BooleanConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_boolean_with_default&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;123&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;verdadero&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;# Returns verdadero&lt;/span&gt;

&lt;span style=&#34;color:#111&#34;&gt;value7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;BooleanConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_boolean&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;yes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;# Returns True&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Python: DateTimeConverter</title>
      <link>/python/commons/convert/date_time_converter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/convert/date_time_converter/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The DateTimeConverter class allows you to convert arbitrary values into Date values using following extended conversion rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Strings: converted using ISO time format&lt;/li&gt;
&lt;li&gt;Numbers: converted using milliseconds since unix epoch&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;to_date_time&#34;&gt;to_date_time&lt;/h4&gt;
&lt;p&gt;Converts value into Date or returns current date when conversion is not possible.&lt;br&gt;
See &lt;a href=&#34;#to_date_time_with_default&#34;&gt;to_date_time_with_default&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_date_time(value: Any): datetime&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: datetime - Date value or current date when conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_date_time_with_default&#34;&gt;to_date_time_with_default&lt;/h4&gt;
&lt;p&gt;Converts value into Date or returns default when conversion is not possible.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_date_time_with_default(value: Any, default_value: datetime = None): datetime&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;defaultValue&lt;/strong&gt;: datetime - the default value.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: datetime - Date value or default when conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_nullable_date_time&#34;&gt;to_nullable_date_time&lt;/h4&gt;
&lt;p&gt;Converts value into Date or returns None when conversion is not possible.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_nullable_date_time(value: Any): Optional[datetime]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: datetime - Date value or None when conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#111&#34;&gt;value1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;DateTimeConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_nullable_datetime&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;ABC&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Returns None&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Python: DoubleConverter</title>
      <link>/python/commons/convert/double_converter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/convert/double_converter/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The DoubleConverter class allows you to convert arbitrary values into double using the following extended conversion rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Strings are converted to double values&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DateTime: total number of milliseconds since unix epoсh&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Boolean: 1 for true and 0 for false&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;to_double&#34;&gt;to_double&lt;/h4&gt;
&lt;p&gt;Converts value into doubles or returns 0 when conversion is not possible.&lt;br&gt;
See &lt;a href=&#34;#to_double_with_default&#34;&gt;to_double_with_default&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_double(value: Any): float&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: float - double value or 0 when conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_double_with_default&#34;&gt;to_double_with_default&lt;/h4&gt;
&lt;p&gt;Converts value into integer or returns default value when conversion is not possible.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_double_with_default(value: Any, default_value: float = 0): float&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;default_value&lt;/strong&gt;: float = None - the default value.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: float - double value or default when conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_nullable_double&#34;&gt;to_nullable_double&lt;/h4&gt;
&lt;p&gt;Converts value into doubles or returns None when conversion is not possible.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_nullable_double(value: Any): Optional[float]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Optional[float] - double value or None when conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#111&#34;&gt;value1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;DoubleConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_nullable_double&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;ABC&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;# Returns None&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;value2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;DoubleConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_nullable_double&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;123.456&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Returns 123.456&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;value3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;DoubleConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_nullable_double&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;True&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;# Returns 1&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;value4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;DoubleConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_nullable_double&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;datetime&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;datetime&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;now&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Returns current milliseconds (E.g. 1619812281454)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Python: FloatConverter</title>
      <link>/python/commons/convert/float_converter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/convert/float_converter/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The FloatConverter class allows you to convert arbitrary values into float using the following extended conversion rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Strings are converted to float values&lt;/li&gt;
&lt;li&gt;DateTime: total number of milliseconds since unix epoсh&lt;/li&gt;
&lt;li&gt;Boolean: 1 for true and 0 for false&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;to_float&#34;&gt;to_float&lt;/h4&gt;
&lt;p&gt;Converts value into float or returns 0 when conversion is not possible.&lt;br&gt;
See &lt;a href=&#34;../double_converter/#todouble&#34;&gt;DoubleConverter.toDouble&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_float(value: Any): float&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: float - float value or 0 when conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_float_with_default&#34;&gt;to_float_with_default&lt;/h4&gt;
&lt;p&gt;Converts value into float or returns default when conversion is not possible.&lt;br&gt;
See &lt;a href=&#34;../double_converter/#to_double_with_default&#34;&gt;DoubleConverter.to_double_with_default&lt;/a&gt;,&lt;br&gt;
&lt;a href=&#34;../double_converter/#to_nullable_double&#34;&gt;DoubleConverter.to_nullable_double&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_float_with_default(value: Any, default_value: float): float&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;default_value&lt;/strong&gt;: float - the default value.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: float - float value or default value when conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_nullable_float&#34;&gt;to_nullable_float&lt;/h4&gt;
&lt;p&gt;Converts value into float or returns None when conversion is not possible.&lt;br&gt;
See &lt;a href=&#34;../double_converter/#to_nullable_double&#34;&gt;DoubleConverter.to_nullable_double&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_nullable_float(value: Any): Optional[float]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Optional[float] - float value or None when conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#111&#34;&gt;value1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;FloatConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_nullable_float&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;ABC&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;# Returns None&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;value2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;FloatConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_nullable_float&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;123.456&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Returns 123.456&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;value3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;FloatConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_nullable_float&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;True&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;# Returns 1&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;value4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;FloatConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_nullable_float&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;datetime&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;datetime&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;now&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Returns current milliseconds (E.g. 1619866773703)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Python: IntegerConverter</title>
      <link>/python/commons/convert/integer_converter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/convert/integer_converter/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The IntegerConverter class allows you to convert arbitrary values into integers using the following extended conversion rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Strings are converted to floats, then to integers&lt;/li&gt;
&lt;li&gt;DateTime: total number of milliseconds since unix epoсh&lt;/li&gt;
&lt;li&gt;Boolean: 1 for True and 0 for False&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;to_integer&#34;&gt;to_integer&lt;/h4&gt;
&lt;p&gt;Converts value into integer or returns 0 when conversion is not possible.&lt;br&gt;
See &lt;a href=&#34;../long_converter/#tolong&#34;&gt;LongConverter.toLong&lt;/a&gt;,&lt;br&gt;
&lt;a href=&#34;../long_converter/#to_long_with_default&#34;&gt;LongConverter.to_long_with_default&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; toInteger(value: Any): int&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: int - integer value or 0 when conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_integer_with_default&#34;&gt;to_integer_with_default&lt;/h4&gt;
&lt;p&gt;Converts value into integer or returns default value when conversion is not possible.
See &lt;a href=&#34;../long_converter/#to_long_with_default&#34;&gt;LongConverter.to_long_with_default&lt;/a&gt;,&lt;br&gt;
&lt;a href=&#34;../long_converter/#to_nullable_long&#34;&gt;LongConverter.to_nullable_long&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_integer_with_default(value: Any, default_value: int): int&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;default_value&lt;/strong&gt;: int - the default value.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: int - integer value or default when conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_nullable_integer&#34;&gt;to_nullable_integer&lt;/h4&gt;
&lt;p&gt;Converts value into integer or returns None when conversion is not possible.
See &lt;a href=&#34;../long_converter/#tonullablelong&#34;&gt;LongConverter.to_nullable_long&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_nullable_integer(value: Any): int&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: int - integer value or None when conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#111&#34;&gt;value1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;IntegerConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_nullable_integer&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;ABC&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;# Returns None&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;value2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;IntegerConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_nullable_integer&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;123.456&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Returns 123&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;value3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;IntegerConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_nullable_integer&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;True&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;# Returns 1&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;value4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;IntegerConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_nullable_integer&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;datetime&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;datetime&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;now&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;())&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Returns current milliseconds (E.g. 1619867293411)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Python: JsonConverter</title>
      <link>/python/commons/convert/json_converter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/convert/json_converter/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The JsonConverter class allows you to convert arbitrary values (e.g. a JSON object) from and to JSON (JavaScript Object Notation) strings.&lt;/p&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;from_json&#34;&gt;from_json&lt;/h4&gt;
&lt;p&gt;Converts JSON string into a value of type specified by a TypeCode.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; from_json(type: &lt;a href=&#34;../type_code&#34;&gt;TypeCode&lt;/a&gt;, value: str): Any&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;type&lt;/strong&gt;: &lt;a href=&#34;../type_code&#34;&gt;TypeCode&lt;/a&gt; - the TypeCode for the data type into which &amp;lsquo;value&amp;rsquo; is to be converted.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: str - the JSON string to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Any - converted object value or None when value is None.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_json&#34;&gt;to_json&lt;/h4&gt;
&lt;p&gt;Converts value into JSON string.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_json(value: Any): Optional[str]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: str - JSON string or None when value is None.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_map&#34;&gt;to_map&lt;/h4&gt;
&lt;p&gt;Converts JSON string into map object or returns empty map when conversion is not possible.
See &lt;a href=&#34;../long_converter/#to_nullable_long&#34;&gt;LongConverter.to_nullable_long&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_map(value: str): Any&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: str - the JSON string to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Any - Map object value or empty object when conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_map_with_default&#34;&gt;to_map_with_default&lt;/h4&gt;
&lt;p&gt;Converts JSON string into map object or returns default value when conversion is not possible.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_map_with_default(value: str, default_value: Any): Any&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: str - the JSON string to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;default_value&lt;/strong&gt;: Any - the default value.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Any - Map object value or default when conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_nullable_map&#34;&gt;to_nullable_map&lt;/h4&gt;
&lt;p&gt;Converts JSON string into map object or returns None when conversion is not possible.&lt;br&gt;
See &lt;a href=&#34;../map_converter/#to_nullable_map&#34;&gt;MapConverter.to_nullable_map&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_nullable_map(value: str): Any&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: str - the JSON string to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Any - Map object value or None when conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#111&#34;&gt;value1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;JsonConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_json&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;({&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;key&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;123&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;})&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Returns &amp;#39;{&amp;#34;key&amp;#34;: 123}&amp;#39;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Python: LongConverter</title>
      <link>/python/commons/convert/long_converter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/convert/long_converter/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The LongConverter class allows you to convert arbitrary values into longs using the following extended conversion rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Strings are converted to floats, then to longs&lt;/li&gt;
&lt;li&gt;DateTime: total number of milliseconds since unix epoсh&lt;/li&gt;
&lt;li&gt;Boolean: 1 for true and 0 for false&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;to_long&#34;&gt;to_long&lt;/h4&gt;
&lt;p&gt;Converts value into long or returns 0 when conversion is not possible.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_long(value: Any): float&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: float - long value or 0 when conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_long_with_default&#34;&gt;to_long_with_default&lt;/h4&gt;
&lt;p&gt;Converts value into integer or returns default when conversion is not possible.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_long_with_default(value: Any, defaultValue: float): float&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;default_value&lt;/strong&gt;: float - the default value.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: float - long value or default when conversion is not supported&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_nullable_long&#34;&gt;to_nullable_long&lt;/h4&gt;
&lt;p&gt;Converts value into long or returns None when conversion is not possible.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_nullable_long(value: Any): Optional[float]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: float - long value or None when conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;datetime&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;value1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;LongConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_nullable_long&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;ABC&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Returns None&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;value2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;LongConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_nullable_long&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;123.456&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Returns 123&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;value3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;LongConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_nullable_long&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;True&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Returns 1&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;value4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;LongConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_nullable_long&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;datetime&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;datetime&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;now&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;());&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Returns current milliseconds (E.g. 1619869474907)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Python: MapConverter</title>
      <link>/python/commons/convert/map_converter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/convert/map_converter/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The MapConverter class allows you to convert arbitrary values into map objects using the following extended conversion rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Objects: property names as keys, property values as values&lt;/li&gt;
&lt;li&gt;Arrays: element indexes as keys, elements as values&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;to_map&#34;&gt;to_map&lt;/h4&gt;
&lt;p&gt;Converts value into map object or returns empty map when conversion is not possible&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_map(value: Any): Any&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Any - map object or empty map when conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_map_with_default&#34;&gt;to_map_with_default&lt;/h4&gt;
&lt;p&gt;Converts value into map object or returns default when conversion is not possible&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; toMapWithDefault(value: Any, default_value: Any): Any&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;default_value&lt;/strong&gt;: Any - the default value.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Any - map object or empty map when conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_nullable_map&#34;&gt;to_nullable_map&lt;/h4&gt;
&lt;p&gt;Converts value into map object or returns None when conversion is not possible.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_nullable_map(value: Any): Any&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Any - map object or None when conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#111&#34;&gt;value1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;MapConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_nullable_map&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;ABC&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# Returns None&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;value2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;MapConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_nullable_map&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;key&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;123&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;})&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Returns { key: 123 }&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;value3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;MapConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_nullable_map&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;([&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;])&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;# Returns { &amp;#34;0&amp;#34;: 1, &amp;#34;1&amp;#34;: 2, &amp;#34;2&amp;#34;: 3 }&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Python: RecursiveMapConverter</title>
      <link>/python/commons/convert/recursive_map_converter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/convert/recursive_map_converter/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The RecursiveMapConverter class allows you to convert arbitrary values into map objects using extended conversion rules.&lt;/p&gt;
&lt;p&gt;Important points:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This class is similar to &lt;a href=&#34;../map_converter&#34;&gt;MapConverter&lt;/a&gt;. The difference is that it recursively converts all values stored in objects and arrays.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;to_map&#34;&gt;to_map&lt;/h4&gt;
&lt;p&gt;Converts value into map object or returns empty map when conversion is not possible&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_map(value: Any): Any&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Any - map object or empty map when conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_map_with_default&#34;&gt;to_map_with_default&lt;/h4&gt;
&lt;p&gt;Converts value into map object or returns default when conversion is not possible&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_map_with_default(value: Any, default_value: Any): Any&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;default_value&lt;/strong&gt;: Any - the default value.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Any - map object or empty map when conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_nullable_map&#34;&gt;to_nullable_map&lt;/h4&gt;
&lt;p&gt;Converts value into map object or returns None when conversion is not possible.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_nullable_map(value: Any): Any&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Any - map object or None when conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#111&#34;&gt;value1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;RecursiveMapConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_nullable_map&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#39;key&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;123&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;})&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Returns {&amp;#39;key&amp;#39;: 123}&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;value2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;RecursiveMapConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_nullable_map&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;([&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,[&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;]])&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;# Returns {0: 1, 1: {0: 2, 1: 3}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Python: StringConverter</title>
      <link>/python/commons/convert/string_converter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/convert/string_converter/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The StringConverter class allows you to convert arbitrary values into strings using the following extended conversion rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Numbers: are converted with &amp;lsquo;.&amp;rsquo; as decimal point&lt;/li&gt;
&lt;li&gt;DateTime: using ISO format&lt;/li&gt;
&lt;li&gt;Boolean: &amp;ldquo;true&amp;rdquo; for true and &amp;ldquo;false&amp;rdquo; for false&lt;/li&gt;
&lt;li&gt;Arrays: as comma-separated list&lt;/li&gt;
&lt;li&gt;Other objects: using &lt;strong&gt;to_string()&lt;/strong&gt; method&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;to_nullable_string&#34;&gt;to_nullable_string&lt;/h4&gt;
&lt;p&gt;Converts value into string or returns None when value is None.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_nullable_string(value: Any): Optional[str]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Optional[str] - string value or None when value is None.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_string&#34;&gt;to_string&lt;/h4&gt;
&lt;p&gt;Converts value into string or returns &amp;quot;&amp;quot; when value is None.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_string(value: Any): str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: str - string value or &amp;quot;&amp;quot; when value is None.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_string_with_default&#34;&gt;to_string_with_default&lt;/h4&gt;
&lt;p&gt;Converts value into string or returns default when value is None.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; to_string_with_default(value: Any, default_value: str): str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;default_value&lt;/strong&gt;: str - the default value.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: str - string value or default when value is None.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;datetime&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;value1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;StringConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_string&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;123.456&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Returns &amp;#39;123.456&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;value2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;StringConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_string&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;True&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Returs &amp;#39;True&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;value3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;StringConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_string&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;datetime&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;datetime&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2018&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Returns &amp;#39;2018-10-01T00:00:00Z&amp;#39;&amp;#34;2018-01-01T00:00:00.00&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;value4&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;StringConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_string&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;([&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;b&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;c&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;])&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Returns &amp;#39;a,b,c&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Python: TypeCode</title>
      <link>/python/commons/convert/type_code/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/convert/type_code/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The TypeCode class contains the codes for data types that are used by the class &lt;a href=&#34;../type_converter&#34;&gt;TypeConverter&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;enumeration-members&#34;&gt;Enumeration members&lt;/h3&gt;
&lt;p&gt;The codes are as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Unknown&lt;/strong&gt; = 0&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;String&lt;/strong&gt; = 1&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Boolean&lt;/strong&gt; = 2&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Integer&lt;/strong&gt; = 3&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Long&lt;/strong&gt; = 4&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Float&lt;/strong&gt; = 5&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Double&lt;/strong&gt; = 6&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;DateTime&lt;/strong&gt; = 7&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Duration&lt;/strong&gt; = 8&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Object&lt;/strong&gt; = 9&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Enum&lt;/strong&gt; = 10&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Array&lt;/strong&gt; = 11&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Map&lt;/strong&gt; = 12&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: TypeConverter</title>
      <link>/python/commons/convert/type_converter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/convert/type_converter/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The TypeConverter class allows you to convert arbitrary values into objects specified by a code type and to get the code type of an object. The code types are defined in the &lt;a href=&#34;../../convert/type_code&#34;&gt;TypeCode&lt;/a&gt; class.&lt;/p&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;to_nullable_type&#34;&gt;to_nullable_type&lt;/h4&gt;
&lt;p&gt;Converts value into an object type specified by Type Code or returns None when conversion is not possible.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_nullable_type(type: &lt;a href=&#34;../../convert/type_code&#34;&gt;TypeCode&lt;/a&gt;, value: Any): Any&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;type&lt;/strong&gt;: Any - the &lt;a href=&#34;../../convert/type_code&#34;&gt;TypeCode&lt;/a&gt; for the data type into which &amp;lsquo;value&amp;rsquo; is to be converted.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Any - object value of type corresponding to TypeCode, or None when conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_string&#34;&gt;to_string&lt;/h4&gt;
&lt;p&gt;Converts a &lt;a href=&#34;../../convert/type_code&#34;&gt;TypeCode&lt;/a&gt; into its string name.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_string(type: &lt;a href=&#34;../../convert/type_code&#34;&gt;TypeCode&lt;/a&gt;): str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;type&lt;/strong&gt;: &lt;a href=&#34;../../convert/type_code&#34;&gt;TypeCode&lt;/a&gt; - the TypeCode to convert into a string.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: str - the name of the &lt;a href=&#34;../../convert/type_code&#34;&gt;TypeCode&lt;/a&gt; passed as a string value.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_type&#34;&gt;to_type&lt;/h4&gt;
&lt;p&gt;Converts value into an object type specified by Type Code or returns type default when conversion is not possible.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_type(type: &lt;a href=&#34;../../convert/type_code&#34;&gt;TypeCode&lt;/a&gt;, value: Any): Any&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;type&lt;/strong&gt;: &lt;a href=&#34;../../convert/type_code&#34;&gt;TypeCode&lt;/a&gt; - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Any - object value of type corresponding to &lt;a href=&#34;../../convert/type_code&#34;&gt;TypeCode&lt;/a&gt;, or type default when conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_type_code&#34;&gt;to_type_code&lt;/h4&gt;
&lt;p&gt;Gets TypeCode for specific value.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_type_code(value: Any): &lt;a href=&#34;../../convert/type_code&#34;&gt;TypeCode&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - value whose TypeCode is to be resolved.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../../convert/type_code&#34;&gt;TypeCode&lt;/a&gt; - the TypeCode that corresponds to the passed object&amp;rsquo;s type.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_type_with_default&#34;&gt;to_type_with_default&lt;/h4&gt;
&lt;p&gt;Converts value into an object type specified by Type Code or returns default value when conversion is not possible.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; to_type_with_default(type: &lt;a href=&#34;../../convert/type_code&#34;&gt;TypeCode&lt;/a&gt;, value: Any, default_value: Any): Any&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;type&lt;/strong&gt;: &lt;a href=&#34;../../convert/type_code&#34;&gt;TypeCode&lt;/a&gt; - the TypeCode for the data type into which &amp;lsquo;value&amp;rsquo; is to be converted.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - the value to convert.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;default_value&lt;/strong&gt;: Any - the default value to return if conversion is not possible (returns None).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Any - object value of type corresponding to TypeCode, or default value when conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#111&#34;&gt;value1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;TypeConverter&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;to_type_code&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Hello world&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# Returns 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;typecodeconverttype_code&#34;&gt;&lt;a href=&#34;../../convert/type_code&#34;&gt;TypeCode&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
