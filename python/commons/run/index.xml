<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> â€“ Run</title>
    <link>/python/commons/run/</link>
    <description>Recent content in Run on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="/python/commons/run/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Python: Cleaner</title>
      <link>/python/commons/run/cleaner/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/run/cleaner/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The Cleaner class allows you to clear the state of components.&lt;/p&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;clear&#34;&gt;clear&lt;/h4&gt;
&lt;p&gt;Clears the state of multiple components.&lt;/p&gt;
&lt;p&gt;To be cleaned state components must implement &lt;a href=&#34;../icleanable&#34;&gt;ICleanable&lt;/a&gt; interface.
If they don&amp;rsquo;t the call to this method has no effect.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; clear(correlation_id: Optional[str], components: List[Any])&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;components&lt;/strong&gt;: List[Any] - the list of components that are to be cleaned.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;clear_one&#34;&gt;clear_one&lt;/h4&gt;
&lt;p&gt;Clears the state of a specific component.
To be cleaned state components must implement &lt;a href=&#34;../icleanable&#34;&gt;ICleanable&lt;/a&gt; interface.
If they don&amp;rsquo;t the call to this method has no effect.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; clearOne(correlation_id: Optional[str], component: Any)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;component&lt;/strong&gt;: Any - the component that is to be cleaned.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;icleanableicleanable&#34;&gt;&lt;a href=&#34;../icleanable&#34;&gt;ICleanable&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: Closer</title>
      <link>/python/commons/run/closer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/run/closer/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The Closer class allows you to close one or multiple components at the same time.&lt;/p&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;close&#34;&gt;close&lt;/h4&gt;
&lt;p&gt;Closes multiple components.&lt;/p&gt;
&lt;p&gt;To be closed components must implement &lt;a href=&#34;../iclosable&#34;&gt;IClosable&lt;/a&gt; interface.
If they don&amp;rsquo;t, then a call to this method has no effect.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; close(correlation_id: Optional[str], components: List[Any])&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id to trace execution through a call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;components&lt;/strong&gt;: List[Any] - the list of components that are to be closed.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;close_one&#34;&gt;close_one&lt;/h4&gt;
&lt;p&gt;Closes a specific component.
To be closed components must implement &lt;a href=&#34;../iclosable&#34;&gt;IClosable&lt;/a&gt; interface.
If they don&amp;rsquo;t the call to this method has no effect.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; close_one(correlation_id: Optional[str], component: Any)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;component&lt;/strong&gt;: Any - the component that is to be closed.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;iclosableiclosable&#34;&gt;&lt;a href=&#34;../iclosable&#34;&gt;IClosable&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: Executor</title>
      <link>/python/commons/run/executor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/run/executor/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The Executor class allows you to execute one or more components.&lt;/p&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;execute&#34;&gt;execute&lt;/h4&gt;
&lt;p&gt;Executes multiple components.&lt;/p&gt;
&lt;p&gt;To be executed components must implement &lt;a href=&#34;../iexecutable&#34;&gt;IExecutable&lt;/a&gt; interface.
If they don&amp;rsquo;t, the call to this method has no effect.&lt;br&gt;
See &lt;a href=&#34;../iexecutable&#34;&gt;IExecutable&lt;/a&gt;, &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; execute(correlation_id: Optional[str], components: List[Any], args: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;components&lt;/strong&gt;: List[Any] - a list of components that are to be executed.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;args&lt;/strong&gt;: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt; - execution arguments.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;execute_one&#34;&gt;execute_one&lt;/h4&gt;
&lt;p&gt;Executes specific component.&lt;/p&gt;
&lt;p&gt;To be executed components must implement &lt;a href=&#34;../iexecutable&#34;&gt;IExecutable&lt;/a&gt; interface.
If they don&amp;rsquo;t, the call to this method has no effect.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; execute_one(correlation_id: Optional[str], component: Any, args: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;component&lt;/strong&gt;: Any - the component that is to be executed.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;args&lt;/strong&gt;: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt; - execution arguments.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;iexecutableiexecutable&#34;&gt;&lt;a href=&#34;../iexecutable&#34;&gt;IExecutable&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: FixedRateTimer</title>
      <link>/python/commons/run/fixed_rate_timer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/run/fixed_rate_timer/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../iclosable&#34;&gt;IClosable&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The FixerRateTimer class represents a timer that is triggered in equal time intervals.&lt;/p&gt;
&lt;p&gt;Important points&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It has symmetric cross-language implementation and is often used by the Pip.Services toolkit to perform periodic processing and cleanup in microservices.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates new instance of the timer and sets its values.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FixedRateTimer(task_or_object: Any = None, interval: int = None, delay: int = None)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;task_or_object&lt;/strong&gt;: Any - (optional) a Notifiable object or callback function to call when timer is triggered.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;interval&lt;/strong&gt;: int - (optional) an interval to trigger timer in milliseconds.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;delay&lt;/strong&gt;: int - (optional) a delay before the first triggering in milliseconds.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;close&#34;&gt;close&lt;/h4&gt;
&lt;p&gt;Closes the timer.&lt;/p&gt;
&lt;p&gt;This is required by &lt;a href=&#34;../icloseable&#34;&gt;ICloseable&lt;/a&gt; interface,
but besides that it is identical to &lt;a href=&#34;#stop&#34;&gt;stop()&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;close(correlation_id: Optional[str])&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id to trace execution through call chain.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;get_callback&#34;&gt;get_callback&lt;/h4&gt;
&lt;p&gt;Gets the callback function that is called when this timer is triggered.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;get_callback(): Callable&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Callable - the callback function or None if it is not set.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;get_delay&#34;&gt;get_delay&lt;/h4&gt;
&lt;p&gt;Gets initial delay before the timer is triggered for the first time.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;getDelay(): int&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: int - the delay in milliseconds.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;get_interval&#34;&gt;get_interval&lt;/h4&gt;
&lt;p&gt;Gets periodic timer triggering interval.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;get_interval(): int&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: int - the interval in milliseconds&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;get_task&#34;&gt;get_task&lt;/h4&gt;
&lt;p&gt;Gets the INotifiable object that receives notifications from this timer.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;get_task(): &lt;a href=&#34;../inotifiable&#34;&gt;INotifiable&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../inotifiable&#34;&gt;INotifiable&lt;/a&gt; - the INotifiable object or None if it is not set.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;set_task&#34;&gt;set_task&lt;/h4&gt;
&lt;p&gt;Sets a new INotifiable object to receive notifications from this timer.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;set_task(value: &lt;a href=&#34;../inotifiable&#34;&gt;INotifiable&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: &lt;a href=&#34;../inotifiable&#34;&gt;INotifiable&lt;/a&gt; - a INotifiable object to be triggered.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;is_started&#34;&gt;is_started&lt;/h4&gt;
&lt;p&gt;Checks if the timer is started.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;is_started(): bool&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: bool - true if the timer is started and false if it is stopped.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;set_callback&#34;&gt;set_callback&lt;/h4&gt;
&lt;p&gt;Sets the callback function that is called when this timer is triggered.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;set_callback(value: Callable)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Callable - the callback function to be called.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;set_delay&#34;&gt;set_delay&lt;/h4&gt;
&lt;p&gt;Sets initial delay before the timer is triggered for the first time.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;set_delay(value: int)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: int - a delay in milliseconds.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;set_interval&#34;&gt;set_interval&lt;/h4&gt;
&lt;p&gt;Sets periodic timer triggering interval.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;set_interval(value: int)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: int - an interval in milliseconds.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;start&#34;&gt;start&lt;/h4&gt;
&lt;p&gt;Starts the timer.&lt;/p&gt;
&lt;p&gt;Initially the timer is triggered after delay.
After that it, is triggered after interval until it is stopped.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;start()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;stop&#34;&gt;stop&lt;/h4&gt;
&lt;p&gt;Stops the timer.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;stop()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;MyComponent&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt;

    &lt;span style=&#34;color:#111&#34;&gt;timer&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;FixedRateTimer&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;FixedRateTimer&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;__cleanup&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;60000&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;

    &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
    &lt;span style=&#34;color:#00a8c8&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;open&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;correlation_id&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;str&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;):&lt;/span&gt; 
        &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
        &lt;span style=&#34;color:#111&#34;&gt;timer&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;start&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;()&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
    
    
    &lt;span style=&#34;color:#00a8c8&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;correlationId&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;str&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;):&lt;/span&gt; 
        &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
        &lt;span style=&#34;color:#111&#34;&gt;timer&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;stop&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;()&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
    
    
    &lt;span style=&#34;color:#00a8c8&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;__cleanup&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;():&lt;/span&gt; 
        &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
    
    &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;inotifiableinotifiable&#34;&gt;&lt;a href=&#34;../inotifiable&#34;&gt;INotifiable&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: ICleanable</title>
      <link>/python/commons/run/icleanable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/run/icleanable/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ICleanable interface allows you to create components with a method to clean their states.&lt;/p&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;clear&#34;&gt;clear&lt;/h4&gt;
&lt;p&gt;Clears component state.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;clear(correlation_id: Optional[str])&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id to trace execution through call chain.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;MyObjectWithState&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;ICleanable&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;):&lt;/span&gt;
    &lt;span style=&#34;color:#111&#34;&gt;_state&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{}&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;

    &lt;span style=&#34;color:#00a8c8&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;clear&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;correlation_id&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;):&lt;/span&gt;
        &lt;span style=&#34;color:#111&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;_state&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{}&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;cleanercleaner&#34;&gt;&lt;a href=&#34;../cleaner&#34;&gt;Cleaner&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: IClosable</title>
      <link>/python/commons/run/iclosable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/run/iclosable/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The IClosable interface allows you to create a component with a method that closes it and frees used resources.&lt;/p&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;close&#34;&gt;close&lt;/h4&gt;
&lt;p&gt;Closes a component and frees used resources.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;close(correlation_id: Optional[str])&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id to trace execution through call chain.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;MyConnector&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;ICloseable&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;):&lt;/span&gt;
    &lt;span style=&#34;color:#111&#34;&gt;_client&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;None&lt;/span&gt;
    
    &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# The _client can be lazy created&lt;/span&gt;
    
    &lt;span style=&#34;color:#00a8c8&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;correlation_id&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;):&lt;/span&gt;
        &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;_client&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;None&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color:#111&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;_client&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;()&lt;/span&gt;
            &lt;span style=&#34;color:#111&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;_client&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;None&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;iopenableiopenable&#34;&gt;&lt;a href=&#34;../iopenable&#34;&gt;IOpenable&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;closercloser&#34;&gt;&lt;a href=&#34;../closer&#34;&gt;Closer&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: IExecutable</title>
      <link>/python/commons/run/iexecutable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/run/iexecutable/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The IExecutable interface allows you to create a component that can be called to execute work.&lt;/p&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;execute&#34;&gt;execute&lt;/h4&gt;
&lt;p&gt;Executes a component with arguments and receives the execution result.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;execute(correlationId: str, args: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;args&lt;/strong&gt;: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt; - execution arguments.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;EchoComponent&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;IExecutable&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;):&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
    &lt;span style=&#34;color:#00a8c8&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;execute&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;correlation_id&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Optional&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;str&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Parameters&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;):&lt;/span&gt; 
        &lt;span style=&#34;color:#111&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;get_as_object&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;
        &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;result&lt;/span&gt;
    
&lt;span style=&#34;color:#111&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;EchoComponent&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;message&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Test&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;result&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;echo&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;execute&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;123&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Parameters&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;from_tuples&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;message&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;message&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;))&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Request: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;message&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34; Response: &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;result&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;executorexecutor&#34;&gt;&lt;a href=&#34;../executor&#34;&gt;Executor&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;inotifiableinotifiable&#34;&gt;&lt;a href=&#34;../inotifiable&#34;&gt;INotifiable&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;parametersparameters&#34;&gt;&lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: INotifiable</title>
      <link>/python/commons/run/inotifiable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/run/inotifiable/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The INotifiable interface allows you to create components that can be asynchronously notified.&lt;/p&gt;
&lt;p&gt;Important points&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The notification can include an optional argument that describes an occurred event.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;notify&#34;&gt;notify&lt;/h4&gt;
&lt;p&gt;Notifies the component about an occured event.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;notify(correlation_id: Optional[str], args: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;args&lt;/strong&gt;: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt; - notification arguments.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;MyComponent&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;INotifable&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;):&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
    &lt;span style=&#34;color:#00a8c8&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;notify&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;correlationId&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;):&lt;/span&gt; 
        &lt;span style=&#34;color:#111&#34;&gt;print&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Occured event &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;get_as_string&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;event&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;))&lt;/span&gt;
    
   
&lt;span style=&#34;color:#111&#34;&gt;my_component&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;MyComponent&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;my_component&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;notify&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;123&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Parameters&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;from_tuples&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;event&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;Test Event&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;notifiernotifier&#34;&gt;&lt;a href=&#34;../notifier&#34;&gt;Notifier&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;iexecutableiexecutable&#34;&gt;&lt;a href=&#34;../iexecutable&#34;&gt;IExecutable&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: IOpenable</title>
      <link>/python/commons/run/iopenable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/run/iopenable/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../iclosable&#34;&gt;IClosable&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The IOpenable interface allows you to create components with explicit opening and closing.&lt;/p&gt;
&lt;p&gt;Important points&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For components that perform opening on demand consider using &lt;a href=&#34;../iclosable&#34;&gt;IClosable&lt;/a&gt; interface instead.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;is_open&#34;&gt;is_open&lt;/h4&gt;
&lt;p&gt;Checks if the component is opened.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;is_open(): bool&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: bool - true if the component has been opened and false otherwise.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;open&#34;&gt;open&lt;/h4&gt;
&lt;p&gt;Opens the component.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;open(correlation_id: Optional[str])&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id to trace execution through call chain.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;MyPersistence&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;IOpenable&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;):&lt;/span&gt;
    &lt;span style=&#34;color:#111&#34;&gt;_client&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;None&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
    &lt;span style=&#34;color:#00a8c8&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;is_open&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;):&lt;/span&gt;
        &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;_client&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;None&lt;/span&gt;
    
    
    &lt;span style=&#34;color:#00a8c8&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;open&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;correlation_id&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;):&lt;/span&gt; 
        &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;is_opened&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;()&lt;/span&gt; 
            &lt;span style=&#34;color:#00a8c8&#34;&gt;return&lt;/span&gt;
        
        &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
    
    &lt;span style=&#34;color:#00a8c8&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#75af00&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;correlation_id&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;):&lt;/span&gt; 
        &lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;_client&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;is&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;None&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt;
            &lt;span style=&#34;color:#111&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;_client&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;()&lt;/span&gt;
            &lt;span style=&#34;color:#111&#34;&gt;self&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;_client&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;None&lt;/span&gt;
        
    &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;iopenableiopenable&#34;&gt;&lt;a href=&#34;../iopenable&#34;&gt;IOpenable&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;openeropener&#34;&gt;&lt;a href=&#34;../opener&#34;&gt;Opener&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: IParameterized</title>
      <link>/python/commons/run/iparameterized/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/run/iparameterized/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The IParameterized interface allows you to create components with execution parameters.&lt;/p&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;set_parameters&#34;&gt;set_parameters&lt;/h4&gt;
&lt;p&gt;Sets execution parameters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;set_parameters(parameters: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;parameters&lt;/strong&gt;: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt; - execution parameters.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;iconfigurableconfigiconfigurable&#34;&gt;&lt;a href=&#34;../../config/iconfigurable&#34;&gt;IConfigurable&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: Notifier</title>
      <link>/python/commons/run/notifier/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/run/notifier/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The Notifier class is a helper class that can be use to notify one or more components.&lt;/p&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;notify&#34;&gt;notify&lt;/h4&gt;
&lt;p&gt;Sets execution parameters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; notify(correlation_id: Optional[str], components: List[Any], args: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;components&lt;/strong&gt;: List[Any] - a list of components that are to be notified.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;args&lt;/strong&gt;: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt; - notification arguments.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;notify_one&#34;&gt;notify_one&lt;/h4&gt;
&lt;p&gt;Notifies specific component.&lt;/p&gt;
&lt;p&gt;To be notiied components must implement &lt;a href=&#34;../inotifiable&#34;&gt;INotifiable&lt;/a&gt; interface.
If they don&amp;rsquo;t, the call to this method has no effect.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; notify_one(correlation_id: Optional[str], component: Any, args: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;component&lt;/strong&gt;: Any - the component that is to be notified.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;args&lt;/strong&gt;: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt; - notifiation arguments.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;inotifiableinotifiable&#34;&gt;&lt;a href=&#34;../inotifiable&#34;&gt;INotifiable&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: Opener</title>
      <link>/python/commons/run/opener/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/run/opener/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The Opener class can be used to check whether all components are opened or not, a component is opened or not, and to open one or more components.&lt;/p&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;is_open&#34;&gt;is_open&lt;/h4&gt;
&lt;p&gt;Checks if all components are opened.&lt;/p&gt;
&lt;p&gt;To be checked, components must implement &lt;a href=&#34;../iopenable&#34;&gt;IOpenable&lt;/a&gt; interface.
If they don&amp;rsquo;t, the call to this method returns true.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; is_open(components: List[Any]): bool&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;components&lt;/strong&gt;: List[Any] - a list of components that are to be checked.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: bool - true if all components are opened and false if at least one component is closed.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;is_open_one&#34;&gt;is_open_one&lt;/h4&gt;
&lt;p&gt;Checks if specified component is opened.
To be checked, components must implement &lt;a href=&#34;../iopenable&#34;&gt;IOpenable&lt;/a&gt; interface.
If they don&amp;rsquo;t, the call to this method returns true.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; is_open_one(component: Any): bool&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;component&lt;/strong&gt;: Any - the component that is to be checked.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: bool - true if component is opened and false otherwise.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;open&#34;&gt;open&lt;/h4&gt;
&lt;p&gt;Opens multiple components.
To be opened components must implement &lt;a href=&#34;../iopenable&#34;&gt;IOpenable&lt;/a&gt; interface.
If they don&amp;rsquo;t the call to this method has no effect.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; open(correlation_id: Optional[str], components: List[Any])&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;components&lt;/strong&gt;: List[Any] - the list of components that are to be closed.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;open_one&#34;&gt;open_one&lt;/h4&gt;
&lt;p&gt;Opens specific component.
To be opened, components must implement &lt;a href=&#34;../iopenable&#34;&gt;IOpenable&lt;/a&gt; interface.
If they don&amp;rsquo;t, the call to this method has no effect.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; open_one(correlation_id: Optional[str], component: Any)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;component&lt;/strong&gt;: Any - the component that is to be opened.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;iopenableiopenable&#34;&gt;&lt;a href=&#34;../iopenable&#34;&gt;IOpenable&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: Parameters</title>
      <link>/python/commons/run/parameters/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/run/parameters/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../../data/any_value_map&#34;&gt;AnyValueMap&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The Parameters class contains a map with execution paramters.&lt;/p&gt;
&lt;p&gt;Important points&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In general, this map may contain non-serializable values.&lt;/li&gt;
&lt;li&gt;In contrast with other maps, its getters and setters support dot notation and are able to access properties in the entire object graph.&lt;/li&gt;
&lt;li&gt;This class is often used to pass execution and notification arguments, and parameterize classes before execution.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new instance of the map and assigns its value.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Parameters(map: Any = None)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;map&lt;/strong&gt;: Any - (optional) values to initialize this map.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;assign_to&#34;&gt;assign_to&lt;/h4&gt;
&lt;p&gt;Assigns (copies over) properties from the specified value to this map.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;assign_to(value: Any)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - value whose properties shall be copied over.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;contains_key&#34;&gt;contains_key&lt;/h4&gt;
&lt;p&gt;Checks if this map contains an element with a specified key.&lt;/p&gt;
&lt;p&gt;The key can be defined using dot notation
and allows to recursively access elements of elements.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;contains_key(key: str): bool&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;key&lt;/strong&gt;: str - a key to be checked&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: bool - true if this map contains the key or false otherwise.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;get&#34;&gt;get&lt;/h4&gt;
&lt;p&gt;Gets a map element specified by its key.
The key can be defined using dot notation
and allows to recursively access elements of elements.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;get(key: str): Any&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;key&lt;/strong&gt;: str - a key of the element to get.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Any - the value of the map element.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;get_as_nullable_parameters&#34;&gt;get_as_nullable_parameters&lt;/h4&gt;
&lt;p&gt;Converts map element into an Parameters or returns None if conversion is not possible.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;get_as_nullable_parameters(key: str): &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;key&lt;/strong&gt;: str - a key of element to get.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt; - Parameters value of the element or None if conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;get_as_parameters&#34;&gt;get_as_parameters&lt;/h4&gt;
&lt;p&gt;Converts map elements into Parameters or returns empty Parameters if conversion is not possible.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;get_as_parameters(key: str): &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;key&lt;/strong&gt;: str - a key of element to get.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt; - Parameters value of the element or empty Parameters if conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;get_as_parameters_with_default&#34;&gt;get_as_parameters_with_default&lt;/h4&gt;
&lt;p&gt;Converts map elements into Parameters or returns default value if conversion is not possible.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;get_as_parameters_with_default(key: str, default_value: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt;): &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;key&lt;/strong&gt;: str - a key of element to get.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;default_value&lt;/strong&gt;: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt; - the default value&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt; - Parameters value of the element or default value if conversion is not supported.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;omit&#34;&gt;omit&lt;/h4&gt;
&lt;p&gt;Omits selected parameters from this Parameters and returns the rest as a new Parameters object.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;omit(*paths: str): &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;paths&lt;/strong&gt;: str - keys to be omitted from copying over to new &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt; - a new &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt; object.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;override&#34;&gt;override&lt;/h4&gt;
&lt;p&gt;Overrides parameters with new values from specified &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt; and returns a new &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt; object.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;override(parameters: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt;, recursive: bool = false): &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;parameters&lt;/strong&gt;: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt; - Parameters with parameters to override the current values.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;recursive&lt;/strong&gt;: bool - (optional) true to perform deep copy, and false for shallow copy. Default: false&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt; - a new Parameters object.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;pick&#34;&gt;pick&lt;/h4&gt;
&lt;p&gt;Picks selected parameters from a Parameters object and returns them as a new Parameters object.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;pick(*paths: str): &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;paths&lt;/strong&gt;: str - keys to be picked and copied over to new Parameters.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt; - a new Parameters object.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;put&#34;&gt;put&lt;/h4&gt;
&lt;p&gt;Puts a new value into map element specified by its key.
The key can be defined using dot notation
and allows to recursively access elements of elements.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;put(key: str, value: Any): Any&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;key&lt;/strong&gt;: str - a key of the element to put.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - a new value for map element.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;set_defaults&#34;&gt;set_defaults&lt;/h4&gt;
&lt;p&gt;Set default values from specified Parameters and returns a new Parameters object.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;set_defaults(default_parameters: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt;, recursive: bool = false): &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;default_parameters&lt;/strong&gt;: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt; - Parameters with default parameter values.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;recursive&lt;/strong&gt;: bool - (optional) true to perform deep copy, and false for shallow copy. Default: false&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt; - a new Parameters object.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;to_json&#34;&gt;to_json&lt;/h4&gt;
&lt;p&gt;Converts this map to a JSON object.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;to_json(): str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: str - a JSON representation of this map.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;from_config&#34;&gt;from_config&lt;/h4&gt;
&lt;p&gt;Creates new Parameters from ConfigMap object.
See &lt;a href=&#34;../../config/config_params&#34;&gt;ConfigParams&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; from_config(config: &lt;a href=&#34;../../config/config_params&#34;&gt;ConfigParams&lt;/a&gt;): &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;config&lt;/strong&gt;: &lt;a href=&#34;../../config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - a ConfigParams that contain parameters.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt; - a new Parameters object.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;from_json&#34;&gt;from_json&lt;/h4&gt;
&lt;p&gt;Creates new Parameters object from a ConfigMap object.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; from_json(json: str): &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;config&lt;/strong&gt;: str - a json string that contain parameters.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt; - a new Parameters object.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;from_tuples&#34;&gt;from_tuples&lt;/h4&gt;
&lt;p&gt;Creates a new Parameters object filled with provided key-value pairs called tuples.
Tuples parameters contain a sequence of &lt;em&gt;key1, value1, key2, value2, &amp;hellip;&lt;/em&gt; pairs.&lt;/p&gt;
&lt;p&gt;See &lt;a href=&#34;../../data/any_value_map/#from_tuples_array&#34;&gt;AnyValueMap.from_tuples_array&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; fro_tuples(*tuples: Any): &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;tuples&lt;/strong&gt;: Any - a ConfigParams that contain parameters.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt; - a new Parameters object.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;from_value&#34;&gt;from_value&lt;/h4&gt;
&lt;p&gt;Creates a new Parameters object filled with key-value pairs from specified object.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; from_value(value: Any): &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;tuples&lt;/strong&gt;: Any - an object with key-value pairs used to initialize a new Parameters object.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt; - a new Parameters object.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;merge_params&#34;&gt;merge_params&lt;/h4&gt;
&lt;p&gt;Merges two or more Parameters into one. The following Parameters override
previously defined parameters.&lt;/p&gt;
&lt;p&gt;See &lt;a href=&#34;../../data/any_value_map/#from_maps&#34;&gt;AnyValueMap.from_maps&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; merge_params(*parameters: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt;): &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;parameters&lt;/strong&gt;: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt; - a list of Parameters objects to be merged.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../parameters&#34;&gt;Parameters&lt;/a&gt; - a new Parameters object.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;iparameterizediparameterized&#34;&gt;&lt;a href=&#34;../iparameterized&#34;&gt;IParameterized&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;anyvaluemapdataany_value_map&#34;&gt;&lt;a href=&#34;../../data/any_value_map&#34;&gt;AnyValueMap&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
