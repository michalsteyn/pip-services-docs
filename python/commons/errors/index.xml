<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> â€“ Errors</title>
    <link>/python/commons/errors/</link>
    <description>Recent content in Errors on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="/python/commons/errors/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Python: ApplicationException</title>
      <link>/python/commons/errors/application_exception/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/errors/application_exception/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; Exception&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ApplicationException class defines a base class used to define various application exceptions.&lt;/p&gt;
&lt;p&gt;Important points&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Most languages have own definition of base exception (error) types. However, this class is implemented symmetrically in all languages supported by the PipServices toolkit and  allows to create portable implementations and support proper error propagation in microservices calls.&lt;/li&gt;
&lt;li&gt;Error propagation means that when a microservice implemented in one language calls a microservice(s) implemented in a different language(s), errors are returned throught the entire call chain and restored in their original (or close) type.&lt;/li&gt;
&lt;li&gt;Since the number of potential exception types is endless, the PipServices toolkit supports only 12 standard categories of exceptions, which are defined in &lt;a href=&#34;../error_category&#34;&gt;ErrorCategory&lt;/a&gt;. The &lt;a href=&#34;&#34;&gt;ApplicationException&lt;/a&gt; class acts as a basis for these 12 standard exception types.&lt;/li&gt;
&lt;li&gt;Most exceptions use a free-form message that describes occured error. However, this may not be sufficient to create meaninful error descriptions. Therefore, the &lt;a href=&#34;&#34;&gt;ApplicationException&lt;/a&gt; class proposes an extended error definition that has more standard fields:
&lt;ul&gt;
&lt;li&gt;message: a human-readable error description&lt;/li&gt;
&lt;li&gt;category: one of the 12 standard error categories&lt;/li&gt;
&lt;li&gt;status: numeric HTTP status code for REST invocations&lt;/li&gt;
&lt;li&gt;code: a unique error code, usually defined as &amp;ldquo;MY_ERROR_CODE&amp;rdquo;&lt;/li&gt;
&lt;li&gt;correlation_id: a unique transaction id used to trace execution through a call chain&lt;/li&gt;
&lt;li&gt;details: map with error parameters that can help to recreate meaningful error description in other languages&lt;/li&gt;
&lt;li&gt;stack_trace: a stack trace&lt;/li&gt;
&lt;li&gt;cause: the original error that is wrapped by this exception&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The ApplicationException class is not serializable. To pass errors through the wire it must be converted into a &lt;a href=&#34;../error_description&#34;&gt;ErrorDescription&lt;/a&gt; object and then restored on the receiving end into an identical exception type.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new instance of application exception and assigns its values.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ApplicationException(category: str = &lt;a href=&#34;../error_category&#34;&gt;ErrorCategory.Unknown&lt;/a&gt;, correlation_id: Optional[str] = None,
code: str = &amp;lsquo;UNKNOWN&amp;rsquo;, message: str = &amp;lsquo;Unknown error&amp;rsquo;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;category&lt;/strong&gt;: str - (optional) a standard error category. Default: Unknown&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) a unique transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;code&lt;/strong&gt;: str - (optional) a unique error code. Default: &amp;ldquo;UNKNOWN&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: str - (optional) a human-readable description of the error.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;fields&#34;&gt;Fields&lt;/h3&gt;
&lt;span class=&#34;hide-title-link&#34;&gt;
&lt;h4 id=&#34;message&#34;&gt;message&lt;/h4&gt;
&lt;p&gt;A human-readable error description (usually written in English).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;message&lt;/strong&gt;: str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;category&#34;&gt;category&lt;/h4&gt;
&lt;p&gt;Standard error category.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;category&lt;/strong&gt;: str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;status&#34;&gt;status&lt;/h4&gt;
&lt;p&gt;HTTP status code associated with this error type.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;status&lt;/strong&gt;: int = 500&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;code&#34;&gt;code&lt;/h4&gt;
&lt;p&gt;A unique error code&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;code&lt;/strong&gt;: str = &amp;lsquo;UNKNOWN&amp;rsquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;details&#34;&gt;details&lt;/h4&gt;
&lt;p&gt;A map with additional details that can be used to restore error description in other languages.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;details&lt;/strong&gt;: &lt;a href=&#34;../../data/string_value_map&#34;&gt;StringValueMap&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;correlation_id&#34;&gt;correlation_id&lt;/h4&gt;
&lt;p&gt;A unique transaction id to trace execution throug call chain.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;stack_trace&#34;&gt;stack_trace&lt;/h4&gt;
&lt;p&gt;Stack trace of the exception.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;stack_trace&lt;/strong&gt;: str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;cause&#34;&gt;cause&lt;/h4&gt;
&lt;p&gt;Original error wrapped by this exception.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;cause&lt;/strong&gt;: str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/span&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;get_cause_string&#34;&gt;get_cause_string&lt;/h4&gt;
&lt;p&gt;Gets original error wrapped by this exception as a string message.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;get_cause_string(): str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: str - an original error message.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;get_stack_trace_string&#34;&gt;get_stack_trace_string&lt;/h4&gt;
&lt;p&gt;Gets a stack trace where this exception occured.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;get_stack_trace_string(): str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: str - a stack trace as a string.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;set_cause_string&#34;&gt;set_cause_string&lt;/h4&gt;
&lt;p&gt;Sets original error wrapped by this exception as a string message.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;set_cause_string(value: str)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: str - an original error message.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;set_stack_trace_string&#34;&gt;set_stack_trace_string&lt;/h4&gt;
&lt;p&gt;Sets a stack trace where this exception occured.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;set_stack_trace_string(value: str)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: str - a stack trace as a string&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;with_cause&#34;&gt;with_cause&lt;/h4&gt;
&lt;p&gt;Sets a original error wrapped by this exception
This method returns reference to this exception to implement Builder pattern
to chain additional calls.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;with_cause(cause: Exception): &lt;a href=&#34;&#34;&gt;ApplicationException&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;cause&lt;/strong&gt;: Exception - original error object&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;&#34;&gt;ApplicationException&lt;/a&gt; - this exception object&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;with_code&#34;&gt;with_code&lt;/h4&gt;
&lt;p&gt;Sets a unique error code.&lt;br&gt;
This method returns reference to this exception to implement Builder pattern
to chain additional calls.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;with_code(code: str): &lt;a href=&#34;&#34;&gt;ApplicationException&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;code&lt;/strong&gt;: str - a unique error code&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;&#34;&gt;ApplicationException&lt;/a&gt; - this exception object&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;with_correlation_id&#34;&gt;with_correlation_id&lt;/h4&gt;
&lt;p&gt;Sets a correlation id which can be used to trace this error through a call chain.&lt;br&gt;
This method returns reference to this exception to implement Builder pattern
to chain additional calls.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;with_correlation_id(correlation_id: Optional[str]): &lt;a href=&#34;&#34;&gt;ApplicationException&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - a unique transaction id to trace error through call chain&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;&#34;&gt;ApplicationException&lt;/a&gt; - this exception object&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;with_details&#34;&gt;with_details&lt;/h4&gt;
&lt;p&gt;Sets a parameter for additional error details.
This details can be used to restore error description in other languages.&lt;/p&gt;
&lt;p&gt;This method returns reference to this exception to implement Builder pattern
to chain additional calls.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;with_details(key: str, value: Any): &lt;a href=&#34;&#34;&gt;ApplicationException&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;key&lt;/strong&gt;: str - key a details parameter name&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: Any - value a details parameter name&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;&#34;&gt;ApplicationException&lt;/a&gt; - this exception object&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;with_stack_trace&#34;&gt;with_stack_trace&lt;/h4&gt;
&lt;p&gt;Sets a stack trace for this error.&lt;br&gt;
This method returns reference to this exception to implement Builder pattern
to chain additional calls&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;with_stack_trace(stack_trace: str): &lt;a href=&#34;&#34;&gt;ApplicationException&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;stack_trace&lt;/strong&gt;: str - a stack trace where this error occured&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;&#34;&gt;ApplicationException&lt;/a&gt; - this exception object&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;with_status&#34;&gt;with_status&lt;/h4&gt;
&lt;p&gt;Sets a HTTP status code which shall be returned by REST calls.
This method returns reference to this exception to implement Builder pattern
to chain additional calls.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;with_status(status: int): &lt;a href=&#34;&#34;&gt;ApplicationException&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;status&lt;/strong&gt;: int - an HTTP error code.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;&#34;&gt;ApplicationException&lt;/a&gt; - this exception object&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;wrap&#34;&gt;wrap&lt;/h4&gt;
&lt;p&gt;Wraps another exception into an application exception object.&lt;/p&gt;
&lt;p&gt;If original exception is of ApplicationException type it is returned without changes.
Otherwise a new ApplicationException is created and original error is set as its cause.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;wrap(cause: Any): &lt;a href=&#34;&#34;&gt;ApplicationException&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;cause&lt;/strong&gt;: Any - an original error object.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;&#34;&gt;ApplicationException&lt;/a&gt; - an original or newly created ApplicationException.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;unwrap_exception&#34;&gt;unwrap_exception!&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;TODO: this method is not realized yet for this language&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Unwraps original exception through wrapped exception objects.&lt;/p&gt;
&lt;p&gt;Many frameworks like Seneca or restify wrap original exception.
That may result in propagating less specific errors and can hide
causes of the errors.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; unwrap_exception(error: Exception): &lt;a href=&#34;&#34;&gt;ApplicationException&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;error&lt;/strong&gt;: Exception - an error object&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;&#34;&gt;ApplicationException&lt;/a&gt; - an original error object&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;wrap_error&#34;&gt;wrap_error&lt;/h4&gt;
&lt;p&gt;Wraps another exception into specified application exception object.&lt;/p&gt;
&lt;p&gt;If original exception is of ApplicationException type it is returned without changes.
Otherwise the original error is set as a cause to specified ApplicationException object.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; wrap_error(error: &lt;a href=&#34;&#34;&gt;ApplicationException&lt;/a&gt;, cause: Any): &lt;a href=&#34;&#34;&gt;ApplicationException&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;error&lt;/strong&gt;: &lt;a href=&#34;&#34;&gt;ApplicationException&lt;/a&gt; - an ApplicationException object to wrap the cause&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;cause&lt;/strong&gt;: Any - an original error object&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;&#34;&gt;ApplicationException&lt;/a&gt; - an original or newly created ApplicationException&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;errorcategoryerror_category&#34;&gt;&lt;a href=&#34;../error_category&#34;&gt;ErrorCategory&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;errordescriptionerror_description&#34;&gt;&lt;a href=&#34;../error_description&#34;&gt;ErrorDescription&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: ApplicationExceptionFactory</title>
      <link>/python/commons/errors/application_exception_factory/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/errors/application_exception_factory/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ApplicationExceptionFactory acts as a factory to recreate from &lt;a href=&#34;../error_description&#34;&gt;ErrorDescription&lt;/a&gt; values passed through the wire.&lt;/p&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;create&#34;&gt;create&lt;/h4&gt;
&lt;p&gt;Recreates ApplicationException object from serialized ErrorDescription.
It tries to restore original exception type using type or error category fields.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; create(description: &lt;a href=&#34;../error_description&#34;&gt;ErrorDescription&lt;/a&gt;): &lt;a href=&#34;../application_exception&#34;&gt;ApplicationException&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;description&lt;/strong&gt;: &lt;a href=&#34;../error_description&#34;&gt;ErrorDescription&lt;/a&gt; - a serialized error description received as a result of remote call&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../application_exception&#34;&gt;ApplicationException&lt;/a&gt; - new instance of the &lt;a href=&#34;../application_exception&#34;&gt;ApplicationException&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;applicationexceptionapplication_exception&#34;&gt;&lt;a href=&#34;../application_exception&#34;&gt;ApplicationException&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;errordescriptionerror_description&#34;&gt;&lt;a href=&#34;../error_description&#34;&gt;ErrorDescription&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: BadRequestException</title>
      <link>/python/commons/errors/bad_request_exception/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/errors/bad_request_exception/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../application_exception&#34;&gt;ApplicationException&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The BadRequestException class is used to manage errors created by improper user requests. For example, when there are missing or incorrect parameters in the request.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates an error instance and assigns its values.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;BadRequestException(correlation_id: Optional[str] = None, code: str = None, message: str = None)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) a unique transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;code&lt;/strong&gt;: str - (optional) a unique error code. Default: &amp;ldquo;UNKNOWN&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: str - (optional) a human-readable description of the error.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: ConfigException</title>
      <link>/python/commons/errors/config_exception/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/errors/config_exception/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../application_exception&#34;&gt;ApplicationException&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ConfigException is used to manage errors related to mistakes in microservice&amp;rsquo;s user-defined configurations.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates an error instance and assigns its values.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ConfigException(correlation_id: Optional[str] = None, code: str = None, message: str = None)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) a unique transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;code&lt;/strong&gt;: str - (optional) a unique error code. Default: &amp;ldquo;UNKNOWN&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: str - (optional) a human-readable description of the error.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: ConflictException</title>
      <link>/python/commons/errors/conflict_exception/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/errors/conflict_exception/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../application_exception&#34;&gt;ApplicationException&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ConflictException class is used to manage errors raised by conflicts between object versions that were posted by the user and those that are stored on the server&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates an error instance and assigns its values.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ConflictException(correlation_id: Optional[str] = None, code: str = None, message: str = None)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) a unique transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;code&lt;/strong&gt;: str - (optional) a unique error code. Default: &amp;ldquo;UNKNOWN&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: str - (optional) a human-readable description of the error.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: ConnectionException</title>
      <link>/python/commons/errors/connection_exception/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/errors/connection_exception/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../application_exception&#34;&gt;ApplicationException&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ConnectionException class is used to manage errors that occur during a connection to a remote service. These errors can be related to misconfiguration, network issues, or the remote service itself.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates an error instance and assigns its values.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ConnectionException(correlation_id: Optional[str] = None, code: str = None, message: str = None)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) a unique transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;code&lt;/strong&gt;: str - (optional) a unique error code. Default: &amp;ldquo;UNKNOWN&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: str - (optional) a human-readable description of the error.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: ErrorCategory</title>
      <link>/python/commons/errors/error_category/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/errors/error_category/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ErrorCategory class defines the 12 standard error categories supported by the PipServices toolkit.&lt;/p&gt;
&lt;h3 id=&#34;fields&#34;&gt;Fields&lt;/h3&gt;
&lt;span class=&#34;hide-title-link&#34;&gt;
&lt;h4 id=&#34;unknown&#34;&gt;Unknown&lt;/h4&gt;
&lt;p&gt;Unknown or unexpected errors.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; &lt;strong&gt;Unknown&lt;/strong&gt;: str = &amp;ldquo;Unknown&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;internal&#34;&gt;Internal&lt;/h4&gt;
&lt;p&gt;Internal errors caused by programming mistakes.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; &lt;strong&gt;Internal&lt;/strong&gt;: str = &amp;ldquo;Internal&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;misconfiguration&#34;&gt;Misconfiguration&lt;/h4&gt;
&lt;p&gt;Errors related to mistakes in user-defined configurations.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; &lt;strong&gt;Misconfiguration&lt;/strong&gt;: str = &amp;ldquo;Misconfiguration&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;invalidstate&#34;&gt;InvalidState&lt;/h4&gt;
&lt;p&gt;Errors caused by incorrect object state.
For example: business calls when the component is not ready.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; &lt;strong&gt;InvalidState&lt;/strong&gt;: str = &amp;ldquo;InvalidState&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;noresponse&#34;&gt;NoResponse&lt;/h4&gt;
&lt;p&gt;Errors caused by remote calls timeouted and not returning results.
It allows to clearly separate communication related problems
from other application errors.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; &lt;strong&gt;NoResponse&lt;/strong&gt;: str = &amp;ldquo;NoResponse&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;failedinvocation&#34;&gt;FailedInvocation&lt;/h4&gt;
&lt;p&gt;Errors caused by remote calls failed due to unidenfied reasons.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; &lt;strong&gt;FailedInvocation&lt;/strong&gt;: str = &amp;ldquo;FailedInvocation&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;fileerror&#34;&gt;FileError&lt;/h4&gt;
&lt;p&gt;Errors in read/write local disk operations.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; &lt;strong&gt;FileError&lt;/strong&gt;: str = &amp;ldquo;FileError&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;badrequest&#34;&gt;BadRequest&lt;/h4&gt;
&lt;p&gt;Errors due to incorrectly specified invocation parameters.
For example: missing or incorrect parameters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; &lt;strong&gt;BadRequest&lt;/strong&gt;: str = &amp;ldquo;BadRequest&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;unauthorized&#34;&gt;Unauthorized&lt;/h4&gt;
&lt;p&gt;Access errors caused by missing user identity (authentication error)
or incorrect security permissions (authorization error).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; &lt;strong&gt;Unauthorized&lt;/strong&gt;: str = &amp;ldquo;Unauthorized&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;notfound&#34;&gt;NotFound&lt;/h4&gt;
&lt;p&gt;Errors caused by attempts to access missing objects.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; &lt;strong&gt;NotFound&lt;/strong&gt;: str = &amp;ldquo;NotFound&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;conflict&#34;&gt;Conflict&lt;/h4&gt;
&lt;p&gt;Errors raised by conflicts between object versions that were
posted by the user and those that are stored on the server.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; &lt;strong&gt;Conflict&lt;/strong&gt;: str = &amp;ldquo;Conflict&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;unsupported&#34;&gt;Unsupported&lt;/h4&gt;
&lt;p&gt;Errors caused by calls to unsupported or not yet implemented functionality.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; &lt;strong&gt;Unsupported&lt;/strong&gt;: str = &amp;ldquo;Unsupported&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/span&gt;

      </description>
    </item>
    
    <item>
      <title>Python: ErrorDescription</title>
      <link>/python/commons/errors/error_description/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/errors/error_description/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ErrorDescription class is used to pass information about errors between microservices implemented in different languages. On the receiving side &lt;a href=&#34;&#34;&gt;ErrorDescription&lt;/a&gt; is used to recreate the exception object close to its original type without missing additional details. This class is serializeable.&lt;/p&gt;
&lt;h3 id=&#34;fields&#34;&gt;Fields&lt;/h3&gt;
&lt;span class=&#34;hide-title-link&#34;&gt;
&lt;h4 id=&#34;type&#34;&gt;type&lt;/h4&gt;
&lt;p&gt;Data type of the original error&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;type&lt;/strong&gt;: str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;category&#34;&gt;category&lt;/h4&gt;
&lt;p&gt;Standard error category&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;category&lt;/strong&gt;: str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;status&#34;&gt;status&lt;/h4&gt;
&lt;p&gt;HTTP status code associated with this error type&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;status&lt;/strong&gt;: number&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;code&#34;&gt;code&lt;/h4&gt;
&lt;p&gt;A unique error code&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;code&lt;/strong&gt;: str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;message&#34;&gt;message&lt;/h4&gt;
&lt;p&gt;A human-readable error description (usually written in English)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;message&lt;/strong&gt;: str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;details&#34;&gt;details&lt;/h4&gt;
&lt;p&gt;A map with additional details that can be used to restore error description in other languages&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;details&lt;/strong&gt;: Any&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;correlation_id&#34;&gt;correlation_id&lt;/h4&gt;
&lt;p&gt;A unique transaction id to trace execution throug call chain&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;cause&#34;&gt;cause&lt;/h4&gt;
&lt;p&gt;Original error wrapped by this exception&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;cause&lt;/strong&gt;: str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;stack_trace&#34;&gt;stack_trace&lt;/h4&gt;
&lt;p&gt;Stack trace of the exception&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;stack_trace&lt;/strong&gt;: str&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/span&gt;
&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;applicationexceptionapplication_exception&#34;&gt;&lt;a href=&#34;../application_exception&#34;&gt;ApplicationException&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;applicationexceptionfactoryapplication_exception_factory&#34;&gt;&lt;a href=&#34;../application_exception_factory&#34;&gt;ApplicationExceptionFactory&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: ErrorDescriptionFactory</title>
      <link>/python/commons/errors/error_description_factory/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/errors/error_description_factory/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ErrorDescriptionFactory class provides a factory to create a serializeable &lt;a href=&#34;../error_description&#34;&gt;ErrorDescription&lt;/a&gt; from &lt;a href=&#34;../application_exception&#34;&gt;ApplicationException&lt;/a&gt; or from arbitrary errors.&lt;/p&gt;
&lt;p&gt;Important points&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Error descriptions are used to pass errors through the wire between microservices implemented in different languages. They allow to restore exceptions on the receiving side close to the original type and preserve additional information.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;create&#34;&gt;create&lt;/h4&gt;
&lt;p&gt;Creates a serializable ErrorDescription from error object.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;static&lt;/code&gt; create(error: Any): &lt;a href=&#34;../error_description&#34;&gt;ErrorDescription&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;error&lt;/strong&gt;: Any - an error object&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../error_description&#34;&gt;ErrorDescription&lt;/a&gt; - a serializeable ErrorDescription object that describes the error.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;applicationexceptionapplication_exception&#34;&gt;&lt;a href=&#34;../application_exception&#34;&gt;ApplicationException&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;errordescriptionerror_description&#34;&gt;&lt;a href=&#34;../error_description&#34;&gt;ErrorDescription&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: FileException</title>
      <link>/python/commons/errors/file_exception/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/errors/file_exception/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../application_exception&#34;&gt;ApplicationException&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The FileException class is used to manage errors in read/write local disk operations.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates an error instance and assigns its values.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FileException(correlation_id: Optional[str] = None, code: str = None, message: str = None)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) a unique transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;code&lt;/strong&gt;: str - (optional) a unique error code. Default: &amp;ldquo;UNKNOWN&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: str - (optional) a human-readable description of the error.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: InternalException</title>
      <link>/python/commons/errors/internal_exception/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/errors/internal_exception/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../application_exception&#34;&gt;ApplicationException&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The InternalException class is used to manage errors caused by programming mistakes.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates an error instance and assigns its values.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;InternalException(correlation_id: Optional[str] = None, code: str = None, message: str = None)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) a unique transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;code&lt;/strong&gt;: str - (optional) a unique error code. Default: &amp;ldquo;UNKNOWN&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: str - (optional) a human-readable description of the error.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: InvalidStateException</title>
      <link>/python/commons/errors/invalid_state_exception/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/errors/invalid_state_exception/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../application_exception&#34;&gt;ApplicationException&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The InvalidStateException class is used to manage errors related to calling opertaions that require the component to be in a specific state. For example, business calls when the component is not reay.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates an error instance and assigns its values.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;InvalidStateException(correlation_id: Optional[str] = None, code: str = None, message: str = None)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) a unique transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;code&lt;/strong&gt;: str - (optional) a unique error code. Default: &amp;ldquo;UNKNOWN&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: str - (optional) a human-readable description of the error.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: InvocationException</title>
      <link>/python/commons/errors/invocation_exception/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/errors/invocation_exception/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../application_exception&#34;&gt;ApplicationException&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The InvocationException class is used to manage errors returned by remote services or by the network during call attempts.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates an error instance and assigns its values.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;InvocationException(correlation_id: Optional[str] = None, code: str = None, message: str = None)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) a unique transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;code&lt;/strong&gt;: str - (optional) a unique error code. Default: &amp;ldquo;UNKNOWN&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: str - (optional) a human-readable description of the error.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: NotFoundException</title>
      <link>/python/commons/errors/not_found_exception/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/errors/not_found_exception/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../application_exception&#34;&gt;ApplicationException&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The NotFoundException class is used to manage errors caused by attempts to access missing objects.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates an error instance and assigns its values.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NotFoundException(correlation_id: Optional[str] = None, code: str = None, message: str = None)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) a unique transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;code&lt;/strong&gt;: str - (optional) a unique error code. Default: &amp;ldquo;UNKNOWN&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: str - (optional) a human-readable description of the error.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: UnauthorizedException</title>
      <link>/python/commons/errors/unauthorized_exception/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/errors/unauthorized_exception/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../application_exception&#34;&gt;ApplicationException&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The UnauthorizedException class is used to manage access errors caused by missing user identity (authentication error) or incorrect security permissions (authorization error).&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates an error instance and assigns its values.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;UnauthorizedException(correlation_id: Optional[str] = None, code: str = None, message: str = None)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) a unique transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;code&lt;/strong&gt;: str - (optional) a unique error code. Default: &amp;ldquo;UNKNOWN&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: str - (optional) a human-readable description of the error.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: UnknownException</title>
      <link>/python/commons/errors/unknown_exception/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/errors/unknown_exception/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../application_exception&#34;&gt;ApplicationException&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The UnknownException class is used to manage unknown or unexpected errors.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates an error instance and assigns its values.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;UnknownException(correlation_id: Optional[str] = None, code: str = None, message: str = None)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) a unique transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;code&lt;/strong&gt;: str - (optional) a unique error code. Default: &amp;ldquo;UNKNOWN&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: str - (optional) a human-readable description of the error.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: UnsupportedException</title>
      <link>/python/commons/errors/unsupported_exception/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/commons/errors/unsupported_exception/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../application_exception&#34;&gt;ApplicationException&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The UnsupportedException class is used to manage errors caused by calls to unsupported or not yet implemented functionality.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates an error instance and assigns its values.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;UnsupportedException(correlation_id: Optional[str] = None, code: str = None, message: str = None)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) a unique transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;code&lt;/strong&gt;: str - (optional) a unique error code. Default: &amp;ldquo;UNKNOWN&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: str - (optional) a human-readable description of the error.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
