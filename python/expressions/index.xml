<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> – Expressions module</title>
    <link>/python/expressions/</link>
    <description>Recent content in Expressions module on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="/python/expressions/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Python: Calculator</title>
      <link>/python/expressions/calculator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/expressions/calculator/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;div class=&#34;module-body&#34;&gt; 
&lt;h3 id=&#34;sub-packages&#34;&gt;Sub-Packages&lt;/h3&gt;
&lt;h4 id=&#34;functionsfunctions&#34;&gt;&lt;a href=&#34;functions&#34;&gt;Functions&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;This sub-package provides interfaces and functions used to create lists of functions and delegates.&lt;/p&gt;
&lt;h4 id=&#34;parsersparsers&#34;&gt;&lt;a href=&#34;parsers&#34;&gt;Parsers&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;This sub-package contains classes used to create expression parsers and expression token holders.&lt;/p&gt;
&lt;h4 id=&#34;tokenizerstokenizers&#34;&gt;&lt;a href=&#34;tokenizers&#34;&gt;Tokenizers&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;This sub-package contains classes used to create expression specific state object and tokenizers for lexical analysis.&lt;/p&gt;
&lt;h4 id=&#34;variablesvariables&#34;&gt;&lt;a href=&#34;variables&#34;&gt;Variables&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;This sub-package contains interfaces and clases used to create variables and collections of variables.&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;constants&#34;&gt;Constants&lt;/h3&gt;
&lt;h4 id=&#34;syntaxerrorcodesyntax_error_code&#34;&gt;&lt;a href=&#34;syntax_error_code&#34;&gt;SyntaxErrorCode&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;General syntax errors.&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;classes&#34;&gt;Classes&lt;/h3&gt;
&lt;h4 id=&#34;calculationstackcalculation_stack&#34;&gt;&lt;a href=&#34;calculation_stack&#34;&gt;CalculationStack&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Implements a stack of Variant values.&lt;/p&gt;
&lt;h4 id=&#34;expressioncalculatorexpression_calculator&#34;&gt;&lt;a href=&#34;expression_calculator&#34;&gt;ExpressionCalculator&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Implements an expression calculator.&lt;/p&gt;
&lt;h4 id=&#34;expressionexceptionexpression_exception&#34;&gt;&lt;a href=&#34;expression_exception&#34;&gt;ExpressionException&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Exception that can be thrown by Expression Calculator.&lt;/p&gt;
&lt;h4 id=&#34;syntaxexceptionsyntax_exception&#34;&gt;&lt;a href=&#34;syntax_exception&#34;&gt;SyntaxException&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Exception that can be thrown by ExpressionParser.&lt;/p&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Python: CSV</title>
      <link>/python/expressions/csv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/expressions/csv/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;div class=&#34;module-body&#34;&gt; 
&lt;h3 id=&#34;constants&#34;&gt;Constants&lt;/h3&gt;
&lt;h4 id=&#34;csvconstantcsv_constant&#34;&gt;&lt;a href=&#34;csv_constant&#34;&gt;CsvConstant&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Defines a set of constants, such as control return, line feed and nil.&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;classes&#34;&gt;Classes&lt;/h3&gt;
&lt;h4 id=&#34;csvquotestatecsv_quote_state&#34;&gt;&lt;a href=&#34;csv_quote_state&#34;&gt;CsvQuoteState&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Implements a quote string state object for CSV streams.&lt;/p&gt;
&lt;h4 id=&#34;csvsymbolstatecsv_symbol_state&#34;&gt;&lt;a href=&#34;csv_symbol_state&#34;&gt;CsvSymbolState&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Implements a symbol state to tokenize delimiters in CSV streams.&lt;/p&gt;
&lt;h4 id=&#34;csvtokenizercsv_tokenizer&#34;&gt;&lt;a href=&#34;csv_tokenizer&#34;&gt;CsvTokenizer&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Implements a tokenizer class for CSV files.&lt;/p&gt;
&lt;h4 id=&#34;csvwordstatecsv_word_state&#34;&gt;&lt;a href=&#34;csv_word_state&#34;&gt;CsvWordState&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Implements a word state to tokenize CSV stream.&lt;/p&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Python: IO</title>
      <link>/python/expressions/io/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/expressions/io/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;div class=&#34;module-body&#34;&gt; 
&lt;h3 id=&#34;interfaces&#34;&gt;Interfaces&lt;/h3&gt;
&lt;h4 id=&#34;iscanneriscanner&#34;&gt;&lt;a href=&#34;iscanner&#34;&gt;IScanner&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Defines scanner that can read and unread characters and count lines. This scanner is used by tokenizers to process input streams.&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;classes&#34;&gt;Classes&lt;/h3&gt;
&lt;h4 id=&#34;stringscannerstring_scanner&#34;&gt;&lt;a href=&#34;string_scanner&#34;&gt;StringScanner&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Scan characters in a string that allows tokenizers to look ahead through a stream to perform lexical analysis.&lt;/p&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Python: Mustache</title>
      <link>/python/expressions/mustache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/expressions/mustache/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;div class=&#34;module-body&#34;&gt; 
&lt;h3 id=&#34;sub-packages&#34;&gt;Sub-packages&lt;/h3&gt;
&lt;h4 id=&#34;parsersparsers&#34;&gt;&lt;a href=&#34;parsers&#34;&gt;Parsers&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Contains constants and classes used to create Mustache parsers.&lt;/p&gt;
&lt;h4 id=&#34;tokenizerstokenizers&#34;&gt;&lt;a href=&#34;tokenizers&#34;&gt;Tokenizers&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Contains classes used to create Mustache tokenizers&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;classes&#34;&gt;Classes&lt;/h3&gt;
&lt;h4 id=&#34;mustacheexceptionmustache_exception&#34;&gt;&lt;a href=&#34;mustache_exception&#34;&gt;MustacheException&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Exception that can be thrown by a Mustache template.&lt;/p&gt;
&lt;h4 id=&#34;mustachetemplatemustache_template&#34;&gt;&lt;a href=&#34;mustache_template&#34;&gt;MustacheTemplate&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Implements an Mustache template.&lt;/p&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Python: Tokenizers</title>
      <link>/python/expressions/tokenizers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/expressions/tokenizers/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;div class=&#34;module-body&#34;&gt; 
&lt;h3 id=&#34;packages&#34;&gt;Packages&lt;/h3&gt;
&lt;h4 id=&#34;genericgeneric&#34;&gt;&lt;a href=&#34;generic&#34;&gt;Generic&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The sub-package provides classes that define different tokenizer states and symbol nodes.&lt;/p&gt;
&lt;h4 id=&#34;utilitiesutilities&#34;&gt;&lt;a href=&#34;utilities&#34;&gt;Utilities&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;This sub-package contains utility classes used to create character intervals, keep references associated with specific characters and char validators.&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;constants&#34;&gt;Constants&lt;/h3&gt;
&lt;h4 id=&#34;tokentypetoken_type&#34;&gt;&lt;a href=&#34;token_type&#34;&gt;TokenType&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Types (categories) of tokens such as “number”, “symbol” and “word”.&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;interfaces&#34;&gt;Interfaces&lt;/h3&gt;
&lt;h4 id=&#34;icommentstateicomment_state&#34;&gt;&lt;a href=&#34;icomment_state&#34;&gt;ICommentState&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Defines an interface for tokenizer state that processes comments.&lt;/p&gt;
&lt;h4 id=&#34;inumberstateinumber_state&#34;&gt;&lt;a href=&#34;inumber_state&#34;&gt;INumberState&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Defines an interface for tokenizer state that processes numbers - Integers, Floats, HexDec.&lt;/p&gt;
&lt;h4 id=&#34;iquotestateiquote_state&#34;&gt;&lt;a href=&#34;iquote_state&#34;&gt;IQuoteState&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Defines an interface for tokenizer state that processes quoted strings.&lt;/p&gt;
&lt;h4 id=&#34;isymbolstateisymbol_state&#34;&gt;&lt;a href=&#34;isymbol_state&#34;&gt;ISymbolState&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Defines an interface for tokenizer state that processes delimiters.&lt;/p&gt;
&lt;h4 id=&#34;itokenizeritokenizer&#34;&gt;&lt;a href=&#34;itokenizer&#34;&gt;ITokenizer&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Interface for tokenizers.&lt;/p&gt;
&lt;h4 id=&#34;itokenizerstateitokenizer_state&#34;&gt;&lt;a href=&#34;itokenizer_state&#34;&gt;ITokenizerState&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Interface for TokenizerStates.&lt;/p&gt;
&lt;h4 id=&#34;iwhitespacestateiwhitespace_state&#34;&gt;&lt;a href=&#34;iwhitespace_state&#34;&gt;IWhitespaceState&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Defines an interface for tokenizer state that processes whitespaces (&#39; ‘, ‘\t’).&lt;/p&gt;
&lt;h4 id=&#34;iwordstateiword_state&#34;&gt;&lt;a href=&#34;iword_state&#34;&gt;IWordState&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Defines an interface for tokenizer state that processes words, identificators or keywords.&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;classes&#34;&gt;Classes&lt;/h3&gt;
&lt;h4 id=&#34;abstracttokenizerabstract_tokenizer&#34;&gt;&lt;a href=&#34;abstract_tokenizer&#34;&gt;AbstractTokenizer&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Provides a general tokenizer.&lt;/p&gt;
&lt;h4 id=&#34;tokentoken&#34;&gt;&lt;a href=&#34;token&#34;&gt;Token&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Represents a token.&lt;/p&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Python: Variants</title>
      <link>/python/expressions/variants/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/expressions/variants/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;div class=&#34;module-body&#34;&gt; 
&lt;h3 id=&#34;constants&#34;&gt;Constants&lt;/h3&gt;
&lt;h4 id=&#34;varianttypevariant_type&#34;&gt;&lt;a href=&#34;variant_type&#34;&gt;VariantType&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Enum that defines the supported types of variant values.&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;interfaces&#34;&gt;Interfaces&lt;/h3&gt;
&lt;h4 id=&#34;ivariantoperationsivariant_operations&#34;&gt;&lt;a href=&#34;ivariant_operations&#34;&gt;IVariantOperations&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Implements an abstractd variant operations manager object.&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;classes&#34;&gt;Classes&lt;/h3&gt;
&lt;h4 id=&#34;abstractvariantoperationsabstract_variant_operations&#34;&gt;&lt;a href=&#34;abstract_variant_operations&#34;&gt;AbstractVariantOperations&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Implements an abstract variant operations manager object.&lt;/p&gt;
&lt;h4 id=&#34;typesafevariantoperationstype_safe_variant_operations&#34;&gt;&lt;a href=&#34;type_safe_variant_operations&#34;&gt;TypeSafeVariantOperations&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Implements a strongly typed (type safe) variant operations manager object.&lt;/p&gt;
&lt;h4 id=&#34;typeunsafevariantoperationstype_unsafe_variant_operations&#34;&gt;&lt;a href=&#34;type_unsafe_variant_operations&#34;&gt;TypeUnsafeVariantOperations&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Implements a type unsafe variant operations manager object.&lt;/p&gt;
&lt;h4 id=&#34;variantvariant&#34;&gt;&lt;a href=&#34;variant&#34;&gt;Variant&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Defines a container for variant values.&lt;/p&gt;
&lt;/div&gt;

      </description>
    </item>
    
  </channel>
</rss>
