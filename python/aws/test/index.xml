<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> â€“ Test</title>
    <link>/python/aws/test/</link>
    <description>Recent content in Test on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="/python/aws/test/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Python: TestCommandableLambdaClient</title>
      <link>/python/aws/test/test_commandable_lambda_client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/aws/test/test_commandable_lambda_client/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../../clients/commandable_lambda_client&#34;&gt;CommandableLambdaClient&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The TestCommandableLambdaClient class provides an AWS Commandable Lambda client that can be used for automated testing.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new instance of this class.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;TestCommandableLambdaClient(base_route: str)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;base_route&lt;/strong&gt;: str - base route&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;call_command&#34;&gt;call_command&lt;/h4&gt;
&lt;p&gt;Calls a remote action in AWS Lambda function.
The name of the action is added as &amp;ldquo;cmd&amp;rdquo; parameter
to the action parameters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;call_command(name: str, correlation_id: Optional[str], params: dict): Any&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: str - an action name&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;params&lt;/strong&gt;: dict - command parameters.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Any - action result.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Python: TestLambdaClient</title>
      <link>/python/aws/test/test_lambda_client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/python/aws/test/test_lambda_client/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements:&lt;/strong&gt; &lt;a href=&#34;../../clients/lambda_client&#34;&gt;LambdaClient&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The TestLambdaClient class allows you to create an AWS Lambda client that can be used for automated testing.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates an instance of this class.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;TestLambdaClient()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;call&#34;&gt;call&lt;/h4&gt;
&lt;p&gt;Calls a remote action in AWS Lambda function.
The name of the action is added as &amp;ldquo;cmd&amp;rdquo; parameter
to the action parameters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;call(cmd: str, correlation_id: Optional[str], params: dict = None): Any:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;cmd&lt;/strong&gt;: str - action name to be called.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;params&lt;/strong&gt;: dict - (optional) action parameters.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Any - action result.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;call_one_way&#34;&gt;call_one_way&lt;/h4&gt;
&lt;p&gt;Calls an AWS Lambda Function action asynchronously without waiting for the response.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;call_one_way(cmd: str, correlation_id: Optional[str], params: dict = None): Any&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;cmd&lt;/strong&gt;: str - action name to be called.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;correlation_id&lt;/strong&gt;: Optional[str] - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;params&lt;/strong&gt;: dict - (optional) action parameters.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Any - action result.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
