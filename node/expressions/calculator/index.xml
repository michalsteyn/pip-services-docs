<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> â€“ Calculator</title>
    <link>/node/expressions/calculator/</link>
    <description>Recent content in Calculator on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="/node/expressions/calculator/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Node: Functions</title>
      <link>/node/expressions/calculator/functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/node/expressions/calculator/functions/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;div class=&#34;module-body&#34;&gt; 
&lt;h3 id=&#34;interfaces&#34;&gt;Interfaces&lt;/h3&gt;
&lt;h4 id=&#34;ifunctionifunction&#34;&gt;&lt;a href=&#34;ifunction&#34;&gt;IFunction&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Interface for expression functions.&lt;/p&gt;
&lt;h4 id=&#34;ifunctioncollectionifunction_collection&#34;&gt;&lt;a href=&#34;ifunction_collection&#34;&gt;IFunctionCollection&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Implements a list of functions.&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;classes&#34;&gt;Classes&lt;/h3&gt;
&lt;h4 id=&#34;defaultfunctioncollectiondefault_function_collection&#34;&gt;&lt;a href=&#34;default_function_collection&#34;&gt;DefaultFunctionCollection&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Implements a list filled with standard functions.&lt;/p&gt;
&lt;h4 id=&#34;delegatedfunctiondelegated_function&#34;&gt;&lt;a href=&#34;delegated_function&#34;&gt;DelegatedFunction&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Defines a delegate to implement a function.&lt;/p&gt;
&lt;h4 id=&#34;functioncollectionfunction_collection&#34;&gt;&lt;a href=&#34;function_collection&#34;&gt;FunctionCollection&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Implements a list of functions.&lt;/p&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Node: Parsers</title>
      <link>/node/expressions/calculator/parser/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/node/expressions/calculator/parser/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;div class=&#34;module-body&#34;&gt; 
&lt;h3 id=&#34;constants&#34;&gt;Constants&lt;/h3&gt;
&lt;h4 id=&#34;expressiontokentypeexpression_token_type&#34;&gt;&lt;a href=&#34;expression_token_type&#34;&gt;ExpressionTokenType&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Defines types of expression tokens.&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;classes&#34;&gt;Classes&lt;/h3&gt;
&lt;h4 id=&#34;expressionparserexpression_parser&#34;&gt;&lt;a href=&#34;expression_parser&#34;&gt;ExpressionParser&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Implements an expression parser class.&lt;/p&gt;
&lt;h4 id=&#34;expressiontokenexpression_token&#34;&gt;&lt;a href=&#34;expression_token&#34;&gt;ExpressionToken&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Defines an expression token holder&lt;/p&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Node: Tokenizers</title>
      <link>/node/expressions/calculator/tokenizers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/node/expressions/calculator/tokenizers/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;div class=&#34;module-body&#34;&gt; 
&lt;h3 id=&#34;classes&#34;&gt;Classes&lt;/h3&gt;
&lt;h4 id=&#34;expressionnumberstateexpression_number_state&#34;&gt;&lt;a href=&#34;expression_number_state&#34;&gt;ExpressionNumberState&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Implements an expression-specific number state object.&lt;/p&gt;
&lt;h4 id=&#34;expressionquotestateexpression_quote_state&#34;&gt;&lt;a href=&#34;expression_quote_state&#34;&gt;ExpressionQuoteState&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Implements an expression-specific quote string state object&lt;/p&gt;
&lt;h4 id=&#34;expressionsymbolstateexpression_symbol_state&#34;&gt;&lt;a href=&#34;expression_symbol_state&#34;&gt;ExpressionSymbolState&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Implements a symbol state object.&lt;/p&gt;
&lt;h4 id=&#34;expressiontokenizerexpression_tokenizer&#34;&gt;&lt;a href=&#34;expression_tokenizer&#34;&gt;ExpressionTokenizer&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Implements a tokenizer to perform lexical analysis for expressions.&lt;/p&gt;
&lt;h4 id=&#34;expressionwordstateexpression_word_state&#34;&gt;&lt;a href=&#34;expression_word_state&#34;&gt;ExpressionWordState&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Implements a symbol state object.&lt;/p&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Node: Variables</title>
      <link>/node/expressions/calculator/variables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/node/expressions/calculator/variables/</guid>
      <description>
        
        
        &lt;hr&gt;
&lt;div class=&#34;module-body&#34;&gt; 
&lt;h3 id=&#34;interfaces&#34;&gt;Interfaces&lt;/h3&gt;
&lt;h4 id=&#34;ivariableivariable&#34;&gt;&lt;a href=&#34;ivariable&#34;&gt;IVariable&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The IVariable interface allows you to define a variable.&lt;/p&gt;
&lt;h4 id=&#34;ivariablecollectionivariable_collection&#34;&gt;&lt;a href=&#34;ivariable_collection&#34;&gt;IVariableCollection&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;The IVariableCollection interface defines a list of variables.&lt;/p&gt;
&lt;br&gt;
&lt;h3 id=&#34;classes&#34;&gt;Classes&lt;/h3&gt;
&lt;h4 id=&#34;variablevariable&#34;&gt;&lt;a href=&#34;variable&#34;&gt;Variable&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Implements a variable holder object.&lt;/p&gt;
&lt;h4 id=&#34;variablecollectionvariable_collection&#34;&gt;&lt;a href=&#34;variable_collection&#34;&gt;VariableCollection&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Implements a list of variables.&lt;/p&gt;
&lt;/div&gt;

      </description>
    </item>
    
    <item>
      <title>Node: CalculationStack</title>
      <link>/node/expressions/calculator/calculation_stack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/node/expressions/calculator/calculation_stack/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The CalculationStack class allows you to implement a stack of Variant values.&lt;/p&gt;
&lt;h3 id=&#34;properties&#34;&gt;Properties&lt;/h3&gt;
&lt;h4 id=&#34;length&#34;&gt;length&lt;/h4&gt;
&lt;p&gt;Length&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; length(): number&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: number - length&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;pop&#34;&gt;pop&lt;/h4&gt;
&lt;p&gt;Removes and returns the last value from the list.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; pop(): &lt;a href=&#34;../../variants/variant&#34;&gt;Variant&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;peekat&#34;&gt;peekAt&lt;/h4&gt;
&lt;p&gt;Peeks a Variant value located at a specified index.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; peekAt(index: number): &lt;a href=&#34;../../variants/variant&#34;&gt;Variant&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;peek&#34;&gt;peek&lt;/h4&gt;
&lt;p&gt;Peeks a Variant value.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; peek(): &lt;a href=&#34;../../variants/variant&#34;&gt;Variant&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Node: ExpressionCalculator</title>
      <link>/node/expressions/calculator/expression_calculator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/node/expressions/calculator/expression_calculator/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ExpressionCalculator class allows you to create an expression calculator.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Constructs this class and a assigns expression string.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; constructor(expression?: string)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;expression&lt;/strong&gt;: string - expression string.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;properties&#34;&gt;Properties&lt;/h3&gt;
&lt;h4 id=&#34;autovariables&#34;&gt;autoVariables&lt;/h4&gt;
&lt;p&gt;Gets the flag to turn on auto-creation of variables for a specified expression.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; autoVariables(): boolean&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: boolean - returns the flag to turn on auto-creation.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sets the flag to turn on auto-creation of variables for specified expression.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; autoVariables(value: boolean)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: boolean - flag to turn on auto-creation.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;defaultfunctions&#34;&gt;defaultFunctions&lt;/h4&gt;
&lt;p&gt;List with default functions.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; defaultFunctions(): &lt;a href=&#34;../functions/ifunction_collection&#34;&gt;IFunctionCollection&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../functions/ifunction_collection&#34;&gt;IFunctionCollection&lt;/a&gt; - list with default functions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;defaultvariables&#34;&gt;defaultVariables&lt;/h4&gt;
&lt;p&gt;List with default variables.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; defaultVariables(): &lt;a href=&#34;../variables/ivariable_collection&#34;&gt;IVariableCollection&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../variables/ivariable_collection&#34;&gt;IVariableCollection&lt;/a&gt; - list with default variables.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;expression&#34;&gt;expression&lt;/h4&gt;
&lt;p&gt;Expression string.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; expression(): string&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: string - expression string.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; expression(value: string)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: string - expression string.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;initialtokens&#34;&gt;initialTokens&lt;/h4&gt;
&lt;p&gt;List of original expression tokens.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; initialTokens(): &lt;a href=&#34;../parsers/expression_token&#34;&gt;ExpressionToken[]&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../parsers/expression_token&#34;&gt;ExpressionToken[]&lt;/a&gt; - list of original expression tokens.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;originaltokens&#34;&gt;originalTokens&lt;/h4&gt;
&lt;p&gt;List of expression tokens.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; originalTokens(): &lt;a href=&#34;../../tokenizers/token&#34;&gt;Token[]&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../../tokenizers/token&#34;&gt;Token[]&lt;/a&gt; - list of expression tokens.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; originalTokens(value: Token[])&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: &lt;a href=&#34;../../tokenizers/token&#34;&gt;Token[]&lt;/a&gt; - list of expression tokens.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;resulttokens&#34;&gt;resultTokens&lt;/h4&gt;
&lt;p&gt;List of processed expression tokens.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; resultTokens(): &lt;a href=&#34;../parsers/expression_token&#34;&gt;ExpressionToken[]&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../parsers/expression_token&#34;&gt;ExpressionToken[]&lt;/a&gt; - list of processed expression tokens.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;variantoperations&#34;&gt;variantOperations&lt;/h4&gt;
&lt;p&gt;Gets the manager for operations on variant values.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; variantOperations(): &lt;a href=&#34;../../variants/ivariant_operations&#34;&gt;IVariantOperations&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../../variants/ivariant_operations&#34;&gt;IVariantOperations&lt;/a&gt; - manager for operations.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sets the manager for operations on variant values.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; variantOperations(value: &lt;a href=&#34;../../variants/ivariant_operations&#34;&gt;IVariantOperations&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: &lt;a href=&#34;../../variants/ivariant_operations&#34;&gt;IVariantOperations&lt;/a&gt; - manager for operations.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;clear&#34;&gt;clear&lt;/h4&gt;
&lt;p&gt;Cleans up this calculator from all data.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; clear(): void&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;createvariables&#34;&gt;createVariables&lt;/h4&gt;
&lt;p&gt;Cleans up this calculator from all data.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; createVariables(variables: &lt;a href=&#34;../../variants/ivariant_operations&#34;&gt;IVariantOperations&lt;/a&gt;): void&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;variables&lt;/strong&gt;: &lt;a href=&#34;../../variants/ivariant_operations&#34;&gt;IVariantOperations&lt;/a&gt; - list of variables to be populated.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;evaluate&#34;&gt;evaluate&lt;/h4&gt;
&lt;p&gt;Evaluates this expression using default variables and functions.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; evaluate(): Promise&amp;lt;&lt;a href=&#34;../../variants/variant&#34;&gt;Variant&lt;/a&gt;&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Promise&amp;lt;&lt;a href=&#34;../../variants/variant&#34;&gt;Variant&lt;/a&gt;&amp;gt; - evaluation result.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;evaluatewithvariables&#34;&gt;evaluateWithVariables&lt;/h4&gt;
&lt;p&gt;Evaluates this expression using specified variables.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; evaluateWithVariables(variables: &lt;a href=&#34;../../variants/ivariant_operations&#34;&gt;IVariantOperations&lt;/a&gt;): Promise&amp;lt;&lt;a href=&#34;../../variants/variant&#34;&gt;Variant&lt;/a&gt;&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;variables&lt;/strong&gt;: &lt;a href=&#34;../../variants/ivariant_operations&#34;&gt;IVariantOperations&lt;/a&gt; - list of variables.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Promise&amp;lt;&lt;a href=&#34;../../variants/variant&#34;&gt;Variant&lt;/a&gt;&amp;gt; - evaluation result.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;evaluatewithvariablesandfunctions&#34;&gt;evaluateWithVariablesAndFunctions&lt;/h4&gt;
&lt;p&gt;Evaluates this expression using specified variables and functions.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; evaluateWithVariablesAndFunctions(variables: &lt;a href=&#34;../../variants/ivariant_operations&#34;&gt;IVariantOperations&lt;/a&gt;, functions: &lt;a href=&#34;../functions/ifunction_collection&#34;&gt;IFunctionCollection&lt;/a&gt;): Promise&amp;lt;&lt;a href=&#34;../../variants/variant&#34;&gt;Variant&lt;/a&gt;&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;variables&lt;/strong&gt;: &lt;a href=&#34;../../variants/ivariant_operations&#34;&gt;IVariantOperations&lt;/a&gt; - list of variables.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;functions&lt;/strong&gt;: &lt;a href=&#34;../functions/ifunction_collection&#34;&gt;IFunctionCollection&lt;/a&gt; - list of functions&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Promise&amp;lt;&lt;a href=&#34;../../variants/variant&#34;&gt;Variant&lt;/a&gt;&amp;gt; - evaluation result.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Node: ExpressionException</title>
      <link>/node/expressions/calculator/expression_exception/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/node/expressions/calculator/expression_exception/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Extends&lt;/strong&gt;: &lt;a href=&#34;../../../commons/errors/bad_request_exception&#34;&gt;BadRequestException&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;TODO: add description&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;TODO: add description&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; constructor(correlationId: string, code: string, message: string, line: number = 0, column: number = 0)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: string - TODO: add description&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;code&lt;/strong&gt;: string - TODO: add description&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: string - TODO: add description&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;line&lt;/strong&gt;: number - TODO: add description&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;column&lt;/strong&gt;: number - TODO: add description&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Node: SyntaxErrorCode</title>
      <link>/node/expressions/calculator/syntax_error_code/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/node/expressions/calculator/syntax_error_code/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Extends&lt;/strong&gt;: &lt;a href=&#34;../../../commons/errors/bad_request_exception&#34;&gt;BadRequestException&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The SyntaxErrorCode class defines general syntax errors.&lt;/p&gt;
&lt;h3 id=&#34;fields&#34;&gt;Fields&lt;/h3&gt;
&lt;span class=&#34;hide-title-link&#34;&gt;
&lt;h4 id=&#34;errornear&#34;&gt;ErrorNear&lt;/h4&gt;
&lt;p&gt;Error near.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; &lt;strong&gt;ErrorNear&lt;/strong&gt;: string = &amp;ldquo;ERROR_NEAR&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;internal&#34;&gt;Internal&lt;/h4&gt;
&lt;p&gt;Internal error.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; &lt;strong&gt;Internal&lt;/strong&gt;: string = &amp;ldquo;INTERNAL&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;missedcloseparenthesis&#34;&gt;MissedCloseParenthesis&lt;/h4&gt;
&lt;p&gt;Missed close parenthesis.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; &lt;strong&gt;MissedCloseParenthesis&lt;/strong&gt;: string = &amp;ldquo;MISSED_CLOSE_PARENTHESIS&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;missedclosesquarebracket&#34;&gt;MissedCloseSquareBracket&lt;/h4&gt;
&lt;p&gt;Missed close square bracket.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; &lt;strong&gt;MissedCloseSquareBracket&lt;/strong&gt;: string = &amp;ldquo;MISSED_CLOSE_SQUARE_BRACKET&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;unexpectedend&#34;&gt;UnexpectedEnd&lt;/h4&gt;
&lt;p&gt;Unexpected end.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; &lt;strong&gt;UnexpectedEnd&lt;/strong&gt;: string = &amp;ldquo;UNEXPECTED_END&amp;rdquo;;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;unknown&#34;&gt;Unknown&lt;/h4&gt;
&lt;p&gt;Unknown&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; &lt;strong&gt;Unknown&lt;/strong&gt;: string = &amp;ldquo;UNKNOWN&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;unknownsymbol&#34;&gt;UnknownSymbol&lt;/h4&gt;
&lt;p&gt;Unknown symbol&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; &lt;strong&gt;UnknownSymbol&lt;/strong&gt;: string = &amp;ldquo;UNKNOWN_SYMBOL&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/span&gt;

      </description>
    </item>
    
    <item>
      <title>Node: SyntaxException</title>
      <link>/node/expressions/calculator/syntax_exception/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/node/expressions/calculator/syntax_exception/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Extends&lt;/strong&gt;: &lt;a href=&#34;../../../commons/errors/bad_request_exception&#34;&gt;BadRequestException&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The SyntaxException class defines the exceptions that can be thrown by the &lt;a href=&#34;../parser/expression_parser&#34;&gt;ExpressionParser&lt;/a&gt; class&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new instance of the SyntaxException class.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; constructor(correlationId: string, code: string, message: string, line: number, column: number)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: string - transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;code&lt;/strong&gt;: string - code&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: string - human-readable error message.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;line&lt;/strong&gt;: number - line number&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;column&lt;/strong&gt;: number - column number&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
