<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> â€“ Variables</title>
    <link>/node/expressions/calculator/variables/</link>
    <description>Recent content in Variables on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="/node/expressions/calculator/variables/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Node: IVariable</title>
      <link>/node/expressions/calculator/variables/ivariable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/node/expressions/calculator/variables/ivariable/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Extends&lt;/strong&gt;: &lt;a href=&#34;../../../tokenizers/generic/generic_number_state&#34;&gt;GenericNumberState&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The IVariable interface allows you to define a variable.&lt;/p&gt;
&lt;h3 id=&#34;fields&#34;&gt;Fields&lt;/h3&gt;
&lt;span class=&#34;hide-title-link&#34;&gt;
&lt;h4 id=&#34;name&#34;&gt;name&lt;/h4&gt;
&lt;p&gt;The variable name.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;name&lt;/strong&gt;: string&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;value&#34;&gt;value&lt;/h4&gt;
&lt;p&gt;The variable value.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;value&lt;/strong&gt;: &lt;a href=&#34;../../../variants/variant&#34;&gt;Variant&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/span&gt;

      </description>
    </item>
    
    <item>
      <title>Node: IVariableCollection</title>
      <link>/node/expressions/calculator/variables/ivariable_collection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/node/expressions/calculator/variables/ivariable_collection/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements&lt;/strong&gt;: &lt;a href=&#34;../ivariableCollection&#34;&gt;IVariableCollection&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The IVariableCollection interface defines a list of variables.&lt;/p&gt;
&lt;h3 id=&#34;properties&#34;&gt;Properties&lt;/h3&gt;
&lt;h4 id=&#34;length&#34;&gt;length&lt;/h4&gt;
&lt;p&gt;Gets a number of variables stored in the collection.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;length(): number&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: number - number of stored variables.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;add&#34;&gt;add&lt;/h4&gt;
&lt;p&gt;Adds a new variable to the collection.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;add(variable: &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt;): void&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;variable&lt;/strong&gt;: &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt; - variable to be added.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;clear&#34;&gt;clear&lt;/h4&gt;
&lt;p&gt;Clears the collection.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;clear(): void&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;clearvalues&#34;&gt;clearValues&lt;/h4&gt;
&lt;p&gt;Clears all stored variables (assigns null values).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;clearValues(): void&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;findbyname&#34;&gt;findByName&lt;/h4&gt;
&lt;p&gt;Clears all stored variables (assigns null values).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;findByName(name: string): &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;findindexbyname&#34;&gt;findIndexByName&lt;/h4&gt;
&lt;p&gt;&amp;lsquo;sFinds a variable index in the list by the variable&amp;rsquo;s name.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;findIndexByName(name: string): number&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: string - variable name to be found.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: number - variable index in the list or &lt;em&gt;-1&lt;/em&gt; if variable was not found.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;get&#34;&gt;get&lt;/h4&gt;
&lt;p&gt;Gets a variable by its index.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;get(index: number): &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;index&lt;/strong&gt;: string - variable index.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt; - retrieved variable.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;getall&#34;&gt;getAll&lt;/h4&gt;
&lt;p&gt;Gets all the variables stored in the collection.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;getAll(): &lt;a href=&#34;../ivariable&#34;&gt;IVariable[]&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../ivariable&#34;&gt;IVariable[]&lt;/a&gt; - list with stored variables.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;locate&#34;&gt;locate&lt;/h4&gt;
&lt;p&gt;Finds a variable in the list or creates a new one if the variable was not found.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;locate(name: string): &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: string - name of the variable to be found.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt; - found or created variable.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;remove&#34;&gt;remove&lt;/h4&gt;
&lt;p&gt;Removes a variable by its index.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;remove(index: number): void&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;index&lt;/strong&gt;: number - index of the variable to be removed.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;removebyname&#34;&gt;removeByName&lt;/h4&gt;
&lt;p&gt;Removes a variable by it&amp;rsquo;s name.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;removeByName(name: string): void&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: string - name of the variable to be removed.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Node: Variable</title>
      <link>/node/expressions/calculator/variables/variable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/node/expressions/calculator/variables/variable/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements&lt;/strong&gt;: &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The Variable class allows you to implement a variable holder object.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; constructor(name: string, value?: &lt;a href=&#34;../../../variants/variant&#34;&gt;Variant&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: string - name of this variable.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: &lt;a href=&#34;../../../variants/variant&#34;&gt;Variant&lt;/a&gt; - variable&amp;rsquo;s value.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;properties&#34;&gt;Properties&lt;/h3&gt;
&lt;h4 id=&#34;name&#34;&gt;name&lt;/h4&gt;
&lt;p&gt;Variable&amp;rsquo;s name.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; name(): string&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: string - variable name.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;value&#34;&gt;value&lt;/h4&gt;
&lt;p&gt;Gets the variable value.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; value(): &lt;a href=&#34;../../../variants/variant&#34;&gt;Variant&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../../../variants/variant&#34;&gt;Variant&lt;/a&gt; - variable value.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Sets the variable value.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; value(value: &lt;a href=&#34;../../../variants/variant&#34;&gt;Variant&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: &lt;a href=&#34;../../../variants/variant&#34;&gt;Variant&lt;/a&gt; - variable&amp;rsquo;s value.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Node: VariableCollection</title>
      <link>/node/expressions/calculator/variables/variable_collection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/node/expressions/calculator/variables/variable_collection/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Implements&lt;/strong&gt;: &lt;a href=&#34;../ivariableCollection&#34;&gt;IVariableCollection&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The VariableCollection allows you to implement a list of variables.&lt;/p&gt;
&lt;h3 id=&#34;properties&#34;&gt;Properties&lt;/h3&gt;
&lt;h4 id=&#34;length&#34;&gt;length&lt;/h4&gt;
&lt;p&gt;Gets a number of variables stored in the collection.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; length(): number&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: number - number of stored variables.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;add&#34;&gt;add&lt;/h4&gt;
&lt;p&gt;Adds a new variable to the collection.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; add(variable: &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt;): void&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;variable&lt;/strong&gt;: &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt; - variable to be added.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;clear&#34;&gt;clear&lt;/h4&gt;
&lt;p&gt;Clears the collection.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; clear(): void&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;clearvalues&#34;&gt;clearValues&lt;/h4&gt;
&lt;p&gt;Clears all stored variables (assigns null values).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; clearValues(): void&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;findbyname&#34;&gt;findByName&lt;/h4&gt;
&lt;p&gt;Clears all stored variables (assigns null values).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; findByName(name: string): &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;findindexbyname&#34;&gt;findIndexByName&lt;/h4&gt;
&lt;p&gt;Finds variable index in the list by it&amp;rsquo;s name.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; findIndexByName(name: string): number&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: string - The variable name to be found.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: number - Variable index in the list or &lt;em&gt;-1&lt;/em&gt; if variable was not found.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;get&#34;&gt;get&lt;/h4&gt;
&lt;p&gt;Get a variable by its index.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; get(index: number): &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;index&lt;/strong&gt;: string - variable index.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt; - retrieved variable.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;getall&#34;&gt;getAll&lt;/h4&gt;
&lt;p&gt;Get all variables stored in the collection&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; getAll(): &lt;a href=&#34;../ivariable&#34;&gt;IVariable[]&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../ivariable&#34;&gt;IVariable[]&lt;/a&gt; - list with variables.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;locate&#34;&gt;locate&lt;/h4&gt;
&lt;p&gt;Finds a variable in the list or creates a new one if the variable was not found.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; locate(name: string): &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: string - name of the variable to be found.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../ivariable&#34;&gt;IVariable&lt;/a&gt; - found or created variable.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;remove&#34;&gt;remove&lt;/h4&gt;
&lt;p&gt;Removes a variable by its index.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; remove(index: number): void&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;index&lt;/strong&gt;: number - index of the variable to be removed.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;removebyname&#34;&gt;removeByName&lt;/h4&gt;
&lt;p&gt;Removes a variable by it&amp;rsquo;s name.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; removeByName(name: string): void&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: string - variable name to be removed.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
