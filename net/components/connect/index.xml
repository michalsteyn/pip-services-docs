<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> â€“ Connect</title>
    <link>/net/components/connect/</link>
    <description>Recent content in Connect on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="/net/components/connect/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Net: CompositeConnectionResolver</title>
      <link>/net/components/connect/composite_connection_resolver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/components/connect/composite_connection_resolver/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Inherits&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/iconfigurable&#34;&gt;IConfigurable&lt;/a&gt;, &lt;a href=&#34;../../../commons/refer/ireferenceable&#34;&gt;IReferenceable&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The CompositeConnectionResolver class allows you to resolve connection and credential parameters, validate them and generate connection options.&lt;/p&gt;
&lt;h4 id=&#34;configuration-parameters&#34;&gt;Configuration parameters&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;connection(s)&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;discovery_key&lt;/strong&gt;: (optional) key to retrieve the connection from &lt;a href=&#34;../idiscovery&#34;&gt;IDiscovery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;protocol&lt;/strong&gt;: communication protocol&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;host&lt;/strong&gt;: host name or IP address&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;port&lt;/strong&gt;: port number&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;uri&lt;/strong&gt;: resource URI or connection string with all parameters in it&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;credential(s)&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;store_key&lt;/strong&gt;: (optional) key to retrieve the credentials from &lt;a href=&#34;../../auth/icredential_store&#34;&gt;ICredentialStore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;username&lt;/strong&gt;: username&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;password&lt;/strong&gt;: user&amp;rsquo;s password&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;references&#34;&gt;References&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;*:discovery:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../idiscovery&#34;&gt;IDiscovery&lt;/a&gt; services to resolve connections&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*:credential-store:*:*:1.0&lt;/strong&gt; - (optional) Credential stores to resolve credentials &lt;a href=&#34;../../auth/icredential_store&#34;&gt;ICredentialStore&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;fields&#34;&gt;Fields&lt;/h3&gt;
&lt;span class=&#34;hide-title-link&#34;&gt;
&lt;h4 id=&#34;_options&#34;&gt;_options&lt;/h4&gt;
&lt;p&gt;Connection options&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;protected&lt;/code&gt; &lt;strong&gt;_options&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;_connectionresolver&#34;&gt;_connectionResolver&lt;/h4&gt;
&lt;p&gt;Connections resolver.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;protected&lt;/code&gt; &lt;strong&gt;_connectionResolver&lt;/strong&gt;: &lt;a href=&#34;../connection_resolver&#34;&gt;ConnectionResolver&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;_credentialresolver&#34;&gt;_credentialResolver&lt;/h4&gt;
&lt;p&gt;Credentials resolver.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;protected&lt;/code&gt; &lt;strong&gt;_credentialResolver&lt;/strong&gt;: &lt;a href=&#34;../../auth/credential_resolver&#34;&gt;CredentialResolver&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;_clustersupported&#34;&gt;_clusterSupported&lt;/h4&gt;
&lt;p&gt;Cluster support (multiple connections)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;protected&lt;/code&gt; &lt;strong&gt;_clusterSupported&lt;/strong&gt;: bool&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;_defaultprotocol&#34;&gt;_defaultProtocol&lt;/h4&gt;
&lt;p&gt;Default protocol&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;protected&lt;/code&gt; &lt;strong&gt;_defaultProtocol&lt;/strong&gt;: string&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;_defaultport&#34;&gt;_defaultPort&lt;/h4&gt;
&lt;p&gt;Default port&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;protected&lt;/code&gt; &lt;strong&gt;_defaultPort&lt;/strong&gt;: int&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;_supported_protocols&#34;&gt;_supported_protocols&lt;/h4&gt;
&lt;p&gt;List of supported protocols&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;protected&lt;/code&gt; &lt;strong&gt;_supportedProtocols&lt;/strong&gt;: IList&amp;lt;string&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/span&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;compose&#34;&gt;Compose&lt;/h4&gt;
&lt;p&gt;Composes composite connection options from connection and credential parameters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; Compose(string correlationId, IList&amp;lt;&lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt;&amp;gt; connections, &lt;a href=&#34;../../auth/credential_params&#34;&gt;CredentialParams&lt;/a&gt; credential, &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; parameters)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: string - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;connections&lt;/strong&gt;: IList&amp;lt;&lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt;&amp;gt; - connection parameters&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;credential&lt;/strong&gt;: &lt;a href=&#34;../../auth/credential_params&#34;&gt;CredentialParams&lt;/a&gt; - credential parameters&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;parameters&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - optional parameters&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - resolved options or error.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;composeoptions&#34;&gt;ComposeOptions&lt;/h4&gt;
&lt;p&gt;Composite of several merger options&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;protected&lt;/code&gt; &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; ComposeOptions(IList&amp;lt;&lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt;&amp;gt; connections, &lt;a href=&#34;../../auth/credential_params&#34;&gt;CredentialParams&lt;/a&gt; credential, &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; parameters)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;connections&lt;/strong&gt;: &lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt;[] - connection parameters&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;credential&lt;/strong&gt;: &lt;a href=&#34;../../auth/credential_params&#34;&gt;CredentialParams&lt;/a&gt; - credential parameters&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;parameters&lt;/strong&gt;: IList&amp;lt;&lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt;&amp;gt; - optional parameters&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - resolved options or error&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;configure&#34;&gt;Configure&lt;/h4&gt;
&lt;p&gt;Configures component by passing configuration parameters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; void Configure(&lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; config)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;config&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - configuration parameters to be set.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;finalizeoptions&#34;&gt;FinalizeOptions&lt;/h4&gt;
&lt;p&gt;Finalize merged options.
This method can be overriden in child classes.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;protected&lt;/code&gt; &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; FinalizeOptions(&lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; options)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;options&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - options: connection options&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - finalized connection options&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;mergeconnection&#34;&gt;MergeConnection&lt;/h4&gt;
&lt;p&gt;Merges connection options with connection parameters.
This method can be overriden in child classes.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;protected&lt;/code&gt; &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; MergeConnection(&lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; options, &lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt; connection)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;options&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - connection options&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;connection&lt;/strong&gt;: &lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt; - connection parameters to be merged&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - merged connection options.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;mergecredential&#34;&gt;MergeCredential&lt;/h4&gt;
&lt;p&gt;Merges connection options with credential parameters.
This method can be overriden in child classes.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;protected&lt;/code&gt; &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; MergeCredential(&lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; options, &lt;a href=&#34;../../auth/credential_params&#34;&gt;CredentialParams&lt;/a&gt; credential)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;options&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - connection options&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;credential&lt;/strong&gt;: &lt;a href=&#34;../../auth/credential_params&#34;&gt;CredentialParams&lt;/a&gt; - credential parameters to be merged&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - merged connection options.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;mergeoptional&#34;&gt;MergeOptional&lt;/h4&gt;
&lt;p&gt;Merges connection options with optional parameters.
This method can be overriden in child classes.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;protected&lt;/code&gt; &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; MergeOptional(&lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; options, &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; parameters)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;options&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - connection options&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;parameters&lt;/strong&gt;: &lt;a href=&#34;../../auth/credential_params&#34;&gt;CredentialParams&lt;/a&gt; - optional parameters to be merged&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - merged connection options.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;resolveasync&#34;&gt;ResolveAsync&lt;/h4&gt;
&lt;p&gt;Resolves connection options from connection and credential parameters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; Task&amp;lt;&lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt;&amp;gt; ResolveAsync(string correlationId):&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: string - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Task&amp;lt;&lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt;&amp;gt; - resolved options or error&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;setreferences&#34;&gt;SetReferences&lt;/h4&gt;
&lt;p&gt;Sets references to dependent components.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; void SetReferences(references: &lt;a href=&#34;../../../commons/refer/ireferences&#34;&gt;IReferences&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;references&lt;/strong&gt;: &lt;a href=&#34;../../../commons/refer/ireferences&#34;&gt;IReferences&lt;/a&gt; - references to locate the component dependencies.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;validateconnection&#34;&gt;ValidateConnection&lt;/h4&gt;
&lt;p&gt;Validates connection parameters.
Throws error if validation failed.
This method can be overriden in child classes.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;protected&lt;/code&gt; void ValidateConnection(string correlationId, &lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt;) connection)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: string - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;connection&lt;/strong&gt;: &lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt; - connection parameters to be validated&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;validatecredential&#34;&gt;ValidateCredential&lt;/h4&gt;
&lt;p&gt;Validates credential parameters.
This method can be overriden in child classes.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;protected&lt;/code&gt; void ValidateCredential(string correlationId, &lt;a href=&#34;../../auth/credential_params&#34;&gt;CredentialParams&lt;/a&gt; credential)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: string - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;credential&lt;/strong&gt;: &lt;a href=&#34;../../auth/credential_params&#34;&gt;CredentialParams&lt;/a&gt; - credential parameters to be validated&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: ConnectionParams</title>
      <link>/net/components/connect/connection_params/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/components/connect/connection_params/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Inherits&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ConnectionParams class allows you to create connection parameters used to connect to external services.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Important points&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Usually, connection parameters are used together with credential parameters, but are stored
separately from these more protected and sensitive values.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;configuration-parameters&#34;&gt;Configuration parameters&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;discovery_key&lt;/strong&gt;: key to retrieve parameters from a discovery service&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;protocol&lt;/strong&gt;: connection protocol like http, https, tcp, udp&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;host&lt;/strong&gt;: host name or IP address&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;port&lt;/strong&gt;: port number&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;uri&lt;/strong&gt;: resource URI or connection string with all parameters in it&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition to standard parameters, ConnectionParams may contain any number of custom parameters.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new instance of this class and fills it with values.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; ConnectionParams(IDictionary&amp;lt;string, string&amp;gt; map)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;map&lt;/strong&gt;: IDictionary&amp;lt;string, string&amp;gt; - (optional) object to be converted into key-value pairs to initialize this connection.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Creates a new instance of this class and fills it with values.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; ConnectionParams(IDictionary&amp;lt;string, string&amp;gt; map)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;properties&#34;&gt;Properties&lt;/h3&gt;
&lt;h4 id=&#34;usediscovery&#34;&gt;UseDiscovery&lt;/h4&gt;
&lt;p&gt;Checks if these connection parameters shall be retrieved from DiscoveryService. The connection parameters are redirected to DiscoveryService when discovery_key parameter is set.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; bool UseDiscovery { get; }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;discoverykey&#34;&gt;DiscoveryKey&lt;/h4&gt;
&lt;p&gt;Gets or sets the key to retrieve this connection from DiscoveryService.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; string 	DiscoveryKey { get; set; }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;protocol&#34;&gt;Protocol&lt;/h4&gt;
&lt;p&gt;Gets or sets the connection protocol&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; string Protocol { get; set; }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;host&#34;&gt;Host&lt;/h4&gt;
&lt;p&gt;Gets or sets the service host name or IP address.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; string Host { get; set; }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;port&#34;&gt;Port&lt;/h4&gt;
&lt;p&gt;Gets or sets the service port number&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; int Port { get; set; }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;uri&#34;&gt;Uri&lt;/h4&gt;
&lt;p&gt;Gets the resource URI or connection string. Usually it includes all connection parameters in it.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; string Uri { get; set; }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;getport&#34;&gt;GetPort&lt;/h4&gt;
&lt;p&gt;Gets the port number.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; int GetPort()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: int - the port number.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;getportwithdefault&#34;&gt;GetPortWithDefault&lt;/h4&gt;
&lt;p&gt;Gets the port number with default value.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; int GetPortWithDefault(int defaultPort)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;defaultPort&lt;/strong&gt;: int - default port number.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: int - port number.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;getprotocol&#34;&gt;GetProtocol&lt;/h4&gt;
&lt;p&gt;Gets the connection protocol.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; string GetProtocol()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: string - connection protocol or default value if it&amp;rsquo;s not set.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;getprotocolwithdefault&#34;&gt;GetProtocolWithDefault&lt;/h4&gt;
&lt;p&gt;Gets the connection protocol with default value.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; string GetProtocolWithDefault(string defaultValue)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;defaultValue&lt;/strong&gt;: string - (optional) default protocol&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: string - connection protocol or the default value if it&amp;rsquo;s not set.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;fromconfig&#34;&gt;FromConfig&lt;/h4&gt;
&lt;p&gt;Retrieves a single ConnectionParams from configuration parameters
from the &amp;ldquo;connection&amp;rdquo; section. If the &amp;ldquo;connections&amp;rdquo; section is present instead,
then it returns only the first connection element.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; &lt;a href=&#34;&#34;&gt;ConnectionParams&lt;/a&gt; FromConfig(&lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; config, bool configAsDefault = True)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;config&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - ConnectionParams, containing a section named &amp;ldquo;connection(s)&amp;rdquo;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;configAsDefault&lt;/strong&gt;: bool - boolean parameter for default configuration. If &amp;ldquo;true&amp;rdquo; the default value will be added to the result.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;&#34;&gt;ConnectionParams&lt;/a&gt; - generated ConnectionParams object.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;fromstring&#34;&gt;FromString&lt;/h4&gt;
&lt;p&gt;Creates a new ConnectionParams object filled with key-value pairs serialized as a string.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public new static&lt;/code&gt; &lt;a href=&#34;&#34;&gt;ConnectionParams&lt;/a&gt; FromString(string line)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;line&lt;/strong&gt;: string - string with serialized key-value pairs as &lt;strong&gt;&amp;ldquo;key1=value1;key2=value2;&amp;hellip;&amp;quot;&lt;/strong&gt;
Example: &lt;strong&gt;&amp;ldquo;Key1=123;Key2=ABC;Key3=2016-09-16T00:00:00.00Z&amp;rdquo;&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;&#34;&gt;ConnectionParams&lt;/a&gt; - new ConnectionParams object.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;fromtuples&#34;&gt;FromTuples&lt;/h4&gt;
&lt;p&gt;Creates a new ConnectionParams object filled with provided key-value pairs called tuples.
Tuples parameters contain a sequence of key1, value1, key2, value2, &amp;hellip; pairs.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; &lt;a href=&#34;&#34;&gt;ConnectionParams&lt;/a&gt; FromTuples(params object[] tuples)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;tuples&lt;/strong&gt;: object[] - tuples to fill a new ConnectionParams object.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;&#34;&gt;ConnectionParams&lt;/a&gt; - new ConnectionParams object.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;manyfromconfig&#34;&gt;ManyFromConfig&lt;/h4&gt;
&lt;p&gt;Retrieves all ConnectionParams from configuration parameters
from the &amp;ldquo;connections&amp;rdquo; section. If the &amp;ldquo;connection&amp;rdquo; section is present instead,
then it returns a list with only one ConnectionParams.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; List&amp;lt;&lt;a href=&#34;&#34;&gt;ConnectionParams&lt;/a&gt;&amp;gt; ManyFromConfig(&lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; config, bool configAsDefault = true)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;config&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - configuration parameters to retrieve connections&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;returns&lt;/strong&gt;: List&amp;lt;&lt;a href=&#34;&#34;&gt;ConnectionParams&lt;/a&gt;&amp;gt; - list of retrieved ConnectionParams&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;//Example ConnectionParams object usage:
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;connection&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;ConnectionParams&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;FromTuples&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;
&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;protocol&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;http&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;host&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;10.1.1.100&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;port&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;8080&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;
&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;cluster&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;mycluster&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;host&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;connection&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Host&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;                             &lt;span style=&#34;color:#75715e&#34;&gt;// Result: &amp;#34;10.1.1.100&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;port&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;connection&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Port&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;;&lt;/span&gt;                             &lt;span style=&#34;color:#75715e&#34;&gt;// Result: 8080
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;cluster&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;connection&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;GetAsNullableString&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;cluster&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;// Result: &amp;#34;mycluster&amp;#34; 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;configparamscommonsconfigconfig_params&#34;&gt;&lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;credentialparamsauthcredential_params&#34;&gt;&lt;a href=&#34;../../auth/credential_params&#34;&gt;CredentialParams&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;connectionresolverconnection_resolver&#34;&gt;&lt;a href=&#34;../connection_resolver&#34;&gt;ConnectionResolver&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;idiscoveryidiscovery&#34;&gt;&lt;a href=&#34;../idiscovery&#34;&gt;IDiscovery&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: ConnectionResolver</title>
      <link>/net/components/connect/connection_resolver/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/components/connect/connection_resolver/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ConnectionResolver class is used to retrieve component connections.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Important points&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If the connections are configured to be retrieved from &lt;a href=&#34;../idiscovery&#34;&gt;IDiscovery&lt;/a&gt;, the connection resolver will automatically locate &lt;a href=&#34;../idiscovery&#34;&gt;IDiscovery&lt;/a&gt; in component references and retrieve the connections from there using the discovery_key parameter.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;configuration-parameters&#34;&gt;Configuration parameters&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;connection&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;discovery_key&lt;/strong&gt;: (optional) key to retrieve the connection from &lt;a href=&#34;../idiscovery&#34;&gt;IDiscovery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;hellip;&lt;/strong&gt; : other connection parameters&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;connections&lt;/strong&gt;:  alternative to connection&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;[connection params 1]&lt;/strong&gt;: first connection parameters
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&amp;hellip;&lt;/strong&gt; :  connection parameters for key 1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[connection params N]&lt;/strong&gt;: Nth connection parameters
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&amp;hellip;&lt;/strong&gt; : connection parameters for key N&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;references&#34;&gt;References&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;*:discovery:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../idiscovery&#34;&gt;IDiscovery&lt;/a&gt; services to resolve connections&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new instance of this class.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; ConnectionResolver(&lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; config = null, &lt;a href=&#34;../../../commons/refer/ireferences&#34;&gt;IReferences&lt;/a&gt; references = null)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;config&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - (optional) component&amp;rsquo;s configuration parameters&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;references&lt;/strong&gt;: &lt;a href=&#34;../../../commons/refer/ireferences&#34;&gt;IReferences&lt;/a&gt; - (optional) component&amp;rsquo;s references&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;add&#34;&gt;Add&lt;/h4&gt;
&lt;p&gt;Adds a new connection.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; void Add(&lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt; connection)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;connection&lt;/strong&gt;: &lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt; - new connection parameters to be added&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;configure&#34;&gt;Configure&lt;/h4&gt;
&lt;p&gt;Configures the component by passing its configuration parameters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; void Configure(config: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;config&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - configuration parameters to be set.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;getall&#34;&gt;GetAll&lt;/h4&gt;
&lt;p&gt;Gets all connections configured in component configuration.
Redirect to Discovery services is not done at this point.
If you need a fully fleshed connection, use &lt;strong&gt;Resolve&lt;/strong&gt; method instead.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; List&amp;lt;&lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt;&amp;gt; GetAll()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: List&amp;lt;&lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt;&amp;gt; - list with connection parameters&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;registerasync&#34;&gt;RegisterAsync&lt;/h4&gt;
&lt;p&gt;Registers the given connection in all referenced discovery services.
This method can be used for dynamic service discovery.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; Task&amp;lt;void&amp;gt; RegisterAsync(string correlationId, &lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt; connection)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: string - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;connection&lt;/strong&gt;: &lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt; - connection to register.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;resolveasync&#34;&gt;ResolveAsync&lt;/h4&gt;
&lt;p&gt;Resolves a single component connection. If connections are configured to be retrieved
from Discovery service, it finds a &lt;a href=&#34;../idiscovery&#34;&gt;IDiscovery&lt;/a&gt; and resolves the connection there.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; Task&amp;lt;&lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt;&amp;gt; ResolveAsync(string correlationId)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: string - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Task&amp;lt;&lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt;&amp;gt; - resolved connection parameters or null if nothing was found.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;resolveallasync&#34;&gt;ResolveAllAsync&lt;/h4&gt;
&lt;p&gt;Resolves all component connection. If connections are configured to be retrieved
from Discovery service, it finds a &lt;a href=&#34;../idiscovery&#34;&gt;IDiscovery&lt;/a&gt; and resolves the connection there.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; Task&amp;lt;List&amp;lt;&lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt;&amp;gt;&amp;gt; ResolveAllAsync(string correlationId)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: string - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Task&amp;lt;List&amp;lt;&lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt;&amp;gt;&amp;gt; - list of resolved connections.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;setreferences&#34;&gt;SetReferences&lt;/h4&gt;
&lt;p&gt;Sets references to dependent components.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; void SetReferences(&lt;a href=&#34;../../../commons/refer/ireferences&#34;&gt;IReferences&lt;/a&gt; references)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;references&lt;/strong&gt;: &lt;a href=&#34;../../../commons/refer/ireferences&#34;&gt;IReferences&lt;/a&gt; - references to locate the component&amp;rsquo;s dependencies.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;config&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;ConfigParams&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;FromTuples&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;connection.host&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;10.1.1.100&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;connection.port&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8080&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;connectionResolver&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;ConnectionResolver&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;connectionResolver&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Configure&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;config&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;connectionResolver&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;SetReferences&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;references&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;connectionResolver&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;ResolveAsync&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;123&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;idiscoveryidiscovery&#34;&gt;&lt;a href=&#34;../idiscovery&#34;&gt;IDiscovery&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;connectionparamsconnection_params&#34;&gt;&lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: ConnectionUtils</title>
      <link>/net/components/connect/connection_utils/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/components/connect/connection_utils/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ConnectionUtils class provides a set of utility functions used to process connection parameters.&lt;/p&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;composeuri&#34;&gt;ComposeUri&lt;/h4&gt;
&lt;p&gt;Composes URI from config parameters.
The result URI will be in the following form:
&lt;em&gt;protocol://username@password@host1:port1,host2:port2,&amp;hellip;?param1=abc&amp;amp;param2=xyz&amp;amp;&amp;hellip;&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; string ComposeUri(&lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; options, string defaultProtocol, int defaultPort)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;options&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - configuration parameters&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;defaultProtocol&lt;/strong&gt;: string - default protocol&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;defaultPort&lt;/strong&gt;: int - default port&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: string - composed URI&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;concat&#34;&gt;Concat&lt;/h4&gt;
&lt;p&gt;Concatenates two options by combining duplicated properties into a comma-separated list.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; Concat(&lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; options1, &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; options2, params string[] keys)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;options1&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - first options to merge&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;options2&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - second options to merge&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;keys&lt;/strong&gt;: string[] - when defined, it limits only to specific keys&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - new connection parameters to be added&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;exclude&#34;&gt;Exclude&lt;/h4&gt;
&lt;p&gt;Excludes specified keys from the config parameters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; Exclude(&lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; options, params string[] keys)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;options&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - configuration parameters to be processed.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;keys&lt;/strong&gt;: string[] - list of keys to be excluded.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - processed config parameters.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;include&#34;&gt;Include&lt;/h4&gt;
&lt;p&gt;Includes specified keys from the config parameters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; Include(&lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; options, params string[] keys)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;options&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - configuration parameters to be processed.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;keys&lt;/strong&gt;: string[] - list of keys to be included.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - processed config parameters.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;parseuri&#34;&gt;ParseUri&lt;/h4&gt;
&lt;p&gt;Parses an URI into config parameters.
The URI shall be in the following form:
&lt;code&gt;protocol://username@password@host1:port1,host2:port2,...?param1=abc&amp;amp;param2=xyz&amp;amp;...&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; ParseUri(string uri, string defaultProtocol, string defaultPort)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;uri&lt;/strong&gt;: string - URI to be parsed&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;defaultProtocol&lt;/strong&gt;: string - default protocol&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;defaultPort&lt;/strong&gt;: string - default port&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - configuration parameters with URI elements&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: DefaultDiscoveryFactory</title>
      <link>/net/components/connect/default_discovery_factory/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/components/connect/default_discovery_factory/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Inherits&lt;/strong&gt;: &lt;a href=&#34;../../build/factory&#34;&gt;Factory&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The DefaultDiscoveryFactory class allows you to create an instance of &lt;a href=&#34;../../build/factory&#34;&gt;Factory&lt;/a&gt; to create &lt;a href=&#34;../idiscovery&#34;&gt;IDiscovery&lt;/a&gt; components based on their descriptors.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Create a new instance of &lt;a href=&#34;../../build/factory&#34;&gt;Factory&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; DefaultDiscoveryFactory()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;factorybuildfactory&#34;&gt;&lt;a href=&#34;../../build/factory&#34;&gt;Factory&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;idiscoveryidiscovery&#34;&gt;&lt;a href=&#34;../idiscovery&#34;&gt;IDiscovery&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;memorydiscoverymemory_discovery&#34;&gt;&lt;a href=&#34;../memory_discovery&#34;&gt;MemoryDiscovery&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: IDiscovery</title>
      <link>/net/components/connect/idiscovery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/components/connect/idiscovery/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The IDiscovery interface is used to create discovery services which are used to store and resolve connection parameters to connect to external services.&lt;/p&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;registerasync&#34;&gt;RegisterAsync&lt;/h4&gt;
&lt;p&gt;Registers connection parameters into the discovery service.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Task&amp;lt;&lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt;&amp;gt; RegisterAsync(string correlationId, string key, &lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt; connection)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: string - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;key&lt;/strong&gt;: string - key to uniquely identify the connection parameters.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;connection&lt;/strong&gt;: &lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt; - connection to be registered.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Task&amp;lt;&lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt;&amp;gt; - registered connection parameters.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;resolveallasync&#34;&gt;ResolveAllAsync&lt;/h4&gt;
&lt;p&gt;Resolves all connection parameters by their key.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Task&amp;lt;List&amp;lt;&lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt;&amp;gt;&amp;gt; ResolveAllAsync(string correlationId, string key)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: string - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;key&lt;/strong&gt;: string - key to uniquely identify the connections.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Task&amp;lt;List&amp;lt;&lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt;&amp;gt;&amp;gt; - list with resolved connections.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;resolveoneasync&#34;&gt;ResolveOneAsync&lt;/h4&gt;
&lt;p&gt;Resolves a single connection parameters by its key.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Task&amp;lt;&lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt;&amp;gt; ResolveOneAsync(string correlationId, string key)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: string - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;key&lt;/strong&gt;: string - key to uniquely identify the connection.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Task&amp;lt;&lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt;&amp;gt; - resolved connection.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: MemoryDiscovery</title>
      <link>/net/components/connect/memory_discovery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/components/connect/memory_discovery/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Inherits&lt;/strong&gt;: &lt;a href=&#34;../idiscovery&#34;&gt;IDiscovery&lt;/a&gt;, &lt;a href=&#34;../../../commons/config/ireconfigurable&#34;&gt;IReconfigurable&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The MemoryDiscovery class allows you to create discovery services that keep connections in memory.&lt;/p&gt;
&lt;h4 id=&#34;configuration-parameters&#34;&gt;Configuration parameters&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;[connection key 1]&lt;/strong&gt;:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;hellip;&lt;/strong&gt; : connection parameters for key 1&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;[connection key 2]&lt;/strong&gt;:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;hellip;&lt;/strong&gt; : connection parameters for key N&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new instance of this class.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; MemoryDiscovery(&lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; config = null)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;config&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - (optional) configuration with connection parameters.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Creates a new instance of this class.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; MemoryDiscovery()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;configure&#34;&gt;Configure&lt;/h4&gt;
&lt;p&gt;Configures a component by passing its configuration parameters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public virtual&lt;/code&gt; void Configure(&lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; config)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;config&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - configuration parameters to be set.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;readconnections&#34;&gt;ReadConnections&lt;/h4&gt;
&lt;p&gt;Reads connections from configuration parameters.
Each section represents an individual Connection params.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;private&lt;/code&gt; void ReadConnections(&lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; connections)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;connections&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - configuration parameters to be read&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;registerasync&#34;&gt;RegisterAsync&lt;/h4&gt;
&lt;p&gt;Registers connection parameters into the discovery service.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; Task&amp;lt;void&amp;gt; RegisterAsync(string correlationId, string key, &lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt; connection)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: string - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;key&lt;/strong&gt;: string - key to uniquely identify the connection parameters.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;connection&lt;/strong&gt;: &lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt; - connection to be registered.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;resolveallasync&#34;&gt;ResolveAllAsync&lt;/h4&gt;
&lt;p&gt;Resolves all connection parameters by their key.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; Task&amp;lt;List&amp;lt;&lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt;&amp;gt;&amp;gt; ResolveAllAsync(string correlationId, string key)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: string - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;key&lt;/strong&gt;: string - key to uniquely identify the connections.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Task&amp;lt;List&amp;lt;&lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt;&amp;gt;&amp;gt; - list with resolved connections.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;resolveoneasync&#34;&gt;ResolveOneAsync&lt;/h4&gt;
&lt;p&gt;Resolves a single connection parameters by its key.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; Task&amp;lt;&lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt;&amp;gt; ResolveOneAsync(string correlationId, string key)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: string - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;key&lt;/strong&gt;: string - key to uniquely identify the connection.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Task&amp;lt;&lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt;&amp;gt; - resolved connection.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#111&#34;&gt;ConfigParams&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;config&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;ConfigParams&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;FromTuples&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;key1.host&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;10.1.1.100&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;key1.port&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;8080&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;key2.host&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;10.1.1.100&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;key2.port&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;8082&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color:#111&#34;&gt;MemoryDiscovery&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;discovery&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;MemoryDiscovery&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;();&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;discovery&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;ReadConnections&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;config&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;discovery&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Resolve&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;123&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;key1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;idiscoveryidiscovery&#34;&gt;&lt;a href=&#34;../idiscovery&#34;&gt;IDiscovery&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;connectionparamsconnection_params&#34;&gt;&lt;a href=&#34;../connection_params&#34;&gt;ConnectionParams&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
