<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> â€“ Config</title>
    <link>/net/container/config/</link>
    <description>Recent content in Config on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="/net/container/config/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Net: ComponentConfig</title>
      <link>/net/container/config/component_config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/container/config/component_config/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ComponentConfig class allows you to configure a component residing inside a container.&lt;/p&gt;
&lt;p&gt;Important points&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The configuration includes the type of information or descriptor and component configuration parameters.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;properties&#34;&gt;Properties&lt;/h3&gt;
&lt;h4 id=&#34;descriptor&#34;&gt;Descriptor&lt;/h4&gt;
&lt;p&gt;Component&amp;rsquo;s descriptor (locator).&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; &lt;a href=&#34;../../../commons/refer/descriptor&#34;&gt;Descriptor&lt;/a&gt;  Descriptor { get; set; }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;type&#34;&gt;Type&lt;/h4&gt;
&lt;p&gt;Component&amp;rsquo;s type descriptor.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; &lt;a href=&#34;../../../commons/reflect/type_descriptor&#34;&gt;TypeDescriptor&lt;/a&gt; Type { get; set; }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;config&#34;&gt;Config&lt;/h4&gt;
&lt;p&gt;Component&amp;rsquo;s configuration parameters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; Config { get; set; }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new instance of the configuration component.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; ComponentConfig(Descriptor descriptor, TypeDescriptor type, ConfigParams config)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;descriptor&lt;/strong&gt;: &lt;a href=&#34;../../../commons/refer/descriptor&#34;&gt;Descriptor&lt;/a&gt; - (optional) component&amp;rsquo;s descriptor (locator).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;type&lt;/strong&gt;: &lt;a href=&#34;../../../commons/reflect/type_descriptor&#34;&gt;TypeDescriptor&lt;/a&gt; - (optional) component&amp;rsquo;s type descriptor.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;config&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - (optional) component&amp;rsquo;s configuration parameters.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;fromconfig&#34;&gt;FromConfig&lt;/h4&gt;
&lt;p&gt;Creates a new instance of ComponentConfig based on a section from a container configuration.
Throws &lt;a href=&#34;../commons/errors/config_exception&#34;&gt;ConfigException&lt;/a&gt; when neither component descriptor or type is found.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; &lt;a href=&#34;&#34;&gt;ComponentConfig&lt;/a&gt; FromConfig(&lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; config)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;config&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - component&amp;rsquo;s parameters from a container configuration.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;&#34;&gt;ComponentConfig&lt;/a&gt; - created ComponentConfig.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: ContainerConfig</title>
      <link>/net/container/config/container_config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/container/config/container_config/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Inherits:&lt;/strong&gt; List&amp;lt;&lt;a href=&#34;../component_config&#34;&gt;ComponentConfig&lt;/a&gt;&amp;gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ContainerConfig class allows you to create a container configuration as a list of component configurations.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new instance of ContainerConfig.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; ContainerConfig(IEnumerable&amp;lt;&lt;a href=&#34;../component_config&#34;&gt;ComponentConfig&lt;/a&gt;&amp;gt; components)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;components&lt;/strong&gt;: IEnumerable&amp;lt;&lt;a href=&#34;../component_config&#34;&gt;ComponentConfig&lt;/a&gt;&amp;gt; - (optional) list of component configurations.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Creates a new instance of container configuration.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; ContainerConfig()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;fromconfig&#34;&gt;FromConfig&lt;/h4&gt;
&lt;p&gt;Creates a new ContainerConfig object based on configuration parameters.
Each section in the configuration parameters is converted into a component configuration.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; &lt;a href=&#34;&#34;&gt;ContainerConfig&lt;/a&gt; FromConfig([ConfigParams](../../../commons/config/config_params config)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;config&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - object with key-value pairs used to initialize a new ContainerConfig.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;&#34;&gt;ContainerConfig&lt;/a&gt; - created ContainerConfig object.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;fromobject&#34;&gt;FromObject&lt;/h4&gt;
&lt;p&gt;Creates a new ContainerConfig object filled with key-value pairs from a specified object.
The value is converted into ConfigParams object which is used to create the new object.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; &lt;a href=&#34;&#34;&gt;ContainerConfig&lt;/a&gt; FromObject(object value)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: object - object with key-value pairs used to initialize a new ContainerConfig.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;&#34;&gt;ContainerConfig&lt;/a&gt; - created ContainerConfig object.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: ContainerConfigReader</title>
      <link>/net/container/config/container_config_reader/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/container/config/container_config_reader/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ContainerConfigReader class allows you to read a container&amp;rsquo;s configuration from a JSON or YAML file.&lt;/p&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;readfromfile&#34;&gt;ReadFromFile&lt;/h4&gt;
&lt;p&gt;Reads a container&amp;rsquo;s configuration from JSON or YAML file.
The type of the file is determined by the file extension.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; &lt;a href=&#34;../container_config&#34;&gt;ContainerConfig&lt;/a&gt; ReadFromFile(string correlationId, string path, &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; parameters)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: string - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;path&lt;/strong&gt;: string - path to the component&amp;rsquo;s configuration file.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;parameters&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - configuration parameters or null to skip parameterization.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../container_config&#34;&gt;ContainerConfig&lt;/a&gt; - read container configuration&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;readfromjsonfile&#34;&gt;ReadFromJsonFile&lt;/h4&gt;
&lt;p&gt;Reads a container&amp;rsquo;s configuration from a JSON file.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; &lt;a href=&#34;../container_config&#34;&gt;ContainerConfig&lt;/a&gt; ReadFromJsonFile(string correlationId, string path, &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; parameters)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: string - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;path&lt;/strong&gt;: string - path to the component&amp;rsquo;s configuration file.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;parameters&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - configuration parameters or null to skip parameterization.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../container_config&#34;&gt;ContainerConfig&lt;/a&gt; - read container configuration&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;readfromyamlfile&#34;&gt;ReadFromYamlFile&lt;/h4&gt;
&lt;p&gt;Reads container configuration from a YAML file.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; &lt;a href=&#34;../container_config&#34;&gt;ContainerConfig&lt;/a&gt; ReadFromYamlFile(string correlationId, string path, ConfigParams parameters)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: string - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;path&lt;/strong&gt;: string - path to the component&amp;rsquo;s configuration file.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;parameters&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - configuration parameters or null to skip parameterization.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../container_config&#34;&gt;ContainerConfig&lt;/a&gt; - read container configuration&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
