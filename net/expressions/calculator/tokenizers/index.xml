<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> â€“ Tokenizers</title>
    <link>/net/expressions/calculator/tokenizers/</link>
    <description>Recent content in Tokenizers on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="/net/expressions/calculator/tokenizers/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Net: ExpressionNumberState</title>
      <link>/net/expressions/calculator/tokenizers/expression_number_state/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/expressions/calculator/tokenizers/expression_number_state/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Inherits&lt;/strong&gt;: &lt;a href=&#34;../../../tokenizers/generic/generic_number_state&#34;&gt;GenericNumberState&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ExpressionNumberState implements an expression-specific number state object.&lt;/p&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;nexttoken&#34;&gt;NextToken&lt;/h4&gt;
&lt;p&gt;Gets the next token from the stream started from the character linked to this state.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public override&lt;/code&gt; &lt;a href=&#34;../../../tokenizers/token&#34;&gt;Token&lt;/a&gt; NextToken(&lt;a href=&#34;../../../io/iscanner&#34;&gt;IScanner&lt;/a&gt; scanner, &lt;a href=&#34;../../../tokenizers/itokenizer&#34;&gt;ITokenizer&lt;/a&gt; tokenizer)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;scanner&lt;/strong&gt;: &lt;a href=&#34;../../../io/iscanner&#34;&gt;IScanner&lt;/a&gt; - textual string to be tokenized.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;tokenizer&lt;/strong&gt;: &lt;a href=&#34;../../../tokenizers/itokenizer&#34;&gt;ITokenizer&lt;/a&gt; - tokenizer class that controls the process.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../../../tokenizers/token&#34;&gt;Token&lt;/a&gt; - next token from the top of the stream.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: ExpressionQuoteState</title>
      <link>/net/expressions/calculator/tokenizers/expression_quote_state/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/expressions/calculator/tokenizers/expression_quote_state/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Inherits&lt;/strong&gt;: &lt;a href=&#34;../../../tokenizers/iquote_state&#34;&gt;IQuoteState&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ExpressionQuoteState class implements an Expression-specific quote string state object.&lt;/p&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;decodestring&#34;&gt;decodeString&lt;/h4&gt;
&lt;p&gt;Decodes a string value.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; string DecodeString(string value, char quoteSymbol)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: string - string value to be decoded.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;quoteSymbol&lt;/strong&gt;: char - string quote character.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: string - decoded string.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;encodestring&#34;&gt;EncodeString&lt;/h4&gt;
&lt;p&gt;Encodes a string value.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; string EncodeString(string value, char quoteSymbol)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: string - string value to be encoded.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;quoteSymbol&lt;/strong&gt;: char - string quote character.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: string - encoded string.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;nexttoken&#34;&gt;NextToken&lt;/h4&gt;
&lt;p&gt;Gets the next token from the stream started from the character linked to this state.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public override&lt;/code&gt; &lt;a href=&#34;../../../tokenizers/token&#34;&gt;Token&lt;/a&gt; NextToken(&lt;a href=&#34;../../../io/iscanner&#34;&gt;IScanner&lt;/a&gt; scanner, &lt;a href=&#34;../../../tokenizers/itokenizer&#34;&gt;ITokenizer&lt;/a&gt; tokenizer)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;scanner&lt;/strong&gt;: &lt;a href=&#34;../../../io/iscanner&#34;&gt;IScanner&lt;/a&gt; - textual string to be tokenized.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;tokenizer&lt;/strong&gt;: &lt;a href=&#34;../../../tokenizers/itokenizer&#34;&gt;ITokenizer&lt;/a&gt; - tokenizer class that controls the process.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../../../tokenizers/token&#34;&gt;Token&lt;/a&gt; - next token from the top of the stream.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: ExpressionSymbolState</title>
      <link>/net/expressions/calculator/tokenizers/expression_symbol_state/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/expressions/calculator/tokenizers/expression_symbol_state/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Inherits&lt;/strong&gt;: &lt;a href=&#34;../../../tokenizers/generic/generic_symbol_state&#34;&gt;GenericSymbolState&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ExpressionSymbolState allows you to implement a symbol state object.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Constructs an instance of this class.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; ExpressionSymbolState()&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Net: ExpressionTokenizer</title>
      <link>/net/expressions/calculator/tokenizers/expression_tokenizer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/expressions/calculator/tokenizers/expression_tokenizer/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Inherits&lt;/strong&gt;: &lt;a href=&#34;../../../tokenizers/abstract_tokenizer&#34;&gt;AbstractTokenizer&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ExpressionTokenizer allows you to implement a tokenizer to perform lexical analysis for expressions.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Constructs an instance of this class.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; ExpressionTokenizer()&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Net: ExpressionWordState</title>
      <link>/net/expressions/calculator/tokenizers/expression_word_state/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/expressions/calculator/tokenizers/expression_word_state/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Inherits&lt;/strong&gt;: &lt;a href=&#34;../../../tokenizers/generic/generic_word_state&#34;&gt;GenericWordState&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ExpressionTokenizer class allows you to implement a word state object.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Constructs an instance of this class.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; ExpressionWordState()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;fields&#34;&gt;Fields&lt;/h3&gt;
&lt;span class=&#34;hide-title-link&#34;&gt;
&lt;p&gt;Supported expression keywords.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; string[] &lt;strong&gt;Keywords&lt;/strong&gt; = new string[] { &amp;ldquo;AND&amp;rdquo;, &amp;ldquo;OR&amp;rdquo;, &amp;ldquo;NOT&amp;rdquo;, &amp;ldquo;XOR&amp;rdquo;, &amp;ldquo;LIKE&amp;rdquo;, &amp;ldquo;IS&amp;rdquo;, &amp;ldquo;IN&amp;rdquo;, &amp;ldquo;NULL&amp;rdquo;, &amp;ldquo;TRUE&amp;rdquo;, &amp;ldquo;FALSE&amp;rdquo; };&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/span&gt;
&lt;h4 id=&#34;nexttoken&#34;&gt;NextToken&lt;/h4&gt;
&lt;p&gt;Gets the next token from the stream started from the character linked to this state.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public override&lt;/code&gt; &lt;a href=&#34;../../../tokenizers/token&#34;&gt;Token&lt;/a&gt; NextToken(&lt;a href=&#34;../../../io/iscanner&#34;&gt;IScanner&lt;/a&gt; scanner, &lt;a href=&#34;../../../tokenizers/itokenizer&#34;&gt;ITokenizer&lt;/a&gt; tokenizer)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;scanner&lt;/strong&gt;: &lt;a href=&#34;../../../io/iscanner&#34;&gt;IScanner&lt;/a&gt; - textual string to be tokenized.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;tokenizer&lt;/strong&gt;: &lt;a href=&#34;../../../tokenizers/itokenizer&#34;&gt;ITokenizer&lt;/a&gt; - tokenizer class that controls the process.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../../../tokenizers/token&#34;&gt;Token&lt;/a&gt; - next token from the top of the stream.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
