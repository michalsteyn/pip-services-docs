<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> â€“ Utilities</title>
    <link>/net/expressions/tokenizers/utilities/</link>
    <description>Recent content in Utilities on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="/net/expressions/tokenizers/utilities/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Net: CharReferenceInterval&lt;T&gt;</title>
      <link>/net/expressions/tokenizers/utilities/char_reference_interval/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/expressions/tokenizers/utilities/char_reference_interval/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The CharReferenceInterval allows you to represent a character interval that keeps a reference.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Important points&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This class is internal and used by &lt;a href=&#34;../char_reference_map&#34;&gt;CharReferenceMap&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new instance of the CharReferenceInterval class.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; CharReferenceInterval(char start, char end, T reference)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;start&lt;/strong&gt;: char - start of the interval&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;end&lt;/strong&gt;: char - end of the interval&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;reference&lt;/strong&gt;: T - reference&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;properties&#34;&gt;Properties&lt;/h3&gt;
&lt;h4 id=&#34;end&#34;&gt;End&lt;/h4&gt;
&lt;p&gt;End of the interval&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; char End { get; }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;reference&#34;&gt;Reference&lt;/h4&gt;
&lt;p&gt;Reference&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; T Reference { get; }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;start&#34;&gt;Start&lt;/h4&gt;
&lt;p&gt;Start of the interval&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; char Start { get; }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;inrange&#34;&gt;InRange&lt;/h4&gt;
&lt;p&gt;Determines if a symbol is within a range.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; bool InRange(char symbol)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;symbol&lt;/strong&gt;: char - symbol&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: bool - true if it is within the range and false otherwise.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: CharReferenceMap&lt;T&gt;</title>
      <link>/net/expressions/tokenizers/utilities/char_reference_map/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/expressions/tokenizers/utilities/char_reference_map/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The CharReferenceMap class allows you to keep references associated with specific characters.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new instance of this class.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; CharReferenceMap()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;adddefaultinterval&#34;&gt;AddDefaultInterval&lt;/h4&gt;
&lt;p&gt;Adds a default interval.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; void AddDefaultInterval(T reference)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;reference&lt;/strong&gt;: T - reference&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;addinterval&#34;&gt;AddInterval&lt;/h4&gt;
&lt;p&gt;Adds an interval.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; void AddInterval(char start, char end, T reference)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;start&lt;/strong&gt;: char - start of the interval&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;end&lt;/strong&gt;: char - end of the interval&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;reference&lt;/strong&gt;: T - reference&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;clear&#34;&gt;Clear&lt;/h4&gt;
&lt;p&gt;Clears up the intervals.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; void Clear()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;lookup&#34;&gt;Lookup&lt;/h4&gt;
&lt;p&gt;Looks up for a specified symbol.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; T Lookup(char symbol)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;symbol&lt;/strong&gt;: char - symbol&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: T - reference&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: CharValidator</title>
      <link>/net/expressions/tokenizers/utilities/char_validator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/expressions/tokenizers/utilities/char_validator/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The CharValidator class allows you to validate characters that are processed by tokenizers.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Default contructor to prevent the creation of a class instance.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;private&lt;/code&gt; CharValidator()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;fields&#34;&gt;Fields&lt;/h3&gt;
&lt;span class=&#34;hide-title-link&#34;&gt;
&lt;h4 id=&#34;eof&#34;&gt;Eof&lt;/h4&gt;
&lt;p&gt;EOF&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public const&lt;/code&gt; &lt;strong&gt;Eof&lt;/strong&gt;: char = &amp;lsquo;\xffff&amp;rsquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/span&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;iseof&#34;&gt;IsEof&lt;/h4&gt;
&lt;p&gt;Checks if a character is an EOF.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; bool IsEof(char value)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: char - value to check&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: bool - validation result&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;iseol&#34;&gt;IsEol&lt;/h4&gt;
&lt;p&gt;Checks if a character is an EOL.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; bool IsEol(char value)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: char - value to check&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: bool - validation result&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;isdigit&#34;&gt;IsDigit&lt;/h4&gt;
&lt;p&gt;Checks if a character is a digit.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; bool IsDigit(char value)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: char - value to check&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: bool - validation result&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
