<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> â€“ Queues</title>
    <link>/net/kafka/queues/</link>
    <description>Recent content in Queues on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="/net/kafka/queues/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Net: KafkaMessageQueue</title>
      <link>/net/kafka/queues/kafka_message_queue/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/kafka/queues/kafka_message_queue/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Inherits:&lt;/strong&gt; &lt;a href=&#34;../../../messaging/queues/cached_message_queue&#34;&gt;CachedMessageQueue&lt;/a&gt;, &lt;a href=&#34;../../connect/ikafka_message_listener&#34;&gt;IKafkaMessageListener&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The KafkaMessageQueue class allows you to create message queues that send and receive messages via the Kafka message broker.&lt;/p&gt;
&lt;h4 id=&#34;configuration-parameters&#34;&gt;Configuration parameters&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;topic&lt;/strong&gt;: name of Kafka topic to subscribe&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;group_id&lt;/strong&gt;: (optional) consumer group id (default: default)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;from_beginning&lt;/strong&gt;: (optional) restarts receiving messages from the beginning (default: false)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;read_partitions&lt;/strong&gt;: (optional) number of partitions to be consumed concurrently (default: 1)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;autocommit&lt;/strong&gt;: (optional) turns on/off autocommit (default: true)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;connection(s)&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;discovery_key&lt;/strong&gt;: (optional) a key to retrieve the connection from  &lt;a href=&#34;../../../components/connect/idiscovery&#34;&gt;IDiscovery&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;host&lt;/strong&gt;: host name or IP address&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;port&lt;/strong&gt;: port number&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;uri&lt;/strong&gt;: resource URI or connection string with all parameters in it&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;credential(s)&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;store_key&lt;/strong&gt;: (optional) a key to retrieve the credentials from  &lt;a href=&#34;../../../components/auth/icredential_store&#34;&gt;ICredentialStore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;username&lt;/strong&gt;: user name&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;password&lt;/strong&gt;: user password&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;options&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;autosubscribe&lt;/strong&gt;:        (optional) true to automatically subscribe on option(default: false)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;acks&lt;/strong&gt;: (optional) control the number of required acks: -1 - all, 0 - none, 1 - only leader (default: -1)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;autocommit_timeout&lt;/strong&gt;: (optional) number of milliseconds to perform autocommit offsets (default: 1000)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;connect_timeout&lt;/strong&gt;: (optional) number of milliseconds to connect to broker (default: 1000)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;max_retries&lt;/strong&gt;: (optional) maximum retry attempts (default: 5)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;retry_timeout&lt;/strong&gt;: (optional) number of milliseconds to wait on each reconnection attempt (default: 30000)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;request_timeout&lt;/strong&gt;: (optional) number of milliseconds to wait on broker request (default: 30000)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;flush_timeout&lt;/strong&gt;: (optional) number of milliseconds to wait on flushing messages (default: 30000)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;references&#34;&gt;References&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;*:logger:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/log/ilogger&#34;&gt;ILogger&lt;/a&gt; components to pass log messages&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*:counters:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/count/icounters&#34;&gt;ICounters&lt;/a&gt; components to pass collected measurements&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*:discovery:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/connect/idiscovery&#34;&gt;IDiscovery&lt;/a&gt; services&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*:credential-store:*:*:1.0&lt;/strong&gt; - (optional) &lt;a href=&#34;../../../components/auth/icredential_store&#34;&gt;ICredentialStore&lt;/a&gt; to resolve credentials&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;*:connection:kafka:*:1.0&lt;/strong&gt; - (optional) shared connection to Kafka service&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new instance of the message queue.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; KafkaMessageQueue(string name = null)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: string - (optional) queue name.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;fields&#34;&gt;Fields&lt;/h3&gt;
&lt;span class=&#34;hide-title-link&#34;&gt;
&lt;h4 id=&#34;_autocommit&#34;&gt;_autoCommit&lt;/h4&gt;
&lt;p&gt;Autocommit option&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;private&lt;/code&gt; &lt;strong&gt;_autoCommit&lt;/strong&gt;: bool&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;_connection&#34;&gt;_connection&lt;/h4&gt;
&lt;p&gt;Kafka connection component.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;private&lt;/code&gt; &lt;strong&gt;_connection&lt;/strong&gt;: &lt;a href=&#34;../../connect/kafka_connection&#34;&gt;KafkaConnection&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;_dependencyresolver&#34;&gt;_dependencyResolver&lt;/h4&gt;
&lt;p&gt;Dependency resolver.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;private&lt;/code&gt; &lt;strong&gt;_dependencyResolver&lt;/strong&gt;: &lt;a href=&#34;../../../commons/refer/dependency_resolver/&#34;&gt;DependencyResolver&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;_frombeginning&#34;&gt;_fromBeginning&lt;/h4&gt;
&lt;p&gt;From beginning (Subscribe option)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;private&lt;/code&gt; &lt;strong&gt;_fromBeginning&lt;/strong&gt;: bool&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;_groupid&#34;&gt;_groupId&lt;/h4&gt;
&lt;p&gt;Group id&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;private&lt;/code&gt; &lt;strong&gt;_groupId&lt;/strong&gt;: string = &amp;lsquo;default&amp;rsquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;_readpartitions&#34;&gt;_readPartitions&lt;/h4&gt;
&lt;p&gt;Partition&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;private&lt;/code&gt; &lt;strong&gt;_readPartitions&lt;/strong&gt;: int&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;_subscribed&#34;&gt;_subscribed&lt;/h4&gt;
&lt;p&gt;Option to subscribe&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;private&lt;/code&gt; &lt;strong&gt;_subscribed&lt;/strong&gt;: bool&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;_topic&#34;&gt;_topic&lt;/h4&gt;
&lt;p&gt;Topic&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;private&lt;/code&gt; &lt;strong&gt;_topic&lt;/strong&gt;: string&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/span&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;abandonasync&#34;&gt;AbandonAsync&lt;/h4&gt;
&lt;p&gt;Returns a message into the queue and makes it available for all subscribers to receive it again.
This method is usually used to return a message which could not be processed at the moment
to repeat the attempt. Messages that cause unrecoverable errors shall be removed permanently
or/and sent to dead letter queue.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Important: This method is not supported by Kafka.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public override&lt;/code&gt; async Task AbandonAsync(&lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt; message)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: &lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt; - message to return.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;clear&#34;&gt;Clear!&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;TODO: this method is not implemented&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Clears a component&amp;rsquo;s state.&lt;/p&gt;
&lt;h4 id=&#34;closeasync&#34;&gt;CloseAsync&lt;/h4&gt;
&lt;p&gt;Closes a component and frees used resources.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public override&lt;/code&gt; Task CloseAsync(string correlationId)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: string - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;completeasync&#34;&gt;CompleteAsync&lt;/h4&gt;
&lt;p&gt;Permanently removes a message from the queue.
This method is usually used to remove the message after successful processing.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Important: This method is not supported by Kafka.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public override&lt;/code&gt; Task CompleteAsync(&lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt; message)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: &lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt; - message to remove.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;configure&#34;&gt;Configure&lt;/h4&gt;
&lt;p&gt;Configures a component by passing its configuration parameters.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public override&lt;/code&gt; void Configure(&lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; config)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;config:&lt;/strong&gt;: &lt;a href=&#34;../../../commons/config/config_params&#34;&gt;ConfigParams&lt;/a&gt; - configuration parameters to be set.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;endlisten&#34;&gt;EndListen!&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;TODO: this method is not implemented&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Ends listening for incoming messages.
When this method is call, &lt;a href=&#34;#listen&#34;&gt;Listen&lt;/a&gt; unblocks the thread and execution continues.&lt;/p&gt;
&lt;h4 id=&#34;frommessage&#34;&gt;FromMessage&lt;/h4&gt;
&lt;p&gt;Returns the content of a message and information about it.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;private&lt;/code&gt; Message&amp;lt;byte[], byte[]&amp;gt; FromMessage(&lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt; message)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: &lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt; - message&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: Message&amp;lt;byte[], byte[]&amp;gt; - content of the message and information about it.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;gettopic&#34;&gt;GetTopic&lt;/h4&gt;
&lt;p&gt;Returns the topic.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;private&lt;/code&gt; string GetTopic()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: string - topic&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;isopen&#34;&gt;IsOpen&lt;/h4&gt;
&lt;p&gt;Checks if the component is open.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public override&lt;/code&gt; bool IsOpen()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: bool - true if the component is open and false otherwise.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;listen&#34;&gt;Listen!&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;TODO: this method is not implemented&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Listens for incoming messages and blocks the current thread until the queue is closed.&lt;/p&gt;
&lt;p&gt;See &lt;a href=&#34;../../../messaging/queues/imessage_receiver&#34;&gt;IMessageReceiver&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&#34;movetodeadletterasync&#34;&gt;MoveToDeadLetterAsync&lt;/h4&gt;
&lt;p&gt;Permanently removes a message from the queue and sends it to dead letter queue.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Important: This method is not supported by Kafka.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public override&lt;/code&gt; Task MoveToDeadLetterAsync(&lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt; message)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: &lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt; - message to be removed.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;onmessage&#34;&gt;OnMessage&lt;/h4&gt;
&lt;p&gt;Deserializes a message. Then, sends it to a receiver if its set or puts it into the queue.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; void OnMessage(&lt;a href=&#34;../../connect/kafka_message&#34;&gt;KafkaMessage&lt;/a&gt; msg)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;msg&lt;/strong&gt;: &lt;a href=&#34;../../connect/kafka_message&#34;&gt;KafkaMessage&lt;/a&gt; - message&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;openasync&#34;&gt;OpenAsync&lt;/h4&gt;
&lt;p&gt;Opens the component.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public override&lt;/code&gt; Task OpenAsync(string correlationId)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: string - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;peek&#34;&gt;Peek!&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;TODO: this method is not implemented&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Peeks a single incoming message from the queue without removing it.
If there are no messages available in the queue, it returns null.&lt;/p&gt;
&lt;h4 id=&#34;peekbatch&#34;&gt;PeekBatch!&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;TODO: this method is not implemented&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Peeks multiple incoming messages from the queue without removing them.
If there are no messages available in the queue, it returns an empty list.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Important: This method is not supported by Kafka.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;readmessagecount&#34;&gt;ReadMessageCount!&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;TODO: this method is not implemented&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Reads the current number of messages in the queue to be delivered.&lt;/p&gt;
&lt;h4 id=&#34;receive&#34;&gt;Receive!&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;TODO: this method is not implemented&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Receives an incoming message and removes it from the queue.&lt;/p&gt;
&lt;h4 id=&#34;renewlockasync&#34;&gt;RenewLockAsync&lt;/h4&gt;
&lt;p&gt;Renews a lock on a message that makes it invisible from other receivers in the queue.
This method is usually used to extend the message processing time.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Important: This method is not supported by Kafka.&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public override&lt;/code&gt; Task RenewLockAsync(&lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt; message, long lockTimeout)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: &lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt; - message to extend its lock.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;lockTimeout&lt;/strong&gt;: long - locking timeout in milliseconds.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;sendasync&#34;&gt;SendAsync&lt;/h4&gt;
&lt;p&gt;Sends a message into the queue.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public override&lt;/code&gt; async Task SendAsync(string correlationId, &lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt; message)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: string - (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: &lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt; - message envelop to be sent.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;setreferences&#34;&gt;SetReferences&lt;/h4&gt;
&lt;p&gt;Sets references to dependent components.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public override&lt;/code&gt; void SetReferences(&lt;a href=&#34;../../../commons/refer/ireferences&#34;&gt;IReferences&lt;/a&gt; references)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;references&lt;/strong&gt;: &lt;a href=&#34;../../../commons/refer/ireferences&#34;&gt;IReferences&lt;/a&gt; - references to locate the component dependencies.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;subscribeasync&#34;&gt;SubscribeAsync&lt;/h4&gt;
&lt;p&gt;Subscribes to a topic.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;protected override&lt;/code&gt; Task SubscribeAsync(string correlationId)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: (optional) transaction id used to trace execution through the call chain.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;tomessage&#34;&gt;ToMessage&lt;/h4&gt;
&lt;p&gt;Creates a new &lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;private&lt;/code&gt; &lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt; ToMessage(&lt;a href=&#34;../../connect/kafka_message&#34;&gt;KafkaMessage&lt;/a&gt; msg)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;msg&lt;/strong&gt;: &lt;a href=&#34;../../connect/kafka_message&#34;&gt;KafkaMessage&lt;/a&gt; - message&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../../../messaging/queues/message_envelope&#34;&gt;MessageEnvelope&lt;/a&gt; - message&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;unsetreferences&#34;&gt;UnsetReferences!&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;TODO: this method is not implemented&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Unsets (clears) previously set references to dependent components.&lt;/p&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;queue&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;KafkaMessageQueue&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;myqueue&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;queue&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Configure&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;ConfigParams&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;FromTuples&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;
  &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;subject&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;mytopic&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt;
  &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;connection.protocol&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;tcp&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;connection.host&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;localhost&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;connection.port&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;9092&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;));&lt;/span&gt;

&lt;span style=&#34;color:#00a8c8&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;queue&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;OpenAsync&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;123&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#00a8c8&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;queue&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;SendAsync&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;123&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;MessageEnvelope&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;mymessage&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;ABC&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;));&lt;/span&gt;
&lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;message&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;queue&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;ReceiveAsync&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;123&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color:#00a8c8&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;message&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#111&#34;&gt;...&lt;/span&gt;
    &lt;span style=&#34;color:#00a8c8&#34;&gt;await&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;queue&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;CompleteAsync&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;123&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;message&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;messagequeuemessagingqueuesmessage_queue&#34;&gt;&lt;a href=&#34;../../../messaging/queues/message_queue&#34;&gt;MessageQueue&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;messagingcapabilitiesmessagingqueuesmessaging_capabilities&#34;&gt;&lt;a href=&#34;../../../messaging/queues/messaging_capabilities&#34;&gt;MessagingCapabilities&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
