<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> â€“ Validate</title>
    <link>/net/commons/validate/</link>
    <description>Recent content in Validate on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="/net/commons/validate/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Net: AndRule</title>
      <link>/net/commons/validate/and_rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/commons/validate/and_rule/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Inherits&lt;/strong&gt;: &lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The AndRule class allows you to validate combinations of rules created with AND logical operations.&lt;/p&gt;
&lt;p&gt;Important points&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When one or more of the combined rules return errors, then this rule returns all the errors that appeared.&lt;/li&gt;
&lt;li&gt;When none of the combined rules returns errors, then this rule also returns no errors.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new validation rule and sets its values.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; AndRule(params &lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;[] rules)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;rules&lt;/strong&gt;: &lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;[] - list of rules to join with AND operator&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;validate&#34;&gt;Validate&lt;/h4&gt;
&lt;p&gt;Validates a given value against this rule.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; void Validate(string path, &lt;a href=&#34;../schema&#34;&gt;Schema&lt;/a&gt; schema, object value, List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; results)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;path&lt;/strong&gt;: string - dot notation path to the value.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;schema&lt;/strong&gt;: &lt;a href=&#34;../schema&#34;&gt;Schema&lt;/a&gt; - schema this rule is called from&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: object - value to be validated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;results&lt;/strong&gt;: List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; - list with validation results to add new results.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;example&#34;&gt;Example&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;WithRule&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;AndRule&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;
    &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;ValueComparisonRule&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;GTE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;),&lt;/span&gt;
    &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;ValueComparisonRule&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;LTE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#111&#34;&gt;));&lt;/span&gt;

&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;// Result: 0 must be greater or equal to 1
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;// Result: no error
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;         &lt;span style=&#34;color:#75715e&#34;&gt;// Result: 20 must be letter or equal 10
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;ivalidationruleivalidation_rule&#34;&gt;&lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: ArraySchema</title>
      <link>/net/commons/validate/array_schema/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/commons/validate/array_schema/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Inherits&lt;/strong&gt;: &lt;a href=&#34;../schema&#34;&gt;Schema&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ArraySchema class allows you to validate arrays based on a specified validation rule.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new validation rule and sets its values.
See &lt;a href=&#34;../convert/type_code&#34;&gt;TypeCode&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; ArraySchema(object valueType)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;valueType&lt;/strong&gt;: object - type of array elements. Null means that elements may have any type.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Creates a new instance of a validation schema.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; ArraySchema()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;properties&#34;&gt;Properties&lt;/h3&gt;
&lt;h4 id=&#34;valuetype&#34;&gt;ValueType&lt;/h4&gt;
&lt;p&gt;Gets and Sets the type of array elements.
Null means that elements may have any type.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; object ValueType { get; set; }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;performvalidation&#34;&gt;PerformValidation&lt;/h4&gt;
&lt;p&gt;Validates a given value against the schema and configured validation rules.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;protected internal override&lt;/code&gt; void PerformValidation(string path, object value, List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; results)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;path&lt;/strong&gt;: string - dot notation path to the value.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: object - value to be validated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;results&lt;/strong&gt;: List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; - list with validation results to add new results.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;ArraySchema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;TypeCode&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;[]{&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;B&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;C&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;});&lt;/span&gt;   &lt;span style=&#34;color:#75715e&#34;&gt;// Result: no errors
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;[]&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;});&lt;/span&gt;           &lt;span style=&#34;color:#75715e&#34;&gt;// Result: element type mismatch
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;                           &lt;span style=&#34;color:#75715e&#34;&gt;// Result: type mismatch      
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Net: AtLeastOneExistsRule</title>
      <link>/net/commons/validate/at_least_one_exists_rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/commons/validate/at_least_one_exists_rule/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Inherits&lt;/strong&gt;: &lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The AtLeastOneExistsRule class allows you to check that given a set of properties, at least one of them exists.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new validation rule and sets its values&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; AtLeastOneExistsRule(params string[] properties)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;properties&lt;/strong&gt;: string[] - a list of property names where at least one property must exist&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;validate&#34;&gt;Validate&lt;/h4&gt;
&lt;p&gt;Validates a given value against this rule.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; void Validate(string path, &lt;a href=&#34;../schema&#34;&gt;Schema&lt;/a&gt; schema, object value, List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; results)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;path&lt;/strong&gt;: string - a dot notation path to the value.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;schema&lt;/strong&gt;: &lt;a href=&#34;../schema&#34;&gt;Schema&lt;/a&gt; - a schema this rule is called from&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: object - a value to be validated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;results&lt;/strong&gt;: List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; - a list with validation results to add new results.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;WithRule&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;AtLeastOneExistsRule&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;field1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;field2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;));&lt;/span&gt;

&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;field1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;field2&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;});&lt;/span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;// Result: no errors
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;field1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;});&lt;/span&gt;                  &lt;span style=&#34;color:#75715e&#34;&gt;// Result: no errors
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;});&lt;/span&gt;                            &lt;span style=&#34;color:#75715e&#34;&gt;// Result: at least one of properties field1, field2 must exist
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;ivalidationruleivalidation_rule&#34;&gt;&lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: ExcludedRule</title>
      <link>/net/commons/validate/excluded_rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/commons/validate/excluded_rule/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Inherits&lt;/strong&gt;: &lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ExcludedRule allows you to verify that none of the values specified in the rule is present in a list of constants.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new validation rule and sets its values&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; ExcludedRule(params object[] values)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;values&lt;/strong&gt;: object[] - a list of constants that value must be excluded from&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;validate&#34;&gt;Validate&lt;/h4&gt;
&lt;p&gt;Validates the given value. null of the values set in this ExcludedRule object must exist
in the value that is given for validation to pass.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; void Validate(string path, &lt;a href=&#34;../schema&#34;&gt;Schema&lt;/a&gt; schema, object value, List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; results)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;path&lt;/strong&gt;: string - the dot notation path to the value that is to be validated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;schema&lt;/strong&gt;: &lt;a href=&#34;../schema&#34;&gt;Schema&lt;/a&gt; - (not used in this implementation).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: object - the value that is to be validated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;results&lt;/strong&gt;: List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; - the results of the validation.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;WithRule&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;ExcludedRule&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;));&lt;/span&gt;

&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;// Result: 2 must not be one of 1, 2, 3
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;// Result: no errors
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;ivalidationruleivalidation_rule&#34;&gt;&lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: FilterParamsSchema</title>
      <link>/net/commons/validate/filter_params_schema/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/commons/validate/filter_params_schema/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Inherits&lt;/strong&gt;: &lt;a href=&#34;../map_schema&#34;&gt;MapSchema&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The FilterParamsSchema class allows you to create a schema to validate &lt;a href=&#34;../../data/filter_params&#34;&gt;FilterParams&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new instance of validation schema.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; FilterParamsSchema()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;filterparamsdatafilter_params&#34;&gt;&lt;a href=&#34;../../data/filter_params&#34;&gt;FilterParams&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: IncludedRule</title>
      <link>/net/commons/validate/included_rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/commons/validate/included_rule/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Inherits&lt;/strong&gt;: &lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The InclidedRule class allows you to check that a list contains only specified values.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new validation rule and sets its values.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; IncludedRule(params object[] values)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;values&lt;/strong&gt;: object[] - a list of constants that value must be included to&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;validate&#34;&gt;Validate&lt;/h4&gt;
&lt;p&gt;Validates a given value against this rule.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; void Validate(string path, &lt;a href=&#34;../schema&#34;&gt;Schema&lt;/a&gt; schema, object value, List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; results)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;path&lt;/strong&gt;: string - a dot notation path to the value.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;schema&lt;/strong&gt;: &lt;a href=&#34;../schema&#34;&gt;Schema&lt;/a&gt; - a schema this rule is called from&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: object - a value to be validated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;results&lt;/strong&gt;: List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; - a list with validation results to add new results.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;WithRule&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;IncludedRule&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;));&lt;/span&gt;

&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;// Result: no errors
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;// Result: 10 must be one of 1, 2, 3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;ivalidationruleivalidation_rule&#34;&gt;&lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: IValidationRule</title>
      <link>/net/commons/validate/ivalidation_rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/commons/validate/ivalidation_rule/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The IValidationRule interface allows you to implement custom validation rules.&lt;/p&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;validate&#34;&gt;Validate&lt;/h4&gt;
&lt;p&gt;Validates a given value against this rule.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; void Validate(string path, &lt;a href=&#34;../schema&#34;&gt;Schema&lt;/a&gt; schema, object value, List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; results)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;path&lt;/strong&gt;: string - a dot notation path to the value.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;schema&lt;/strong&gt;: &lt;a href=&#34;../schema&#34;&gt;Schema&lt;/a&gt; - a schema this rule is called from&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: object - a value to be validated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;results&lt;/strong&gt;: List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; - a list with validation results to add new results.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: MapSchema</title>
      <link>/net/commons/validate/map_schema/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/commons/validate/map_schema/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Inherits&lt;/strong&gt;: &lt;a href=&#34;../schema&#34;&gt;Schema&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The MapSchema class provides you with a schema to validate maps&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new instance of validation schema and sets its values.
See &lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;, &lt;a href=&#34;../convert/type_code&#34;&gt;TypeCode&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; MapSchema(object keyType, object valueType)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;keyType&lt;/strong&gt;: object  - a type of map keys. Null means that keys may have any type.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;valueType&lt;/strong&gt;: object  - a type of map values. Null means that values may have any type.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Creates a new instance of validation schema.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; MapSchema()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;properties&#34;&gt;Properties&lt;/h3&gt;
&lt;h4 id=&#34;keytype&#34;&gt;KeyType&lt;/h4&gt;
&lt;p&gt;Gets and sets the type of map keys.
Null means that keys may have any type.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; object KeyType { get; set; }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;valuetype&#34;&gt;ValueType&lt;/h4&gt;
&lt;p&gt;Gets and sets the type of map values.
Null means that values may have any type.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; object ValueType { get; set; }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;performvalidation&#34;&gt;PerformValidation&lt;/h4&gt;
&lt;p&gt;Validates a given value against the schema and configured validation rules.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;protected internal override&lt;/code&gt; void PerformValidation(string path, object value, List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; results)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;path&lt;/strong&gt;: string - a dot notation path to the value.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: object - a value to be validated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;results&lt;/strong&gt;: List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; - a list with validation results to add new results.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;MapSchema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;TypeCode&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;TypeCode&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Integer&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;key1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;key2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;B&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;});&lt;/span&gt;       &lt;span style=&#34;color:#75715e&#34;&gt;// Result: no errors
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;key1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;key2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;});&lt;/span&gt;           &lt;span style=&#34;color:#75715e&#34;&gt;// Result: element type mismatch
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;[]{&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;});&lt;/span&gt;                        &lt;span style=&#34;color:#75715e&#34;&gt;// Result: type mismatch
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Net: NotRule</title>
      <link>/net/commons/validate/not_rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/commons/validate/not_rule/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Inherits&lt;/strong&gt;: &lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The NotRule class allows you to negate a rule. Thus, when the embedded rule returns errors, then the negated rule returns no errors and vice versa.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new validation rule and sets its values&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; NotRule(&lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt; rule)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;rule&lt;/strong&gt;: &lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt; - a rule to be negated.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;validate&#34;&gt;Validate&lt;/h4&gt;
&lt;p&gt;Validates a given value against this rule.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; void Validate(string path, &lt;a href=&#34;../schema&#34;&gt;Schema&lt;/a&gt; schema, object value, List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; results)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;path&lt;/strong&gt;: string - a dot notation path to the value.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;schema&lt;/strong&gt;: &lt;a href=&#34;../schema&#34;&gt;Schema&lt;/a&gt; - a schema this rule is called from&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: object - a value to be validated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;results&lt;/strong&gt;: List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; - a list with validation results to add new results.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;WithRule&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;
&lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;NotRule&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;ValueComparisonRule&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;EQ&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)));&lt;/span&gt;

&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;// Result: error
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;// Result: no error
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;ivalidationruleivalidation_rule&#34;&gt;&lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: ObjectComparator</title>
      <link>/net/commons/validate/object_comparator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/commons/validate/object_comparator/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ObjectComparator class allows you to perform a comparison over two values of any type.&lt;/p&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;areequal&#34;&gt;AreEqual&lt;/h4&gt;
&lt;p&gt;Checks if two values are equal.
The operation can be performed over values of any type.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; bool AreEqual(object value1, object value2)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value1&lt;/strong&gt;: object - the first value to compare&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value2&lt;/strong&gt;: object - the second value to compare&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: bool - true if values are equal and false otherwise&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;arenotequal&#34;&gt;AreNotEqual&lt;/h4&gt;
&lt;p&gt;Checks if two values are NOT equal
The operation can be performed over values of any type.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; bool AreNotEqual(object value1, object value2)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value1&lt;/strong&gt;: object - the first value to compare&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value2&lt;/strong&gt;: object - the second value to compare&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: bool - true if values are NOT equal and false otherwise&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;compare&#34;&gt;Compare&lt;/h4&gt;
&lt;p&gt;Perform comparison operation over two arguments.
The operation can be performed over values of any type.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; bool Compare(object value1, string operation, object value2)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value1&lt;/strong&gt;: object - the first argument to compare&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;operation&lt;/strong&gt;: string - the comparison operation: &lt;em&gt;&amp;quot;==&amp;quot; (&amp;quot;=&amp;quot;, &amp;ldquo;EQ&amp;rdquo;), &amp;ldquo;!= &amp;quot; (&amp;quot;&amp;lt;&amp;gt;&amp;rdquo;, &amp;ldquo;NE&amp;rdquo;); &amp;ldquo;&amp;lt;&amp;quot;/&amp;quot;&amp;gt;&amp;rdquo; (&amp;ldquo;LT&amp;rdquo;/&amp;ldquo;GT&amp;rdquo;), &amp;ldquo;&amp;lt;=&amp;quot;/&amp;quot;&amp;gt;=&amp;rdquo; (&amp;ldquo;LE&amp;rdquo;/&amp;ldquo;GE&amp;rdquo;); &amp;ldquo;LIKE&amp;rdquo;&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value2&lt;/strong&gt;: object - the second argument to compare&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: bool - result of the comparison operation&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;isgreater&#34;&gt;IsGreater&lt;/h4&gt;
&lt;p&gt;Checks if first value is greater than the second one.
The operation can be performed over numbers or strings.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; bool IsGreater(object value1, object value2)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value1&lt;/strong&gt;: object - the first value to compare&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value2&lt;/strong&gt;: object - the second value to compare&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: bool - true if the first value is greater than second and false otherwise.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;isless&#34;&gt;IsLess&lt;/h4&gt;
&lt;p&gt;Checks if first value is less than the second one.
The operation can be performed over numbers or strings.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; bool IsLess(object value1, object value2)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value1&lt;/strong&gt;: object - the first value to compare&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value2&lt;/strong&gt;: object - the second value to compare&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: bool - true if the first value is less than second and false otherwise.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;match&#34;&gt;Match&lt;/h4&gt;
&lt;p&gt;Checks if string matches a regular expression&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; bool Match(object value1, object value2)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value1&lt;/strong&gt;: object - a string value to match&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value2&lt;/strong&gt;: object - a regular expression string&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: bool - true if the value matches regular expression and false otherwise.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#111&#34;&gt;ObjectComparator&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Compare&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;GT&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// Result: true
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;ObjectComparator&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;AreEqual&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;B&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;         &lt;span style=&#34;color:#75715e&#34;&gt;// Result: false
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Net: ObjectSchema</title>
      <link>/net/commons/validate/object_schema/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/commons/validate/object_schema/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Inherits&lt;/strong&gt;: &lt;a href=&#34;../schema&#34;&gt;Schema&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ObjectSchema class allows you to create a validation schema that can be used to validate user defined objects.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new validation schema.
See &lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; ObjectSchema()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;properties&#34;&gt;Properties&lt;/h3&gt;
&lt;h4 id=&#34;isundefinedallowed&#34;&gt;IsUndefinedAllowed&lt;/h4&gt;
&lt;p&gt;Gets and sets flag to allow undefined properties.
True to allow undefined properties and false to disallow.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; bool IsUndefinedAllowed { get; set; }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;properties-1&#34;&gt;Properties&lt;/h4&gt;
&lt;p&gt;Gets and sets validation schemas for object properties.
See &lt;a href=&#34;../property_schema&#34;&gt;PropertySchema&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; List&amp;lt;&lt;a href=&#34;../property_schema&#34;&gt;PropertySchema&lt;/a&gt;&amp;gt; Properties [get, set]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;allowundefined&#34;&gt;AllowUndefined&lt;/h4&gt;
&lt;p&gt;Sets flag to allow undefined properties
This method returns reference to this exception to implement Builder pattern
to chain additional calls.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; &lt;a href=&#34;../object_schema&#34;&gt;ObjectSchema&lt;/a&gt; AllowUndefined(bool value)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: bool - true to allow undefined properties and false to disallow.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../object_schema&#34;&gt;ObjectSchema&lt;/a&gt; - this validation schema.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;performvalidation&#34;&gt;PerformValidation&lt;/h4&gt;
&lt;p&gt;Validates a given value against the schema and configured validation rules.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;protected internal override&lt;/code&gt; void PerformValidation(string path, object value, List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; results)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;path&lt;/strong&gt;: string - a dot notation path to the value.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: object - a value to be validated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;results&lt;/strong&gt;: List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; - a list with validation results to add new results.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;withoptionalproperty&#34;&gt;WithOptionalProperty&lt;/h4&gt;
&lt;p&gt;Adds a validation schema for an optional object property.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; &lt;a href=&#34;&#34;&gt;ObjectSchema&lt;/a&gt; WithOptionalProperty(string name, object type, params &lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;[] rules)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: string - a property name.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;type&lt;/strong&gt;: object - (optional) a property schema or type.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;rules&lt;/strong&gt;: &lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;[] - (optional) a list of property validation rules.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;withproperty&#34;&gt;WithProperty&lt;/h4&gt;
&lt;p&gt;Adds a validation schema for an object property.
This method returns reference to this exception to implement Builder pattern
to chain additional calls.
See &lt;a href=&#34;../property_schema&#34;&gt;PropertySchema&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; &lt;a href=&#34;&#34;&gt;ObjectSchema&lt;/a&gt; WithProperty(&lt;a href=&#34;../property_schema&#34;&gt;PropertySchema&lt;/a&gt; schema)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;schema&lt;/strong&gt;: &lt;a href=&#34;../property_schema&#34;&gt;PropertySchema&lt;/a&gt; - a property validation schema to be added.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;&#34;&gt;ObjectSchema&lt;/a&gt; - this validation schema.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;withrequiredproperty&#34;&gt;WithRequiredProperty&lt;/h4&gt;
&lt;p&gt;Adds a validation schema for a required object property.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; &lt;a href=&#34;&#34;&gt;ObjectSchema&lt;/a&gt; WithRequiredProperty(string name, object type, params &lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;[] rules)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: string - a property name.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;type&lt;/strong&gt;: object - (optional) a property schema or type.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;rules&lt;/strong&gt;: &lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;[] - (optional) a list of property validation rules.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;&#34;&gt;ObjectSchema&lt;/a&gt; - the validation schema&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;ObjectSchema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;WithOptionalProperty&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;TypeCode&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)&lt;/span&gt;
                               &lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;WithRequiredProperty&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;TypeCode&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;

&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;ABC&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;});&lt;/span&gt;       &lt;span style=&#34;color:#75715e&#34;&gt;// Result: no errors
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;ABC&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;});&lt;/span&gt;                &lt;span style=&#34;color:#75715e&#34;&gt;// Result: no errors
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;ABC&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;});&lt;/span&gt;         &lt;span style=&#34;color:#75715e&#34;&gt;// Result: id type mismatch
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;_name&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;ABC&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;});&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// Result: name is missing, unexpected _name
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;ABC&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;                          &lt;span style=&#34;color:#75715e&#34;&gt;// Result: type mismatch
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Net: OnlyOneExistsRule</title>
      <link>/net/commons/validate/only_one_exists_rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/commons/validate/only_one_exists_rule/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Inherits&lt;/strong&gt;: &lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The OnlyOneExistsRule allows you to check that only one property of a list of properties exists in an object.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new validation rule and sets its values&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; OnlyOneExistsRule(params string[] properties)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;properties&lt;/strong&gt;: string[] - a list of property names where at only one property must exist&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;validate&#34;&gt;Validate&lt;/h4&gt;
&lt;p&gt;Validates a given value against this rule.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; void Validate(string path, &lt;a href=&#34;../schema&#34;&gt;Schema&lt;/a&gt; schema, object value, List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; results)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;path&lt;/strong&gt;: string - a dot notation path to the value.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;schema&lt;/strong&gt;: &lt;a href=&#34;../schema&#34;&gt;Schema&lt;/a&gt; - a schema this rule is called from&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: object - a value to be validated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;results&lt;/strong&gt;: &lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;[] - a list with validation results to add new results.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;WithRule&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;OnlyOneExistsRule&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;field1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;field2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;));&lt;/span&gt;

&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;field1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;field2&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;});&lt;/span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;// Result: only one of properties field1, field2 must exist
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;field1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;});&lt;/span&gt;                  &lt;span style=&#34;color:#75715e&#34;&gt;// Result: no errors
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;});&lt;/span&gt;                            &lt;span style=&#34;color:#75715e&#34;&gt;// Result: only one of properties field1, field2 must exist
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;ivalidationruleivalidation_rule&#34;&gt;&lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: OrRule</title>
      <link>/net/commons/validate/or_rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/commons/validate/or_rule/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Inherits&lt;/strong&gt;: &lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The OrRule class allows you to validate combinations of rules created with OR logical operations.&lt;/p&gt;
&lt;p&gt;Important points&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;When one of the combined rules returns no errors, then this rule also returns no errors.&lt;/li&gt;
&lt;li&gt;When all combined rules return errors, then this rule returns all the errors.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new validation rule and sets its values.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; OrRule(params &lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;[] rules)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;rules&lt;/strong&gt;: &lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;[] - a list of rules to join with OR operator&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;validate&#34;&gt;Validate&lt;/h4&gt;
&lt;p&gt;Validates a given value against this rule.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; void Validate(string path, &lt;a href=&#34;../schema&#34;&gt;Schema&lt;/a&gt; schema, object value, List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; results)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;path&lt;/strong&gt;: string - a dot notation path to the value.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;schema&lt;/strong&gt;: &lt;a href=&#34;../schema&#34;&gt;Schema&lt;/a&gt; - a schema this rule is called from&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: object - a value to be validated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;results&lt;/strong&gt;: List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; - a list with validation results to add new results.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;WithRule&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;OrRule&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;ValueComparisonRule&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;LT&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;),&lt;/span&gt; 
                                              &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;ValueComparisonRule&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;GT&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;)));&lt;/span&gt;

&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;// Result: no error
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;// Result: 5 must be less than 1 or 5 must be more than 10
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;         &lt;span style=&#34;color:#75715e&#34;&gt;// Result: no error
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;ivalidationruleivalidation_rule&#34;&gt;&lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: PagingParamsSchema</title>
      <link>/net/commons/validate/paging_params_schema/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/commons/validate/paging_params_schema/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Inherits&lt;/strong&gt;: &lt;a href=&#34;../object_schema&#34;&gt;ObjectSchema&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The PagingParamsSchema class allows you to create a schema to validate &lt;a href=&#34;../../data/paging_params&#34;&gt;PagingParams&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; PagingParamsSchema()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;pagingparamsdatapaging_params&#34;&gt;&lt;a href=&#34;../../data/paging_params&#34;&gt;PagingParams&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: ProjectionParamsSchema</title>
      <link>/net/commons/validate/projection_params_schema/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/commons/validate/projection_params_schema/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Inherits&lt;/strong&gt;: &lt;a href=&#34;../array_schema&#34;&gt;ArraySchema&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ProjectionParamsSchema class allows you to create a schema to validate &lt;a href=&#34;../../data/projection_params&#34;&gt;ProjectionParams&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; ProjectionParamsSchema()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;projectionparamsdataprojection_params&#34;&gt;&lt;a href=&#34;../../data/projection_params&#34;&gt;ProjectionParams&lt;/a&gt;.&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: PropertiesComparisonRule</title>
      <link>/net/commons/validate/properties_comparison_rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/commons/validate/properties_comparison_rule/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Inherits&lt;/strong&gt;: &lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The PropertiesComparisonRule class allows you to create a validation rule to compare two object properties.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new validation rule and sets its arguments.
See &lt;a href=&#34;../object_comparator/#compare&#34;&gt;ObjectComparator.compare&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; PropertiesComparisonRule(string property1, string operation, string property2)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;property1&lt;/strong&gt;: string - a name of the first property to compare.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;operation&lt;/strong&gt;: string - a comparison operation: &lt;em&gt;&amp;quot;==&amp;quot; (&amp;quot;=&amp;quot;, &amp;ldquo;EQ&amp;rdquo;), &amp;ldquo;!= &amp;quot; (&amp;quot;&amp;lt;&amp;gt;&amp;rdquo;, &amp;ldquo;NE&amp;rdquo;); &amp;ldquo;&amp;lt;&amp;quot;/&amp;quot;&amp;gt;&amp;rdquo; (&amp;ldquo;LT&amp;rdquo;/&amp;ldquo;GT&amp;rdquo;), &amp;ldquo;&amp;lt;=&amp;quot;/&amp;quot;&amp;gt;=&amp;rdquo; (&amp;ldquo;LE&amp;rdquo;/&amp;ldquo;GE&amp;rdquo;); &amp;ldquo;LIKE&amp;rdquo;&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;property2&lt;/strong&gt;: string - a name of the second property to compare.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;validate&#34;&gt;Validate&lt;/h4&gt;
&lt;p&gt;Validates a given value against this rule.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; void Validate(string path, &lt;a href=&#34;../schema&#34;&gt;Schema&lt;/a&gt; schema, object value, List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; results)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;path&lt;/strong&gt;: string - a dot notation path to the value.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;schema&lt;/strong&gt;: &lt;a href=&#34;../schema&#34;&gt;Schema&lt;/a&gt; - a schema this rule is called from&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: object - a value to be validated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;results&lt;/strong&gt;: List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; - a list with validation results to add new results.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;ObjectSchema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;WithRule&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;PropertyComparisonRule&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;field1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;NE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;field2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;));&lt;/span&gt;

&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;field1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;field2&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;});&lt;/span&gt;       &lt;span style=&#34;color:#75715e&#34;&gt;// Result: no errors
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;field1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;field2&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;});&lt;/span&gt;       &lt;span style=&#34;color:#75715e&#34;&gt;// Result: field1 shall not be equal to field2
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;});&lt;/span&gt;                             &lt;span style=&#34;color:#75715e&#34;&gt;// Result: no errors
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;ivalidationruleivalidation_rule&#34;&gt;&lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: PropertySchema</title>
      <link>/net/commons/validate/property_schema/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/commons/validate/property_schema/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Inherits&lt;/strong&gt;: &lt;a href=&#34;../schema&#34;&gt;Schema&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The PropertySchema class allows you to create schemas to validate object properties.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new validation rule and sets its arguments.
See &lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;, &lt;a href=&#34;../convert/type_code&#34;&gt;TypeCode&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; PropertySchema(string name, object type)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;: string - (optional) a property name&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;type&lt;/strong&gt;: object - (optional) a property type&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Creates a new validation schema.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; PropertySchema()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;properties&#34;&gt;Properties&lt;/h3&gt;
&lt;h4 id=&#34;name&#34;&gt;Name&lt;/h4&gt;
&lt;p&gt;Gets and sets the property name.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; string Name { get; set; }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;type&#34;&gt;Type&lt;/h4&gt;
&lt;p&gt;Gets and sets the property type.
The type can be defined as type, type name or &lt;a href=&#34;../convert/type_code&#34;&gt;TypeCode&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; object Type { get; set; }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;performvalidation&#34;&gt;PerformValidation&lt;/h4&gt;
&lt;p&gt;Validates a given value against the schema and configured validation rules.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public internal override&lt;/code&gt; void PerformValidation(string path, object value, List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; results)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;path&lt;/strong&gt;: string - a dot notation path to the value.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: object - a value to be validated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;results&lt;/strong&gt;: List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; - a list with validation results to add new results.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;ObjectSchema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;WithProperty&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;PropertySchema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;TypeCode&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;));&lt;/span&gt;

&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;ABC&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;});&lt;/span&gt;       &lt;span style=&#34;color:#75715e&#34;&gt;// Result: no errors
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;ABC&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;});&lt;/span&gt;                &lt;span style=&#34;color:#75715e&#34;&gt;// Result: no errors
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;({&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;ABC&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;});&lt;/span&gt;         &lt;span style=&#34;color:#75715e&#34;&gt;// Result: id type mismatch
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;objectschemaobject_schema&#34;&gt;&lt;a href=&#34;../object_schema&#34;&gt;ObjectSchema&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: Schema</title>
      <link>/net/commons/validate/schema/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/commons/validate/schema/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The Schema class provides a basic schema to validate values against a set of validation rules.&lt;/p&gt;
&lt;p&gt;Important points&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This schema is used as a basis for specific schemas to validate objects, project properties, arrays and maps.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new instance of validation schema and sets its values.&lt;/p&gt;
&lt;p&gt;See &lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; Schema(bool required, List&amp;lt;&lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;&amp;gt; rules)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;required&lt;/strong&gt;: bool - (optional) true to always require non-null values.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;rules&lt;/strong&gt;: List&amp;lt;&lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;&amp;gt; - (optional) a list with validation rules.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;properties&#34;&gt;Properties&lt;/h3&gt;
&lt;h4 id=&#34;isrequired&#34;&gt;IsRequired&lt;/h4&gt;
&lt;p&gt;Gets and sets a flag that always requires non-null values.
For null values it raises a validation error.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; bool IsRequired { get; set; }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;rules&#34;&gt;Rules&lt;/h4&gt;
&lt;p&gt;Gets and sets validation rules to check values against.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; List&amp;lt;&lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;&amp;gt; Rules { get; set; }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;makeoptional&#34;&gt;MakeOptional&lt;/h4&gt;
&lt;p&gt;Makes validated values optional.
Validation for null values will be skipped.
This method returns reference to this exception to implement Builder pattern
to chain additional calls.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; &lt;a href=&#34;&#34;&gt;Schema&lt;/a&gt; MakeOptional()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;&#34;&gt;Schema&lt;/a&gt; - this validation schema&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;makerequired&#34;&gt;MakeRequired&lt;/h4&gt;
&lt;p&gt;Makes validated values always required (non-null).
For null values the schema will raise errors.
This method returns reference to this exception to implement Builder pattern
to chain additional calls.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; &lt;a href=&#34;&#34;&gt;Schema&lt;/a&gt; MakeRequired()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;&#34;&gt;Schema&lt;/a&gt; - this validation schema&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;performtypevalidation&#34;&gt;PerformTypeValidation&lt;/h4&gt;
&lt;p&gt;Validates a given value to match specified type.
The type can be defined as a Schema, type, a type name or &lt;a href=&#34;../convert/type_code&#34;&gt;TypeCode&lt;/a&gt;
When type is a Schema, it executes validation recursively against that Schema.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;protected&lt;/code&gt; void PerformTypeValidation(string path, object type, object value, List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; results)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;path&lt;/strong&gt;: string - a dot notation path to the value.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;type&lt;/strong&gt;: object - a type to match the value type&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: object - a value to be validated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;results&lt;/strong&gt;: &lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;[] - a list with validation results to add new results.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;performvalidation&#34;&gt;PerformValidation&lt;/h4&gt;
&lt;p&gt;Validates a given value against the schema and configured validation rules.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;protected internal override&lt;/code&gt; void PerformValidation(string path, object value, List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; results)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;path&lt;/strong&gt;: string - a dot notation path to the value.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: object - a value to be validated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;results&lt;/strong&gt;: List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; - a list with validation results to add new results.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;validate&#34;&gt;Validate&lt;/h4&gt;
&lt;p&gt;Validates the given value and results validation results.
See &lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; Validate(object value)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: object - a value to be validated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; - a list with validation results.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;validateandreturnexception&#34;&gt;ValidateAndReturnException!&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;TODO: this method is not realized yet for this language&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Validates the given value and returns a &lt;a href=&#34;../validation_exception&#34;&gt;ValidationException&lt;/a&gt; if errors were found.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; &lt;a href=&#34;../validation_exception&#34;&gt;ValidationException&lt;/a&gt; ValidateAndReturnException(string correlationId, object value, bool strict = false)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: string - (optional) transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: object -  a value to be validated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;strict&lt;/strong&gt;: bool - true to treat warnings as errors.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;../validation_exception&#34;&gt;ValidationException&lt;/a&gt; - validation exception.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;validateandthrowexception&#34;&gt;ValidateAndThrowException&lt;/h4&gt;
&lt;p&gt;Validates the given value and throws a &lt;a href=&#34;../validation_exception&#34;&gt;ValidationException&lt;/a&gt; if errors were found.&lt;br&gt;
See &lt;a href=&#34;../validation_exception/#throwexceptionifneeded&#34;&gt;ValidationException.throwExceptionIfNeeded&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; void ValidateAndThrowException(string correlationId, object value, bool strict = false)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: string - (optional) transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: object - a value to be validated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;strict&lt;/strong&gt;: bool - true to treat warnings as errors.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;withrule&#34;&gt;WithRule&lt;/h4&gt;
&lt;p&gt;Adds validation rule to this schema.
This method returns reference to this exception to implement Builder pattern
to chain additional calls.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; &lt;a href=&#34;&#34;&gt;Schema&lt;/a&gt; WithRule(&lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt; rule)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;rule&lt;/strong&gt;: &lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt; - a validation rule to be added.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;&#34;&gt;Schema&lt;/a&gt; - this validation schema.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;objectschemaobject_schema&#34;&gt;&lt;a href=&#34;../object_schema&#34;&gt;ObjectSchema&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;propertyschemaproperty_schema&#34;&gt;&lt;a href=&#34;../property_schema&#34;&gt;PropertySchema&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;arrayschemaarray_schema&#34;&gt;&lt;a href=&#34;../array_schema&#34;&gt;ArraySchema&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;mapschemamap_schema&#34;&gt;&lt;a href=&#34;../map_schema&#34;&gt;MapSchema&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: ValidationException</title>
      <link>/net/commons/validate/validation_exception/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/commons/validate/validation_exception/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Inherits&lt;/strong&gt;: &lt;a href=&#34;../../errors/bad_request_exception&#34;&gt;BadRequestException&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ValidationException is used to define errors in schema validation.&lt;/p&gt;
&lt;p&gt;Important points&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Validation errors are usually generated based in &lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;If using strict mode, warnings will also raise validation exceptions.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new instance of validation exception and assigns its values.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; ValidationException(string correlationId, string message, IList&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; results)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: string - (optional) a unique transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: string - (optional) a human-readable description of the error.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;results&lt;/strong&gt;: IList&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; - (optional) a list of validation results&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Creates a new instance of validation exception and assigns its values.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; ValidationException(string correlationId, string message)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: string - (optional) a unique transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: string - (optional) a human-readable description of the error.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;static-methods&#34;&gt;Static methods&lt;/h3&gt;
&lt;h4 id=&#34;composemessage&#34;&gt;ComposeMessage&lt;/h4&gt;
&lt;p&gt;Composes human readable error message based on validation results.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; string ComposeMessage(IList&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; results)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;results&lt;/strong&gt;: IList&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; - a list of validation results.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: string - a composed error message.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;fromresults&#34;&gt;FromResults!&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;TODO: this method is not realized yet for this language&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Creates a new ValidationException based on errors in validation results.
If validation results have no errors, than null is returned.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; &lt;a href=&#34;&#34;&gt;ValidationException&lt;/a&gt; FromResults(correlationId: string, IList&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; IList&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; results, bool strict)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: string - (optional) transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;results&lt;/strong&gt;: IList&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; -  list of validation results that may contain errors&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;strict&lt;/strong&gt;: bool - true to treat warnings as errors.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;returns&lt;/strong&gt;: &lt;a href=&#34;&#34;&gt;ValidationException&lt;/a&gt; - a newly created ValidationException or null if no errors in found.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;throwexceptionifneeded&#34;&gt;ThrowExceptionIfNeeded&lt;/h4&gt;
&lt;p&gt;Throws ValidationException based on errors in validation results.
If validation results have no errors, than no exception is thrown.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public static&lt;/code&gt; void ThrowExceptionIfNeeded(string correlationId, IList&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; results, bool strict)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;correlationId&lt;/strong&gt;: string - (optional) transaction id to trace execution through call chain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;results&lt;/strong&gt;: IList&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; - list of validation results that may contain errors&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;strict&lt;/strong&gt;: bool - true to treat warnings as errors.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;badrequestexceptionerrorsbad_request_exception&#34;&gt;&lt;a href=&#34;../../errors/bad_request_exception&#34;&gt;BadRequestException&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;h4 id=&#34;validationresultvalidation_result&#34;&gt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: ValidationResult</title>
      <link>/net/commons/validate/validation_result/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/commons/validate/validation_result/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ValidationResult class provides a representation of the result generated by a schema validation.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new instance of a validation ressult and sets its values.
See &lt;a href=&#34;../validation_result_type&#34;&gt;ValidationResultType&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; ValidationResult(string path, &lt;a href=&#34;../validation_result_type&#34;&gt;ValidationResultType&lt;/a&gt; type, string code, string message,  object expected, object actual)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;path&lt;/strong&gt;: string - a dot notation path of the validated element.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;type&lt;/strong&gt;: &lt;a href=&#34;../validation_result_type&#34;&gt;ValidationResultType&lt;/a&gt; = null - a type of the validation result: Information, Warning, or Error.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;code&lt;/strong&gt;: string - an error code.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;message&lt;/strong&gt;: string - a human readable message.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;expected&lt;/strong&gt;: object - an value expected by schema validation.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;actual&lt;/strong&gt;: object - an actual value found by schema validation.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Creates a new instance of validation result.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; ValidationResult()&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;properties&#34;&gt;Properties&lt;/h3&gt;
&lt;h4 id=&#34;path&#34;&gt;Path&lt;/h4&gt;
&lt;p&gt;Gets and sets dot notation path of the validated element.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; string Path { get; set; }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;type&#34;&gt;Type&lt;/h4&gt;
&lt;p&gt;Gets and sets dot notation path of the validated element.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; &lt;a href=&#34;../validation_result_type&#34;&gt;ValidationResultType&lt;/a&gt; Type { get; set; }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;code&#34;&gt;Code&lt;/h4&gt;
&lt;p&gt;Gets and sets the error code.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt;string Code { get; set; }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;message&#34;&gt;Message&lt;/h4&gt;
&lt;p&gt;Gets and sets the human readable message.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt;string Message { get; set; }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;expected&#34;&gt;Expected&lt;/h4&gt;
&lt;p&gt;Gets and sets the value expected by schema validation.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt;object Expected { get; set; }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;actual&#34;&gt;Actual&lt;/h4&gt;
&lt;p&gt;Gets and sets the actual value found by schema validation.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt;object Actual { get; set; }&lt;/p&gt;
&lt;/blockquote&gt;

      </description>
    </item>
    
    <item>
      <title>Net: ValidationResultType</title>
      <link>/net/commons/validate/validation_result_type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/commons/validate/validation_result_type/</guid>
      <description>
        
        
        &lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ValidationResultType class defines the types of validation results generated by validation schemas.&lt;/p&gt;
&lt;h3 id=&#34;enumeration-members&#34;&gt;Enumeration members&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Information&lt;/strong&gt; = 0 - General information (not an error).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Warning&lt;/strong&gt; = 1 - Warning about something suspecious. In strict mode is treated as error&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Error&lt;/strong&gt; = 2 - Validation error.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;validationresultvalidation_result&#34;&gt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Net: ValueComparisonRule</title>
      <link>/net/commons/validate/value_comparison_rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/net/commons/validate/value_comparison_rule/</guid>
      <description>
        
        
        &lt;p&gt;&lt;strong&gt;Inherits&lt;/strong&gt;: &lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;description&#34;&gt;Description&lt;/h3&gt;
&lt;p&gt;The ValueComparisonRule class allows you to create a validation rule that compares a value to a constant.&lt;/p&gt;
&lt;h3 id=&#34;constructors&#34;&gt;Constructors&lt;/h3&gt;
&lt;p&gt;Creates a new validation rule and sets its values.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; ValueComparisonRule(string operation, object value)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;operation&lt;/strong&gt;: string - a comparison operation: &lt;em&gt;&amp;quot;==&amp;quot; (&amp;quot;=&amp;quot;, &amp;ldquo;EQ&amp;rdquo;), &amp;ldquo;!= &amp;quot; (&amp;quot;&amp;lt;&amp;gt;&amp;rdquo;, &amp;ldquo;NE&amp;rdquo;); &amp;ldquo;&amp;lt;&amp;quot;/&amp;quot;&amp;gt;&amp;rdquo; (&amp;ldquo;LT&amp;rdquo;/&amp;ldquo;GT&amp;rdquo;), &amp;ldquo;&amp;lt;=&amp;quot;/&amp;quot;&amp;gt;=&amp;rdquo; (&amp;ldquo;LE&amp;rdquo;/&amp;ldquo;GE&amp;rdquo;); &amp;ldquo;LIKE&amp;rdquo;&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: object - a constant value to compare to&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;instance-methods&#34;&gt;Instance methods&lt;/h3&gt;
&lt;h4 id=&#34;validate&#34;&gt;Validate&lt;/h4&gt;
&lt;p&gt;Validates a given value against this rule.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;public&lt;/code&gt; void Validate(string path, &lt;a href=&#34;../schema&#34;&gt;Schema&lt;/a&gt; schema, object value, List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; results)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;path&lt;/strong&gt;: string - a dot notation path to the value.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;schema&lt;/strong&gt;: &lt;a href=&#34;../schema&#34;&gt;Schema&lt;/a&gt; - a schema this rule is called from&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;value&lt;/strong&gt;: object - a value to be validated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;results&lt;/strong&gt;: List&amp;lt;&lt;a href=&#34;../validation_result&#34;&gt;ValidationResult&lt;/a&gt;&amp;gt; - a list with validation results to add new results.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;examples&#34;&gt;Examples&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-cs&#34; data-lang=&#34;cs&#34;&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;Schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;WithRule&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#00a8c8&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#111&#34;&gt;ValueComparisonRule&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#d88200&#34;&gt;&amp;#34;EQ&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;));&lt;/span&gt;

&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;// Result: no errors
&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;Validate&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#111&#34;&gt;);&lt;/span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;// Result: 2 is not equal to 1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;see-also&#34;&gt;See also&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;h4 id=&#34;ivalidationruleivalidation_rule&#34;&gt;&lt;a href=&#34;../ivalidation_rule&#34;&gt;IValidationRule&lt;/a&gt;&lt;/h4&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
  </channel>
</rss>
